{"version":3,"file":"claim.js","sources":["../node_modules/preact/dist/preact.mjs","../node_modules/preact/hooks/dist/hooks.mjs","../node_modules/preact/compat/dist/compat.mjs","../node_modules/@fullcalendar/core/internal-common.js","../node_modules/@fullcalendar/core/index.js","../node_modules/ical.js/dist/ical.js","../src/claim.ts"],"sourcesContent":["var n,l,u,i,t,r,o,f,e,c={},s=[],a=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function h(n,l){for(var u in l)n[u]=l[u];return n}function v(n){var l=n.parentNode;l&&l.removeChild(n)}function y(l,u,i){var t,r,o,f={};for(o in u)\"key\"==o?t=u[o]:\"ref\"==o?r=u[o]:f[o]=u[o];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(o in l.defaultProps)void 0===f[o]&&(f[o]=l.defaultProps[o]);return p(l,f,t,r,null)}function p(n,i,t,r,o){var f={type:n,props:i,key:t,ref:r,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++u:o};return null==o&&null!=l.vnode&&l.vnode(f),f}function d(){return{current:null}}function _(n){return n.children}function k(n,l,u,i,t){var r;for(r in u)\"children\"===r||\"key\"===r||r in l||g(n,r,null,u[r],i);for(r in l)t&&\"function\"!=typeof l[r]||\"children\"===r||\"key\"===r||\"value\"===r||\"checked\"===r||u[r]===l[r]||g(n,r,l[r],u[r],i)}function b(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a.test(l)?u:u+\"px\"}function g(n,l,u,i,t){var r;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||b(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||b(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])r=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+r]=u,u?i||n.addEventListener(l,r?w:m,r):n.removeEventListener(l,r?w:m,r);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&-1==l.indexOf(\"-\")?n.removeAttribute(l):n.setAttribute(l,u))}}function m(n){t=!0;try{return this.l[n.type+!1](l.event?l.event(n):n)}finally{t=!1}}function w(n){t=!0;try{return this.l[n.type+!0](l.event?l.event(n):n)}finally{t=!1}}function x(n,l){this.props=n,this.context=l}function A(n,l){if(null==l)return n.__?A(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?A(n):null}function P(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return P(n)}}function C(n){t?setTimeout(n):f(n)}function T(n){(!n.__d&&(n.__d=!0)&&r.push(n)&&!$.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||C)($)}function $(){var n,l,u,i,t,o,f,e;for(r.sort(function(n,l){return n.__v.__b-l.__v.__b});n=r.shift();)n.__d&&(l=r.length,i=void 0,t=void 0,f=(o=(u=n).__v).__e,(e=u.__P)&&(i=[],(t=h({},o)).__v=o.__v+1,M(e,o,t,u.__n,void 0!==e.ownerSVGElement,null!=o.__h?[f]:null,i,null==f?A(o):f,o.__h),N(i,o),o.__e!=f&&P(o)),r.length>l&&r.sort(function(n,l){return n.__v.__b-l.__v.__b}));$.__r=0}function H(n,l,u,i,t,r,o,f,e,a){var h,v,y,d,k,b,g,m=i&&i.__k||s,w=m.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(d=u.__k[h]=null==(d=l[h])||\"boolean\"==typeof d?null:\"string\"==typeof d||\"number\"==typeof d||\"bigint\"==typeof d?p(null,d,null,null,d):Array.isArray(d)?p(_,{children:d},null,null,null):d.__b>0?p(d.type,d.props,d.key,d.ref?d.ref:null,d.__v):d)){if(d.__=u,d.__b=u.__b+1,null===(y=m[h])||y&&d.key==y.key&&d.type===y.type)m[h]=void 0;else for(v=0;v<w;v++){if((y=m[v])&&d.key==y.key&&d.type===y.type){m[v]=void 0;break}y=null}M(n,d,y=y||c,t,r,o,f,e,a),k=d.__e,(v=d.ref)&&y.ref!=v&&(g||(g=[]),y.ref&&g.push(y.ref,null,d),g.push(v,d.__c||k,d)),null!=k?(null==b&&(b=k),\"function\"==typeof d.type&&d.__k===y.__k?d.__d=e=I(d,e,n):e=z(n,d,y,m,k,e),\"function\"==typeof u.type&&(u.__d=e)):e&&y.__e==e&&e.parentNode!=n&&(e=A(y))}for(u.__e=b,h=w;h--;)null!=m[h]&&(\"function\"==typeof u.type&&null!=m[h].__e&&m[h].__e==u.__d&&(u.__d=L(i).nextSibling),q(m[h],m[h]));if(g)for(h=0;h<g.length;h++)S(g[h],g[++h],g[++h])}function I(n,l,u){for(var i,t=n.__k,r=0;t&&r<t.length;r++)(i=t[r])&&(i.__=n,l=\"function\"==typeof i.type?I(i,l,u):z(u,i,i,t,i.__e,l));return l}function j(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){j(n,l)}):l.push(n)),l}function z(n,l,u,i,t,r){var o,f,e;if(void 0!==l.__d)o=l.__d,l.__d=void 0;else if(null==u||t!=r||null==t.parentNode)n:if(null==r||r.parentNode!==n)n.appendChild(t),o=null;else{for(f=r,e=0;(f=f.nextSibling)&&e<i.length;e+=1)if(f==t)break n;n.insertBefore(t,r),o=r}return void 0!==o?o:t.nextSibling}function L(n){var l,u,i;if(null==n.type||\"string\"==typeof n.type)return n.__e;if(n.__k)for(l=n.__k.length-1;l>=0;l--)if((u=n.__k[l])&&(i=L(u)))return i;return null}function M(n,u,i,t,r,o,f,e,c){var s,a,v,y,p,d,k,b,g,m,w,A,P,C,T,$=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,o=[e]),(s=l.__b)&&s(u);try{n:if(\"function\"==typeof $){if(b=u.props,g=(s=$.contextType)&&t[s.__c],m=s?g?g.props.value:s.__:t,i.__c?k=(a=u.__c=i.__c).__=a.__E:(\"prototype\"in $&&$.prototype.render?u.__c=a=new $(b,m):(u.__c=a=new x(b,m),a.constructor=$,a.render=B),g&&g.sub(a),a.props=b,a.state||(a.state={}),a.context=m,a.__n=t,v=a.__d=!0,a.__h=[],a._sb=[]),null==a.__s&&(a.__s=a.state),null!=$.getDerivedStateFromProps&&(a.__s==a.state&&(a.__s=h({},a.__s)),h(a.__s,$.getDerivedStateFromProps(b,a.__s))),y=a.props,p=a.state,a.__v=u,v)null==$.getDerivedStateFromProps&&null!=a.componentWillMount&&a.componentWillMount(),null!=a.componentDidMount&&a.__h.push(a.componentDidMount);else{if(null==$.getDerivedStateFromProps&&b!==y&&null!=a.componentWillReceiveProps&&a.componentWillReceiveProps(b,m),!a.__e&&null!=a.shouldComponentUpdate&&!1===a.shouldComponentUpdate(b,a.__s,m)||u.__v===i.__v){for(u.__v!==i.__v&&(a.props=b,a.state=a.__s,a.__d=!1),u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),w=0;w<a._sb.length;w++)a.__h.push(a._sb[w]);a._sb=[],a.__h.length&&f.push(a);break n}null!=a.componentWillUpdate&&a.componentWillUpdate(b,a.__s,m),null!=a.componentDidUpdate&&a.__h.push(function(){a.componentDidUpdate(y,p,d)})}if(a.context=m,a.props=b,a.__P=n,A=l.__r,P=0,\"prototype\"in $&&$.prototype.render){for(a.state=a.__s,a.__d=!1,A&&A(u),s=a.render(a.props,a.state,a.context),C=0;C<a._sb.length;C++)a.__h.push(a._sb[C]);a._sb=[]}else do{a.__d=!1,A&&A(u),s=a.render(a.props,a.state,a.context),a.state=a.__s}while(a.__d&&++P<25);a.state=a.__s,null!=a.getChildContext&&(t=h(h({},t),a.getChildContext())),v||null==a.getSnapshotBeforeUpdate||(d=a.getSnapshotBeforeUpdate(y,p)),T=null!=s&&s.type===_&&null==s.key?s.props.children:s,H(n,Array.isArray(T)?T:[T],u,i,t,r,o,f,e,c),a.base=u.__e,u.__h=null,a.__h.length&&f.push(a),k&&(a.__E=a.__=null),a.__e=!1}else null==o&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=O(i.__e,u,i,t,r,o,f,c);(s=l.diffed)&&s(u)}catch(n){u.__v=null,(c||null!=o)&&(u.__e=e,u.__h=!!c,o[o.indexOf(e)]=null),l.__e(n,u,i)}}function N(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function O(l,u,i,t,r,o,f,e){var s,a,h,y=i.props,p=u.props,d=u.type,_=0;if(\"svg\"===d&&(r=!0),null!=o)for(;_<o.length;_++)if((s=o[_])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,o[_]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=r?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),o=null,e=!1}if(null===d)y===p||e&&l.data===p||(l.data=p);else{if(o=o&&n.call(l.childNodes),a=(y=i.props||c).dangerouslySetInnerHTML,h=p.dangerouslySetInnerHTML,!e){if(null!=o)for(y={},_=0;_<l.attributes.length;_++)y[l.attributes[_].name]=l.attributes[_].value;(h||a)&&(h&&(a&&h.__html==a.__html||h.__html===l.innerHTML)||(l.innerHTML=h&&h.__html||\"\"))}if(k(l,p,y,r,e),h)u.__k=[];else if(_=u.props.children,H(l,Array.isArray(_)?_:[_],u,i,t,r&&\"foreignObject\"!==d,o,f,o?o[0]:i.__k&&A(i,0),e),null!=o)for(_=o.length;_--;)null!=o[_]&&v(o[_]);e||(\"value\"in p&&void 0!==(_=p.value)&&(_!==l.value||\"progress\"===d&&!_||\"option\"===d&&_!==y.value)&&g(l,\"value\",_,y.value,!1),\"checked\"in p&&void 0!==(_=p.checked)&&_!==l.checked&&g(l,\"checked\",_,y.checked,!1))}return l}function S(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function q(n,u,i){var t,r;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||S(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(r=0;r<t.length;r++)t[r]&&q(t[r],u,i||\"function\"!=typeof n.type);i||null==n.__e||v(n.__e),n.__=n.__e=n.__d=void 0}function B(n,l,u){return this.constructor(n,u)}function D(u,i,t){var r,o,f;l.__&&l.__(u,i),o=(r=\"function\"==typeof t)?null:t&&t.__k||i.__k,f=[],M(i,u=(!r&&t||i).__k=y(_,null,[u]),o||c,c,void 0!==i.ownerSVGElement,!r&&t?[t]:o?null:i.firstChild?n.call(i.childNodes):null,f,!r&&t?t:o?o.__e:i.firstChild,r),N(f,u)}function E(n,l){D(n,l,E)}function F(l,u,i){var t,r,o,f=h({},l.props);for(o in u)\"key\"==o?t=u[o]:\"ref\"==o?r=u[o]:f[o]=u[o];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),p(l.type,f,t||l.key,r||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+e++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,T(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=s.slice,l={__e:function(n,l,u,i){for(var t,r,o;l=l.__;)if((t=l.__c)&&!t.__)try{if((r=t.constructor)&&null!=r.getDerivedStateFromError&&(t.setState(r.getDerivedStateFromError(n)),o=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),o=t.__d),o)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},t=!1,x.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=h({},this.state),\"function\"==typeof n&&(n=n(h({},u),this.props)),n&&h(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),T(this))},x.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),T(this))},x.prototype.render=_,r=[],f=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,$.__r=0,e=0;export{x as Component,_ as Fragment,F as cloneElement,G as createContext,y as createElement,d as createRef,y as h,E as hydrate,i as isValidElement,l as options,D as render,j as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:c}),i.__[t]}function p(n){return o=1,y(B,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var f=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!f||f.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==f.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\"function\"==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,h as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,s as useLayoutEffect,F as useMemo,y as useReducer,_ as useRef,p as useState};\n//# sourceMappingURL=hooks.module.js.map\n","import{Component as n,createElement as t,options as e,toChildArray as r,Fragment as u,render as o,hydrate as i,createContext as l,createRef as c,cloneElement as f}from\"preact\";export{Component,Fragment,createContext,createElement,createRef}from\"preact\";import{useState as a,useId as s,useReducer as h,useEffect as v,useLayoutEffect as d,useRef as p,useImperativeHandle as m,useMemo as y,useCallback as _,useContext as b,useDebugValue as S}from\"preact/hooks\";export*from\"preact/hooks\";function g(n,t){for(var e in t)n[e]=t[e];return n}function C(n,t){for(var e in n)if(\"__source\"!==e&&!(e in t))return!0;for(var r in t)if(\"__source\"!==r&&n[r]!==t[r])return!0;return!1}function E(n,t){return n===t&&(0!==n||1/n==1/t)||n!=n&&t!=t}function w(n){this.props=n}function R(n,e){function r(n){var t=this.props.ref,r=t==n.ref;return!r&&t&&(t.call?t(null):t.current=null),e?!e(this.props,n)||!r:C(this.props,n)}function u(e){return this.shouldComponentUpdate=r,t(n,e)}return u.displayName=\"Memo(\"+(n.displayName||n.name)+\")\",u.prototype.isReactComponent=!0,u.__f=!0,u}(w.prototype=new n).isPureReactComponent=!0,w.prototype.shouldComponentUpdate=function(n,t){return C(this.props,n)||C(this.state,t)};var x=e.__b;e.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),x&&x(n)};var N=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.forward_ref\")||3911;function k(n){function t(t){var e=g({},t);return delete e.ref,n(e,t.ref||null)}return t.$$typeof=N,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName=\"ForwardRef(\"+(n.displayName||n.name)+\")\",t}var A=function(n,t){return null==n?null:r(r(n).map(t))},O={map:A,forEach:A,count:function(n){return n?r(n).length:0},only:function(n){var t=r(n);if(1!==t.length)throw\"Children.only\";return t[0]},toArray:r},T=e.__e;e.__e=function(n,t,e,r){if(n.then)for(var u,o=t;o=o.__;)if((u=o.__c)&&u.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),u.__c(n,t);T(n,t,e,r)};var I=e.unmount;function L(n,t,e){return n&&(n.__c&&n.__c.__H&&(n.__c.__H.__.forEach(function(n){\"function\"==typeof n.__c&&n.__c()}),n.__c.__H=null),null!=(n=g({},n)).__c&&(n.__c.__P===e&&(n.__c.__P=t),n.__c=null),n.__k=n.__k&&n.__k.map(function(n){return L(n,t,e)})),n}function U(n,t,e){return n&&(n.__v=null,n.__k=n.__k&&n.__k.map(function(n){return U(n,t,e)}),n.__c&&n.__c.__P===t&&(n.__e&&e.insertBefore(n.__e,n.__d),n.__c.__e=!0,n.__c.__P=e)),n}function D(){this.__u=0,this.t=null,this.__b=null}function F(n){var t=n.__.__c;return t&&t.__a&&t.__a(n)}function M(n){var e,r,u;function o(o){if(e||(e=n()).then(function(n){r=n.default||n},function(n){u=n}),u)throw u;if(!r)throw e;return t(r,o)}return o.displayName=\"Lazy\",o.__f=!0,o}function V(){this.u=null,this.o=null}e.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&!0===n.__h&&(n.type=null),I&&I(n)},(D.prototype=new n).__c=function(n,t){var e=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(e);var u=F(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l())};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__a){var n=r.state.__a;r.__v.__k[0]=U(n,n.__c.__P,n.__c.__O)}var t;for(r.setState({__a:r.__b=null});t=r.t.pop();)t.forceUpdate()}},c=!0===t.__h;r.__u++||c||r.setState({__a:r.__b=r.__v.__k[0]}),n.then(i,i)},D.prototype.componentWillUnmount=function(){this.t=[]},D.prototype.render=function(n,e){if(this.__b){if(this.__v.__k){var r=document.createElement(\"div\"),o=this.__v.__k[0].__c;this.__v.__k[0]=L(this.__b,r,o.__O=o.__P)}this.__b=null}var i=e.__a&&t(u,null,n.fallback);return i&&(i.__h=null),[t(u,null,e.__a?null:n.children),i]};var W=function(n,t,e){if(++e[1]===e[0]&&n.o.delete(t),n.props.revealOrder&&(\"t\"!==n.props.revealOrder[0]||!n.o.size))for(e=n.u;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.u=e=e[2]}};function P(n){return this.getChildContext=function(){return n.context},n.children}function $(n){var e=this,r=n.i;e.componentWillUnmount=function(){o(null,e.l),e.l=null,e.i=null},e.i&&e.i!==r&&e.componentWillUnmount(),n.__v?(e.l||(e.i=r,e.l={nodeType:1,parentNode:r,childNodes:[],appendChild:function(n){this.childNodes.push(n),e.i.appendChild(n)},insertBefore:function(n,t){this.childNodes.push(n),e.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.i.removeChild(n)}}),o(t(P,{context:e.context},n.__v),e.l)):e.l&&e.componentWillUnmount()}function j(n,e){var r=t($,{__v:n,i:e});return r.containerInfo=e,r}(V.prototype=new n).__a=function(n){var t=this,e=F(t.__v),r=t.o.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),W(t,n,r)):u()};e?e(o):o()}},V.prototype.render=function(n){this.u=null,this.o=new Map;var t=r(n.children);n.revealOrder&&\"b\"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.o.set(t[e],this.u=[1,0,this.u]);return n.children},V.prototype.componentDidUpdate=V.prototype.componentDidMount=function(){var n=this;this.o.forEach(function(t,e){W(n,e,t)})};var z=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103,B=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,H=\"undefined\"!=typeof document,Z=function(n){return(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol()?/fil|che|rad/i:/fil|che|ra/i).test(n)};function Y(n,t,e){return null==t.__k&&(t.textContent=\"\"),o(n,t),\"function\"==typeof e&&e(),n?n.__c:null}function q(n,t,e){return i(n,t),\"function\"==typeof e&&e(),n?n.__c:null}n.prototype.isReactComponent={},[\"componentWillMount\",\"componentWillReceiveProps\",\"componentWillUpdate\"].forEach(function(t){Object.defineProperty(n.prototype,t,{configurable:!0,get:function(){return this[\"UNSAFE_\"+t]},set:function(n){Object.defineProperty(this,t,{configurable:!0,writable:!0,value:n})}})});var G=e.event;function J(){}function K(){return this.cancelBubble}function Q(){return this.defaultPrevented}e.event=function(n){return G&&(n=G(n)),n.persist=J,n.isPropagationStopped=K,n.isDefaultPrevented=Q,n.nativeEvent=n};var X,nn={configurable:!0,get:function(){return this.class}},tn=e.vnode;e.vnode=function(n){var t=n.type,e=n.props,u=e;if(\"string\"==typeof t){var o=-1===t.indexOf(\"-\");for(var i in u={},e){var l=e[i];H&&\"children\"===i&&\"noscript\"===t||\"value\"===i&&\"defaultValue\"in e&&null==l||(\"defaultValue\"===i&&\"value\"in e&&null==e.value?i=\"value\":\"download\"===i&&!0===l?l=\"\":/ondoubleclick/i.test(i)?i=\"ondblclick\":/^onchange(textarea|input)/i.test(i+t)&&!Z(e.type)?i=\"oninput\":/^onfocus$/i.test(i)?i=\"onfocusin\":/^onblur$/i.test(i)?i=\"onfocusout\":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)?i=i.toLowerCase():o&&B.test(i)?i=i.replace(/[A-Z0-9]/g,\"-$&\").toLowerCase():null===l&&(l=void 0),/^oninput$/i.test(i)&&(i=i.toLowerCase(),u[i]&&(i=\"oninputCapture\")),u[i]=l)}\"select\"==t&&u.multiple&&Array.isArray(u.value)&&(u.value=r(e.children).forEach(function(n){n.props.selected=-1!=u.value.indexOf(n.props.value)})),\"select\"==t&&null!=u.defaultValue&&(u.value=r(e.children).forEach(function(n){n.props.selected=u.multiple?-1!=u.defaultValue.indexOf(n.props.value):u.defaultValue==n.props.value})),n.props=u,e.class!=e.className&&(nn.enumerable=\"className\"in e,null!=e.className&&(u.class=e.className),Object.defineProperty(u,\"className\",nn))}n.$$typeof=z,tn&&tn(n)};var en=e.__r;e.__r=function(n){en&&en(n),X=n.__c};var rn={ReactCurrentDispatcher:{current:{readContext:function(n){return X.__n[n.__c].props.value}}}},un=\"17.0.2\";function on(n){return t.bind(null,n)}function ln(n){return!!n&&n.$$typeof===z}function cn(n){return ln(n)?f.apply(null,arguments):n}function fn(n){return!!n.__k&&(o(null,n),!0)}function an(n){return n&&(n.base||1===n.nodeType&&n)||null}var sn=function(n,t){return n(t)},hn=function(n,t){return n(t)},vn=u;function dn(n){n()}function pn(n){return n}function mn(){return[!1,dn]}var yn=d;function _n(n,t){var e=t(),r=a({h:{__:e,v:t}}),u=r[0].h,o=r[1];return d(function(){u.__=e,u.v=t,E(u.__,t())||o({h:u})},[n,e,t]),v(function(){return E(u.__,u.v())||o({h:u}),n(function(){E(u.__,u.v())||o({h:u})})},[n]),e}var bn={useState:a,useId:s,useReducer:h,useEffect:v,useLayoutEffect:d,useInsertionEffect:yn,useTransition:mn,useDeferredValue:pn,useSyncExternalStore:_n,startTransition:dn,useRef:p,useImperativeHandle:m,useMemo:y,useCallback:_,useContext:b,useDebugValue:S,version:\"17.0.2\",Children:O,render:Y,hydrate:q,unmountComponentAtNode:fn,createPortal:j,createElement:t,createContext:l,createFactory:on,cloneElement:cn,createRef:c,Fragment:u,isValidElement:ln,findDOMNode:an,Component:n,PureComponent:w,memo:R,forwardRef:k,flushSync:hn,unstable_batchedUpdates:sn,StrictMode:vn,Suspense:D,SuspenseList:V,lazy:M,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:rn};export{O as Children,w as PureComponent,vn as StrictMode,D as Suspense,V as SuspenseList,rn as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,cn as cloneElement,on as createFactory,j as createPortal,bn as default,an as findDOMNode,hn as flushSync,k as forwardRef,q as hydrate,ln as isValidElement,M as lazy,R as memo,Y as render,dn as startTransition,fn as unmountComponentAtNode,sn as unstable_batchedUpdates,pn as useDeferredValue,yn as useInsertionEffect,_n as useSyncExternalStore,mn as useTransition,un as version};\n//# sourceMappingURL=compat.module.js.map\n","import * as preact from 'preact';\nimport { Component, createElement, isValidElement, Fragment } from 'preact';\nimport { createPortal } from 'preact/compat';\n\nconst styleTexts = [];\nconst styleEls = new Map();\nfunction injectStyles(styleText) {\n    styleTexts.push(styleText);\n    styleEls.forEach((styleEl) => {\n        appendStylesTo(styleEl, styleText);\n    });\n}\nfunction ensureElHasStyles(el) {\n    if (el.isConnected && // sometimes true if SSR system simulates DOM\n        el.getRootNode // sometimes undefined if SSR system simulates DOM\n    ) {\n        registerStylesRoot(el.getRootNode());\n    }\n}\nfunction registerStylesRoot(rootNode) {\n    let styleEl = styleEls.get(rootNode);\n    if (!styleEl || !styleEl.isConnected) {\n        styleEl = rootNode.querySelector('style[data-fullcalendar]');\n        if (!styleEl) {\n            styleEl = document.createElement('style');\n            styleEl.setAttribute('data-fullcalendar', '');\n            const nonce = getNonceValue();\n            if (nonce) {\n                styleEl.nonce = nonce;\n            }\n            const parentEl = rootNode === document ? document.head : rootNode;\n            const insertBefore = rootNode === document\n                ? parentEl.querySelector('script,link[rel=stylesheet],link[as=style],style')\n                : parentEl.firstChild;\n            parentEl.insertBefore(styleEl, insertBefore);\n        }\n        styleEls.set(rootNode, styleEl);\n        hydrateStylesRoot(styleEl);\n    }\n}\nfunction hydrateStylesRoot(styleEl) {\n    for (const styleText of styleTexts) {\n        appendStylesTo(styleEl, styleText);\n    }\n}\nfunction appendStylesTo(styleEl, styleText) {\n    const { sheet } = styleEl;\n    const ruleCnt = sheet.cssRules.length;\n    styleText.split('}').forEach((styleStr, i) => {\n        styleStr = styleStr.trim();\n        if (styleStr) {\n            sheet.insertRule(styleStr + '}', ruleCnt + i);\n        }\n    });\n}\n// nonce\n// -------------------------------------------------------------------------------------------------\nlet queriedNonceValue;\nfunction getNonceValue() {\n    if (queriedNonceValue === undefined) {\n        queriedNonceValue = queryNonceValue();\n    }\n    return queriedNonceValue;\n}\n/*\nTODO: discourage meta tag and instead put nonce attribute on placeholder <style> tag\n*/\nfunction queryNonceValue() {\n    const metaWithNonce = document.querySelector('meta[name=\"csp-nonce\"]');\n    if (metaWithNonce && metaWithNonce.hasAttribute('content')) {\n        return metaWithNonce.getAttribute('content');\n    }\n    const elWithNonce = document.querySelector('script[nonce]');\n    if (elWithNonce) {\n        return elWithNonce.nonce || '';\n    }\n    return '';\n}\n// main\n// -------------------------------------------------------------------------------------------------\nif (typeof document !== 'undefined') {\n    registerStylesRoot(document);\n}\n\nvar css_248z = \":root{--fc-small-font-size:.85em;--fc-page-bg-color:#fff;--fc-neutral-bg-color:hsla(0,0%,82%,.3);--fc-neutral-text-color:grey;--fc-border-color:#ddd;--fc-button-text-color:#fff;--fc-button-bg-color:#2c3e50;--fc-button-border-color:#2c3e50;--fc-button-hover-bg-color:#1e2b37;--fc-button-hover-border-color:#1a252f;--fc-button-active-bg-color:#1a252f;--fc-button-active-border-color:#151e27;--fc-event-bg-color:#3788d8;--fc-event-border-color:#3788d8;--fc-event-text-color:#fff;--fc-event-selected-overlay-color:rgba(0,0,0,.25);--fc-more-link-bg-color:#d0d0d0;--fc-more-link-text-color:inherit;--fc-event-resizer-thickness:8px;--fc-event-resizer-dot-total-width:8px;--fc-event-resizer-dot-border-width:1px;--fc-non-business-color:hsla(0,0%,84%,.3);--fc-bg-event-color:#8fdf82;--fc-bg-event-opacity:0.3;--fc-highlight-color:rgba(188,232,241,.3);--fc-today-bg-color:rgba(255,220,40,.15);--fc-now-indicator-color:red}.fc-not-allowed,.fc-not-allowed .fc-event{cursor:not-allowed}.fc{display:flex;flex-direction:column;font-size:1em}.fc,.fc *,.fc :after,.fc :before{box-sizing:border-box}.fc table{border-collapse:collapse;border-spacing:0;font-size:1em}.fc th{text-align:center}.fc td,.fc th{padding:0;vertical-align:top}.fc a[data-navlink]{cursor:pointer}.fc a[data-navlink]:hover{text-decoration:underline}.fc-direction-ltr{direction:ltr;text-align:left}.fc-direction-rtl{direction:rtl;text-align:right}.fc-theme-standard td,.fc-theme-standard th{border:1px solid var(--fc-border-color)}.fc-liquid-hack td,.fc-liquid-hack th{position:relative}@font-face{font-family:fcicons;font-style:normal;font-weight:400;src:url(\\\"data:application/x-font-ttf;charset=utf-8;base64,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\\\") format(\\\"truetype\\\")}.fc-icon{speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:inline-block;font-family:fcicons!important;font-style:normal;font-variant:normal;font-weight:400;height:1em;line-height:1;text-align:center;text-transform:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:1em}.fc-icon-chevron-left:before{content:\\\"\\\\e900\\\"}.fc-icon-chevron-right:before{content:\\\"\\\\e901\\\"}.fc-icon-chevrons-left:before{content:\\\"\\\\e902\\\"}.fc-icon-chevrons-right:before{content:\\\"\\\\e903\\\"}.fc-icon-minus-square:before{content:\\\"\\\\e904\\\"}.fc-icon-plus-square:before{content:\\\"\\\\e905\\\"}.fc-icon-x:before{content:\\\"\\\\e906\\\"}.fc .fc-button{border-radius:0;font-family:inherit;font-size:inherit;line-height:inherit;margin:0;overflow:visible;text-transform:none}.fc .fc-button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}.fc .fc-button{-webkit-appearance:button}.fc .fc-button:not(:disabled){cursor:pointer}.fc .fc-button{background-color:transparent;border:1px solid transparent;border-radius:.25em;display:inline-block;font-size:1em;font-weight:400;line-height:1.5;padding:.4em .65em;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;vertical-align:middle}.fc .fc-button:hover{text-decoration:none}.fc .fc-button:focus{box-shadow:0 0 0 .2rem rgba(44,62,80,.25);outline:0}.fc .fc-button:disabled{opacity:.65}.fc .fc-button-primary{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:hover{background-color:var(--fc-button-hover-bg-color);border-color:var(--fc-button-hover-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:disabled{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button-primary:not(:disabled).fc-button-active,.fc .fc-button-primary:not(:disabled):active{background-color:var(--fc-button-active-bg-color);border-color:var(--fc-button-active-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:not(:disabled).fc-button-active:focus,.fc .fc-button-primary:not(:disabled):active:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button .fc-icon{font-size:1.5em;vertical-align:middle}.fc .fc-button-group{display:inline-flex;position:relative;vertical-align:middle}.fc .fc-button-group>.fc-button{flex:1 1 auto;position:relative}.fc .fc-button-group>.fc-button.fc-button-active,.fc .fc-button-group>.fc-button:active,.fc .fc-button-group>.fc-button:focus,.fc .fc-button-group>.fc-button:hover{z-index:1}.fc-direction-ltr .fc-button-group>.fc-button:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;margin-left:-1px}.fc-direction-ltr .fc-button-group>.fc-button:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0}.fc-direction-rtl .fc-button-group>.fc-button:not(:first-child){border-bottom-right-radius:0;border-top-right-radius:0;margin-right:-1px}.fc-direction-rtl .fc-button-group>.fc-button:not(:last-child){border-bottom-left-radius:0;border-top-left-radius:0}.fc .fc-toolbar{align-items:center;display:flex;justify-content:space-between}.fc .fc-toolbar.fc-header-toolbar{margin-bottom:1.5em}.fc .fc-toolbar.fc-footer-toolbar{margin-top:1.5em}.fc .fc-toolbar-title{font-size:1.75em;margin:0}.fc-direction-ltr .fc-toolbar>*>:not(:first-child){margin-left:.75em}.fc-direction-rtl .fc-toolbar>*>:not(:first-child){margin-right:.75em}.fc-direction-rtl .fc-toolbar-ltr{flex-direction:row-reverse}.fc .fc-scroller{-webkit-overflow-scrolling:touch;position:relative}.fc .fc-scroller-liquid{height:100%}.fc .fc-scroller-liquid-absolute{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-scroller-harness{direction:ltr;overflow:hidden;position:relative}.fc .fc-scroller-harness-liquid{height:100%}.fc-direction-rtl .fc-scroller-harness>.fc-scroller{direction:rtl}.fc-theme-standard .fc-scrollgrid{border:1px solid var(--fc-border-color)}.fc .fc-scrollgrid,.fc .fc-scrollgrid table{table-layout:fixed;width:100%}.fc .fc-scrollgrid table{border-left-style:hidden;border-right-style:hidden;border-top-style:hidden}.fc .fc-scrollgrid{border-bottom-width:0;border-collapse:separate;border-right-width:0}.fc .fc-scrollgrid-liquid{height:100%}.fc .fc-scrollgrid-section,.fc .fc-scrollgrid-section table,.fc .fc-scrollgrid-section>td{height:1px}.fc .fc-scrollgrid-section-liquid>td{height:100%}.fc .fc-scrollgrid-section>*{border-left-width:0;border-top-width:0}.fc .fc-scrollgrid-section-footer>*,.fc .fc-scrollgrid-section-header>*{border-bottom-width:0}.fc .fc-scrollgrid-section-body table,.fc .fc-scrollgrid-section-footer table{border-bottom-style:hidden}.fc .fc-scrollgrid-section-sticky>*{background:var(--fc-page-bg-color);position:sticky;z-index:3}.fc .fc-scrollgrid-section-header.fc-scrollgrid-section-sticky>*{top:0}.fc .fc-scrollgrid-section-footer.fc-scrollgrid-section-sticky>*{bottom:0}.fc .fc-scrollgrid-sticky-shim{height:1px;margin-bottom:-1px}.fc-sticky{position:sticky}.fc .fc-view-harness{flex-grow:1;position:relative}.fc .fc-view-harness-active>.fc-view{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-col-header-cell-cushion{display:inline-block;padding:2px 4px}.fc .fc-bg-event,.fc .fc-highlight,.fc .fc-non-business{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-non-business{background:var(--fc-non-business-color)}.fc .fc-bg-event{background:var(--fc-bg-event-color);opacity:var(--fc-bg-event-opacity)}.fc .fc-bg-event .fc-event-title{font-size:var(--fc-small-font-size);font-style:italic;margin:.5em}.fc .fc-highlight{background:var(--fc-highlight-color)}.fc .fc-cell-shaded,.fc .fc-day-disabled{background:var(--fc-neutral-bg-color)}a.fc-event,a.fc-event:hover{text-decoration:none}.fc-event.fc-event-draggable,.fc-event[href]{cursor:pointer}.fc-event .fc-event-main{position:relative;z-index:2}.fc-event-dragging:not(.fc-event-selected){opacity:.75}.fc-event-dragging.fc-event-selected{box-shadow:0 2px 7px rgba(0,0,0,.3)}.fc-event .fc-event-resizer{display:none;position:absolute;z-index:4}.fc-event-selected .fc-event-resizer,.fc-event:hover .fc-event-resizer{display:block}.fc-event-selected .fc-event-resizer{background:var(--fc-page-bg-color);border-color:inherit;border-radius:calc(var(--fc-event-resizer-dot-total-width)/2);border-style:solid;border-width:var(--fc-event-resizer-dot-border-width);height:var(--fc-event-resizer-dot-total-width);width:var(--fc-event-resizer-dot-total-width)}.fc-event-selected .fc-event-resizer:before{bottom:-20px;content:\\\"\\\";left:-20px;position:absolute;right:-20px;top:-20px}.fc-event-selected,.fc-event:focus{box-shadow:0 2px 5px rgba(0,0,0,.2)}.fc-event-selected:before,.fc-event:focus:before{bottom:0;content:\\\"\\\";left:0;position:absolute;right:0;top:0;z-index:3}.fc-event-selected:after,.fc-event:focus:after{background:var(--fc-event-selected-overlay-color);bottom:-1px;content:\\\"\\\";left:-1px;position:absolute;right:-1px;top:-1px;z-index:1}.fc-h-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-h-event .fc-event-main{color:var(--fc-event-text-color)}.fc-h-event .fc-event-main-frame{display:flex}.fc-h-event .fc-event-time{max-width:100%;overflow:hidden}.fc-h-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-width:0}.fc-h-event .fc-event-title{display:inline-block;left:0;max-width:100%;overflow:hidden;right:0;vertical-align:top}.fc-h-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-start),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-end){border-bottom-left-radius:0;border-left-width:0;border-top-left-radius:0}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-end),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-start){border-bottom-right-radius:0;border-right-width:0;border-top-right-radius:0}.fc-h-event:not(.fc-event-selected) .fc-event-resizer{bottom:0;top:0;width:var(--fc-event-resizer-thickness)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end{cursor:w-resize;left:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start{cursor:e-resize;right:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-h-event.fc-event-selected .fc-event-resizer{margin-top:calc(var(--fc-event-resizer-dot-total-width)*-.5);top:50%}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-start,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-end{left:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-end,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-start{right:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc .fc-popover{box-shadow:0 2px 6px rgba(0,0,0,.15);position:absolute;z-index:9999}.fc .fc-popover-header{align-items:center;display:flex;flex-direction:row;justify-content:space-between;padding:3px 4px}.fc .fc-popover-title{margin:0 2px}.fc .fc-popover-close{cursor:pointer;font-size:1.1em;opacity:.65}.fc-theme-standard .fc-popover{background:var(--fc-page-bg-color);border:1px solid var(--fc-border-color)}.fc-theme-standard .fc-popover-header{background:var(--fc-neutral-bg-color)}\";\ninjectStyles(css_248z);\n\nclass DelayedRunner {\n    constructor(drainedOption) {\n        this.drainedOption = drainedOption;\n        this.isRunning = false;\n        this.isDirty = false;\n        this.pauseDepths = {};\n        this.timeoutId = 0;\n    }\n    request(delay) {\n        this.isDirty = true;\n        if (!this.isPaused()) {\n            this.clearTimeout();\n            if (delay == null) {\n                this.tryDrain();\n            }\n            else {\n                this.timeoutId = setTimeout(// NOT OPTIMAL! TODO: look at debounce\n                this.tryDrain.bind(this), delay);\n            }\n        }\n    }\n    pause(scope = '') {\n        let { pauseDepths } = this;\n        pauseDepths[scope] = (pauseDepths[scope] || 0) + 1;\n        this.clearTimeout();\n    }\n    resume(scope = '', force) {\n        let { pauseDepths } = this;\n        if (scope in pauseDepths) {\n            if (force) {\n                delete pauseDepths[scope];\n            }\n            else {\n                pauseDepths[scope] -= 1;\n                let depth = pauseDepths[scope];\n                if (depth <= 0) {\n                    delete pauseDepths[scope];\n                }\n            }\n            this.tryDrain();\n        }\n    }\n    isPaused() {\n        return Object.keys(this.pauseDepths).length;\n    }\n    tryDrain() {\n        if (!this.isRunning && !this.isPaused()) {\n            this.isRunning = true;\n            while (this.isDirty) {\n                this.isDirty = false;\n                this.drained(); // might set isDirty to true again\n            }\n            this.isRunning = false;\n        }\n    }\n    clear() {\n        this.clearTimeout();\n        this.isDirty = false;\n        this.pauseDepths = {};\n    }\n    clearTimeout() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = 0;\n        }\n    }\n    drained() {\n        if (this.drainedOption) {\n            this.drainedOption();\n        }\n    }\n}\n\nfunction removeElement(el) {\n    if (el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n// Querying\n// ----------------------------------------------------------------------------------------------------------------\nfunction elementClosest(el, selector) {\n    if (el.closest) {\n        return el.closest(selector);\n        // really bad fallback for IE\n        // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    }\n    if (!document.documentElement.contains(el)) {\n        return null;\n    }\n    do {\n        if (elementMatches(el, selector)) {\n            return el;\n        }\n        el = (el.parentElement || el.parentNode);\n    } while (el !== null && el.nodeType === 1);\n    return null;\n}\nfunction elementMatches(el, selector) {\n    let method = el.matches || el.matchesSelector || el.msMatchesSelector;\n    return method.call(el, selector);\n}\n// accepts multiple subject els\n// returns a real array. good for methods like forEach\n// TODO: accept the document\nfunction findElements(container, selector) {\n    let containers = container instanceof HTMLElement ? [container] : container;\n    let allMatches = [];\n    for (let i = 0; i < containers.length; i += 1) {\n        let matches = containers[i].querySelectorAll(selector);\n        for (let j = 0; j < matches.length; j += 1) {\n            allMatches.push(matches[j]);\n        }\n    }\n    return allMatches;\n}\n// accepts multiple subject els\n// only queries direct child elements // TODO: rename to findDirectChildren!\nfunction findDirectChildren(parent, selector) {\n    let parents = parent instanceof HTMLElement ? [parent] : parent;\n    let allMatches = [];\n    for (let i = 0; i < parents.length; i += 1) {\n        let childNodes = parents[i].children; // only ever elements\n        for (let j = 0; j < childNodes.length; j += 1) {\n            let childNode = childNodes[j];\n            if (!selector || elementMatches(childNode, selector)) {\n                allMatches.push(childNode);\n            }\n        }\n    }\n    return allMatches;\n}\n// Style\n// ----------------------------------------------------------------------------------------------------------------\nconst PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;\nfunction applyStyle(el, props) {\n    for (let propName in props) {\n        applyStyleProp(el, propName, props[propName]);\n    }\n}\nfunction applyStyleProp(el, name, val) {\n    if (val == null) {\n        el.style[name] = '';\n    }\n    else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {\n        el.style[name] = `${val}px`;\n    }\n    else {\n        el.style[name] = val;\n    }\n}\n// Event Handling\n// ----------------------------------------------------------------------------------------------------------------\n// if intercepting bubbled events at the document/window/body level,\n// and want to see originating element (the 'target'), use this util instead\n// of `ev.target` because it goes within web-component boundaries.\nfunction getEventTargetViaRoot(ev) {\n    var _a, _b;\n    return (_b = (_a = ev.composedPath) === null || _a === void 0 ? void 0 : _a.call(ev)[0]) !== null && _b !== void 0 ? _b : ev.target;\n}\n// Unique ID for DOM attribute\nlet guid$1 = 0;\nfunction getUniqueDomId() {\n    guid$1 += 1;\n    return 'fc-dom-' + guid$1;\n}\n\n// Stops a mouse/touch event from doing it's native browser action\nfunction preventDefault(ev) {\n    ev.preventDefault();\n}\n// Event Delegation\n// ----------------------------------------------------------------------------------------------------------------\nfunction buildDelegationHandler(selector, handler) {\n    return (ev) => {\n        let matchedChild = elementClosest(ev.target, selector);\n        if (matchedChild) {\n            handler.call(matchedChild, ev, matchedChild);\n        }\n    };\n}\nfunction listenBySelector(container, eventType, selector, handler) {\n    let attachedHandler = buildDelegationHandler(selector, handler);\n    container.addEventListener(eventType, attachedHandler);\n    return () => {\n        container.removeEventListener(eventType, attachedHandler);\n    };\n}\nfunction listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {\n    let currentMatchedChild;\n    return listenBySelector(container, 'mouseover', selector, (mouseOverEv, matchedChild) => {\n        if (matchedChild !== currentMatchedChild) {\n            currentMatchedChild = matchedChild;\n            onMouseEnter(mouseOverEv, matchedChild);\n            let realOnMouseLeave = (mouseLeaveEv) => {\n                currentMatchedChild = null;\n                onMouseLeave(mouseLeaveEv, matchedChild);\n                matchedChild.removeEventListener('mouseleave', realOnMouseLeave);\n            };\n            // listen to the next mouseleave, and then unattach\n            matchedChild.addEventListener('mouseleave', realOnMouseLeave);\n        }\n    });\n}\n// Animation\n// ----------------------------------------------------------------------------------------------------------------\nconst transitionEventNames = [\n    'webkitTransitionEnd',\n    'otransitionend',\n    'oTransitionEnd',\n    'msTransitionEnd',\n    'transitionend',\n];\n// triggered only when the next single subsequent transition finishes\nfunction whenTransitionDone(el, callback) {\n    let realCallback = (ev) => {\n        callback(ev);\n        transitionEventNames.forEach((eventName) => {\n            el.removeEventListener(eventName, realCallback);\n        });\n    };\n    transitionEventNames.forEach((eventName) => {\n        el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes\n    });\n}\n// ARIA workarounds\n// ----------------------------------------------------------------------------------------------------------------\nfunction createAriaClickAttrs(handler) {\n    return Object.assign({ onClick: handler }, createAriaKeyboardAttrs(handler));\n}\nfunction createAriaKeyboardAttrs(handler) {\n    return {\n        tabIndex: 0,\n        onKeyDown(ev) {\n            if (ev.key === 'Enter' || ev.key === ' ') {\n                handler(ev);\n                ev.preventDefault(); // if space, don't scroll down page\n            }\n        },\n    };\n}\n\nlet guidNumber = 0;\nfunction guid() {\n    guidNumber += 1;\n    return String(guidNumber);\n}\n/* FullCalendar-specific DOM Utilities\n----------------------------------------------------------------------------------------------------------------------*/\n// Make the mouse cursor express that an event is not allowed in the current area\nfunction disableCursor() {\n    document.body.classList.add('fc-not-allowed');\n}\n// Returns the mouse cursor to its original look\nfunction enableCursor() {\n    document.body.classList.remove('fc-not-allowed');\n}\n/* Selection\n----------------------------------------------------------------------------------------------------------------------*/\nfunction preventSelection(el) {\n    el.style.userSelect = 'none';\n    el.style.webkitUserSelect = 'none';\n    el.addEventListener('selectstart', preventDefault);\n}\nfunction allowSelection(el) {\n    el.style.userSelect = '';\n    el.style.webkitUserSelect = '';\n    el.removeEventListener('selectstart', preventDefault);\n}\n/* Context Menu\n----------------------------------------------------------------------------------------------------------------------*/\nfunction preventContextMenu(el) {\n    el.addEventListener('contextmenu', preventDefault);\n}\nfunction allowContextMenu(el) {\n    el.removeEventListener('contextmenu', preventDefault);\n}\nfunction parseFieldSpecs(input) {\n    let specs = [];\n    let tokens = [];\n    let i;\n    let token;\n    if (typeof input === 'string') {\n        tokens = input.split(/\\s*,\\s*/);\n    }\n    else if (typeof input === 'function') {\n        tokens = [input];\n    }\n    else if (Array.isArray(input)) {\n        tokens = input;\n    }\n    for (i = 0; i < tokens.length; i += 1) {\n        token = tokens[i];\n        if (typeof token === 'string') {\n            specs.push(token.charAt(0) === '-' ?\n                { field: token.substring(1), order: -1 } :\n                { field: token, order: 1 });\n        }\n        else if (typeof token === 'function') {\n            specs.push({ func: token });\n        }\n    }\n    return specs;\n}\nfunction compareByFieldSpecs(obj0, obj1, fieldSpecs) {\n    let i;\n    let cmp;\n    for (i = 0; i < fieldSpecs.length; i += 1) {\n        cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);\n        if (cmp) {\n            return cmp;\n        }\n    }\n    return 0;\n}\nfunction compareByFieldSpec(obj0, obj1, fieldSpec) {\n    if (fieldSpec.func) {\n        return fieldSpec.func(obj0, obj1);\n    }\n    return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field])\n        * (fieldSpec.order || 1);\n}\nfunction flexibleCompare(a, b) {\n    if (!a && !b) {\n        return 0;\n    }\n    if (b == null) {\n        return -1;\n    }\n    if (a == null) {\n        return 1;\n    }\n    if (typeof a === 'string' || typeof b === 'string') {\n        return String(a).localeCompare(String(b));\n    }\n    return a - b;\n}\n/* String Utilities\n----------------------------------------------------------------------------------------------------------------------*/\nfunction padStart(val, len) {\n    let s = String(val);\n    return '000'.substr(0, len - s.length) + s;\n}\nfunction formatWithOrdinals(formatter, args, fallbackText) {\n    if (typeof formatter === 'function') {\n        return formatter(...args);\n    }\n    if (typeof formatter === 'string') { // non-blank string\n        return args.reduce((str, arg, index) => (str.replace('$' + index, arg || '')), formatter);\n    }\n    return fallbackText;\n}\n/* Number Utilities\n----------------------------------------------------------------------------------------------------------------------*/\nfunction compareNumbers(a, b) {\n    return a - b;\n}\nfunction isInt(n) {\n    return n % 1 === 0;\n}\n/* FC-specific DOM dimension stuff\n----------------------------------------------------------------------------------------------------------------------*/\nfunction computeSmallestCellWidth(cellEl) {\n    let allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame');\n    let contentWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-cushion');\n    if (!allWidthEl) {\n        throw new Error('needs fc-scrollgrid-shrink-frame className'); // TODO: use const\n    }\n    if (!contentWidthEl) {\n        throw new Error('needs fc-scrollgrid-shrink-cushion className');\n    }\n    return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width + // the cell padding+border\n        contentWidthEl.getBoundingClientRect().width;\n}\n\nconst INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];\nconst PARSE_RE = /^(-?)(?:(\\d+)\\.)?(\\d+):(\\d\\d)(?::(\\d\\d)(?:\\.(\\d\\d\\d))?)?/;\n// Parsing and Creation\nfunction createDuration(input, unit) {\n    if (typeof input === 'string') {\n        return parseString(input);\n    }\n    if (typeof input === 'object' && input) { // non-null object\n        return parseObject(input);\n    }\n    if (typeof input === 'number') {\n        return parseObject({ [unit || 'milliseconds']: input });\n    }\n    return null;\n}\nfunction parseString(s) {\n    let m = PARSE_RE.exec(s);\n    if (m) {\n        let sign = m[1] ? -1 : 1;\n        return {\n            years: 0,\n            months: 0,\n            days: sign * (m[2] ? parseInt(m[2], 10) : 0),\n            milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours\n                (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes\n                (m[5] ? parseInt(m[5], 10) : 0) * 1000 + // seconds\n                (m[6] ? parseInt(m[6], 10) : 0) // ms\n            ),\n        };\n    }\n    return null;\n}\nfunction parseObject(obj) {\n    let duration = {\n        years: obj.years || obj.year || 0,\n        months: obj.months || obj.month || 0,\n        days: obj.days || obj.day || 0,\n        milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours\n            (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes\n            (obj.seconds || obj.second || 0) * 1000 + // seconds\n            (obj.milliseconds || obj.millisecond || obj.ms || 0), // ms\n    };\n    let weeks = obj.weeks || obj.week;\n    if (weeks) {\n        duration.days += weeks * 7;\n        duration.specifiedWeeks = true;\n    }\n    return duration;\n}\n// Equality\nfunction durationsEqual(d0, d1) {\n    return d0.years === d1.years &&\n        d0.months === d1.months &&\n        d0.days === d1.days &&\n        d0.milliseconds === d1.milliseconds;\n}\nfunction asCleanDays(dur) {\n    if (!dur.years && !dur.months && !dur.milliseconds) {\n        return dur.days;\n    }\n    return 0;\n}\n// Simple Math\nfunction addDurations(d0, d1) {\n    return {\n        years: d0.years + d1.years,\n        months: d0.months + d1.months,\n        days: d0.days + d1.days,\n        milliseconds: d0.milliseconds + d1.milliseconds,\n    };\n}\nfunction subtractDurations(d1, d0) {\n    return {\n        years: d1.years - d0.years,\n        months: d1.months - d0.months,\n        days: d1.days - d0.days,\n        milliseconds: d1.milliseconds - d0.milliseconds,\n    };\n}\nfunction multiplyDuration(d, n) {\n    return {\n        years: d.years * n,\n        months: d.months * n,\n        days: d.days * n,\n        milliseconds: d.milliseconds * n,\n    };\n}\n// Conversions\n// \"Rough\" because they are based on average-case Gregorian months/years\nfunction asRoughYears(dur) {\n    return asRoughDays(dur) / 365;\n}\nfunction asRoughMonths(dur) {\n    return asRoughDays(dur) / 30;\n}\nfunction asRoughDays(dur) {\n    return asRoughMs(dur) / 864e5;\n}\nfunction asRoughMinutes(dur) {\n    return asRoughMs(dur) / (1000 * 60);\n}\nfunction asRoughSeconds(dur) {\n    return asRoughMs(dur) / 1000;\n}\nfunction asRoughMs(dur) {\n    return dur.years * (365 * 864e5) +\n        dur.months * (30 * 864e5) +\n        dur.days * 864e5 +\n        dur.milliseconds;\n}\n// Advanced Math\nfunction wholeDivideDurations(numerator, denominator) {\n    let res = null;\n    for (let i = 0; i < INTERNAL_UNITS.length; i += 1) {\n        let unit = INTERNAL_UNITS[i];\n        if (denominator[unit]) {\n            let localRes = numerator[unit] / denominator[unit];\n            if (!isInt(localRes) || (res !== null && res !== localRes)) {\n                return null;\n            }\n            res = localRes;\n        }\n        else if (numerator[unit]) {\n            // needs to divide by something but can't!\n            return null;\n        }\n    }\n    return res;\n}\nfunction greatestDurationDenominator(dur) {\n    let ms = dur.milliseconds;\n    if (ms) {\n        if (ms % 1000 !== 0) {\n            return { unit: 'millisecond', value: ms };\n        }\n        if (ms % (1000 * 60) !== 0) {\n            return { unit: 'second', value: ms / 1000 };\n        }\n        if (ms % (1000 * 60 * 60) !== 0) {\n            return { unit: 'minute', value: ms / (1000 * 60) };\n        }\n        if (ms) {\n            return { unit: 'hour', value: ms / (1000 * 60 * 60) };\n        }\n    }\n    if (dur.days) {\n        if (dur.specifiedWeeks && dur.days % 7 === 0) {\n            return { unit: 'week', value: dur.days / 7 };\n        }\n        return { unit: 'day', value: dur.days };\n    }\n    if (dur.months) {\n        return { unit: 'month', value: dur.months };\n    }\n    if (dur.years) {\n        return { unit: 'year', value: dur.years };\n    }\n    return { unit: 'millisecond', value: 0 };\n}\n\n// TODO: new util arrayify?\nfunction removeExact(array, exactVal) {\n    let removeCnt = 0;\n    let i = 0;\n    while (i < array.length) {\n        if (array[i] === exactVal) {\n            array.splice(i, 1);\n            removeCnt += 1;\n        }\n        else {\n            i += 1;\n        }\n    }\n    return removeCnt;\n}\nfunction isArraysEqual(a0, a1, equalityFunc) {\n    if (a0 === a1) {\n        return true;\n    }\n    let len = a0.length;\n    let i;\n    if (len !== a1.length) { // not array? or not same length?\n        return false;\n    }\n    for (i = 0; i < len; i += 1) {\n        if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconst DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n// Adding\nfunction addWeeks(m, n) {\n    let a = dateToUtcArray(m);\n    a[2] += n * 7;\n    return arrayToUtcDate(a);\n}\nfunction addDays(m, n) {\n    let a = dateToUtcArray(m);\n    a[2] += n;\n    return arrayToUtcDate(a);\n}\nfunction addMs(m, n) {\n    let a = dateToUtcArray(m);\n    a[6] += n;\n    return arrayToUtcDate(a);\n}\n// Diffing (all return floats)\n// TODO: why not use ranges?\nfunction diffWeeks(m0, m1) {\n    return diffDays(m0, m1) / 7;\n}\nfunction diffDays(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);\n}\nfunction diffHours(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);\n}\nfunction diffMinutes(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60);\n}\nfunction diffSeconds(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / 1000;\n}\nfunction diffDayAndTime(m0, m1) {\n    let m0day = startOfDay(m0);\n    let m1day = startOfDay(m1);\n    return {\n        years: 0,\n        months: 0,\n        days: Math.round(diffDays(m0day, m1day)),\n        milliseconds: (m1.valueOf() - m1day.valueOf()) - (m0.valueOf() - m0day.valueOf()),\n    };\n}\n// Diffing Whole Units\nfunction diffWholeWeeks(m0, m1) {\n    let d = diffWholeDays(m0, m1);\n    if (d !== null && d % 7 === 0) {\n        return d / 7;\n    }\n    return null;\n}\nfunction diffWholeDays(m0, m1) {\n    if (timeAsMs(m0) === timeAsMs(m1)) {\n        return Math.round(diffDays(m0, m1));\n    }\n    return null;\n}\n// Start-Of\nfunction startOfDay(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n    ]);\n}\nfunction startOfHour(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n    ]);\n}\nfunction startOfMinute(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n        m.getUTCMinutes(),\n    ]);\n}\nfunction startOfSecond(m) {\n    return arrayToUtcDate([\n        m.getUTCFullYear(),\n        m.getUTCMonth(),\n        m.getUTCDate(),\n        m.getUTCHours(),\n        m.getUTCMinutes(),\n        m.getUTCSeconds(),\n    ]);\n}\n// Week Computation\nfunction weekOfYear(marker, dow, doy) {\n    let y = marker.getUTCFullYear();\n    let w = weekOfGivenYear(marker, y, dow, doy);\n    if (w < 1) {\n        return weekOfGivenYear(marker, y - 1, dow, doy);\n    }\n    let nextW = weekOfGivenYear(marker, y + 1, dow, doy);\n    if (nextW >= 1) {\n        return Math.min(w, nextW);\n    }\n    return w;\n}\nfunction weekOfGivenYear(marker, year, dow, doy) {\n    let firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);\n    let dayStart = startOfDay(marker);\n    let days = Math.round(diffDays(firstWeekStart, dayStart));\n    return Math.floor(days / 7) + 1; // zero-indexed\n}\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    let fwd = 7 + dow - doy;\n    // first-week day local weekday -- which local weekday is fwd\n    let fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n}\n// Array Conversion\nfunction dateToLocalArray(date) {\n    return [\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n        date.getMilliseconds(),\n    ];\n}\nfunction arrayToLocalDate(a) {\n    return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2], // day of month\n    a[3] || 0, a[4] || 0, a[5] || 0);\n}\nfunction dateToUtcArray(date) {\n    return [\n        date.getUTCFullYear(),\n        date.getUTCMonth(),\n        date.getUTCDate(),\n        date.getUTCHours(),\n        date.getUTCMinutes(),\n        date.getUTCSeconds(),\n        date.getUTCMilliseconds(),\n    ];\n}\nfunction arrayToUtcDate(a) {\n    // according to web standards (and Safari), a month index is required.\n    // massage if only given a year.\n    if (a.length === 1) {\n        a = a.concat([0]);\n    }\n    return new Date(Date.UTC(...a));\n}\n// Other Utils\nfunction isValidDate(m) {\n    return !isNaN(m.valueOf());\n}\nfunction timeAsMs(m) {\n    return m.getUTCHours() * 1000 * 60 * 60 +\n        m.getUTCMinutes() * 1000 * 60 +\n        m.getUTCSeconds() * 1000 +\n        m.getUTCMilliseconds();\n}\n\n// timeZoneOffset is in minutes\nfunction buildIsoString(marker, timeZoneOffset, stripZeroTime = false) {\n    let s = marker.toISOString();\n    s = s.replace('.000', '');\n    if (stripZeroTime) {\n        s = s.replace('T00:00:00Z', '');\n    }\n    if (s.length > 10) { // time part wasn't stripped, can add timezone info\n        if (timeZoneOffset == null) {\n            s = s.replace('Z', '');\n        }\n        else if (timeZoneOffset !== 0) {\n            s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));\n        }\n        // otherwise, its UTC-0 and we want to keep the Z\n    }\n    return s;\n}\n// formats the date, but with no time part\n// TODO: somehow merge with buildIsoString and stripZeroTime\n// TODO: rename. omit \"string\"\nfunction formatDayString(marker) {\n    return marker.toISOString().replace(/T.*$/, '');\n}\nfunction formatIsoMonthStr(marker) {\n    return marker.toISOString().match(/^\\d{4}-\\d{2}/)[0];\n}\n// TODO: use Date::toISOString and use everything after the T?\nfunction formatIsoTimeString(marker) {\n    return padStart(marker.getUTCHours(), 2) + ':' +\n        padStart(marker.getUTCMinutes(), 2) + ':' +\n        padStart(marker.getUTCSeconds(), 2);\n}\nfunction formatTimeZoneOffset(minutes, doIso = false) {\n    let sign = minutes < 0 ? '-' : '+';\n    let abs = Math.abs(minutes);\n    let hours = Math.floor(abs / 60);\n    let mins = Math.round(abs % 60);\n    if (doIso) {\n        return `${sign + padStart(hours, 2)}:${padStart(mins, 2)}`;\n    }\n    return `GMT${sign}${hours}${mins ? `:${padStart(mins, 2)}` : ''}`;\n}\n\nfunction memoize(workerFunc, resEquality, teardownFunc) {\n    let currentArgs;\n    let currentRes;\n    return function (...newArgs) {\n        if (!currentArgs) {\n            currentRes = workerFunc.apply(this, newArgs);\n        }\n        else if (!isArraysEqual(currentArgs, newArgs)) {\n            if (teardownFunc) {\n                teardownFunc(currentRes);\n            }\n            let res = workerFunc.apply(this, newArgs);\n            if (!resEquality || !resEquality(res, currentRes)) {\n                currentRes = res;\n            }\n        }\n        currentArgs = newArgs;\n        return currentRes;\n    };\n}\nfunction memoizeObjArg(workerFunc, resEquality, teardownFunc) {\n    let currentArg;\n    let currentRes;\n    return (newArg) => {\n        if (!currentArg) {\n            currentRes = workerFunc.call(this, newArg);\n        }\n        else if (!isPropsEqual(currentArg, newArg)) {\n            if (teardownFunc) {\n                teardownFunc(currentRes);\n            }\n            let res = workerFunc.call(this, newArg);\n            if (!resEquality || !resEquality(res, currentRes)) {\n                currentRes = res;\n            }\n        }\n        currentArg = newArg;\n        return currentRes;\n    };\n}\nfunction memoizeArraylike(// used at all?\nworkerFunc, resEquality, teardownFunc) {\n    let currentArgSets = [];\n    let currentResults = [];\n    return (newArgSets) => {\n        let currentLen = currentArgSets.length;\n        let newLen = newArgSets.length;\n        let i = 0;\n        for (; i < currentLen; i += 1) {\n            if (!newArgSets[i]) { // one of the old sets no longer exists\n                if (teardownFunc) {\n                    teardownFunc(currentResults[i]);\n                }\n            }\n            else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {\n                if (teardownFunc) {\n                    teardownFunc(currentResults[i]);\n                }\n                let res = workerFunc.apply(this, newArgSets[i]);\n                if (!resEquality || !resEquality(res, currentResults[i])) {\n                    currentResults[i] = res;\n                }\n            }\n        }\n        for (; i < newLen; i += 1) {\n            currentResults[i] = workerFunc.apply(this, newArgSets[i]);\n        }\n        currentArgSets = newArgSets;\n        currentResults.splice(newLen); // remove excess\n        return currentResults;\n    };\n}\nfunction memoizeHashlike(workerFunc, resEquality, teardownFunc) {\n    let currentArgHash = {};\n    let currentResHash = {};\n    return (newArgHash) => {\n        let newResHash = {};\n        for (let key in newArgHash) {\n            if (!currentResHash[key]) {\n                newResHash[key] = workerFunc.apply(this, newArgHash[key]);\n            }\n            else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {\n                if (teardownFunc) {\n                    teardownFunc(currentResHash[key]);\n                }\n                let res = workerFunc.apply(this, newArgHash[key]);\n                newResHash[key] = (resEquality && resEquality(res, currentResHash[key]))\n                    ? currentResHash[key]\n                    : res;\n            }\n            else {\n                newResHash[key] = currentResHash[key];\n            }\n        }\n        currentArgHash = newArgHash;\n        currentResHash = newResHash;\n        return newResHash;\n    };\n}\n\nconst EXTENDED_SETTINGS_AND_SEVERITIES = {\n    week: 3,\n    separator: 9,\n    omitZeroMinute: 9,\n    meridiem: 9,\n    omitCommas: 9,\n};\nconst STANDARD_DATE_PROP_SEVERITIES = {\n    timeZoneName: 7,\n    era: 6,\n    year: 5,\n    month: 4,\n    day: 2,\n    weekday: 2,\n    hour: 1,\n    minute: 1,\n    second: 1,\n};\nconst MERIDIEM_RE = /\\s*([ap])\\.?m\\.?/i; // eats up leading spaces too\nconst COMMA_RE = /,/g; // we need re for globalness\nconst MULTI_SPACE_RE = /\\s+/g;\nconst LTR_RE = /\\u200e/g; // control character\nconst UTC_RE = /UTC|GMT/;\nclass NativeFormatter {\n    constructor(formatSettings) {\n        let standardDateProps = {};\n        let extendedSettings = {};\n        let smallestUnitNum = 9; // the smallest unit in the formatter (9 is a sentinel, beyond max)\n        for (let name in formatSettings) {\n            if (name in EXTENDED_SETTINGS_AND_SEVERITIES) {\n                extendedSettings[name] = formatSettings[name];\n                const severity = EXTENDED_SETTINGS_AND_SEVERITIES[name];\n                if (severity < 9) {\n                    smallestUnitNum = Math.min(EXTENDED_SETTINGS_AND_SEVERITIES[name], smallestUnitNum);\n                }\n            }\n            else {\n                standardDateProps[name] = formatSettings[name];\n                if (name in STANDARD_DATE_PROP_SEVERITIES) { // TODO: what about hour12? no severity\n                    smallestUnitNum = Math.min(STANDARD_DATE_PROP_SEVERITIES[name], smallestUnitNum);\n                }\n            }\n        }\n        this.standardDateProps = standardDateProps;\n        this.extendedSettings = extendedSettings;\n        this.smallestUnitNum = smallestUnitNum;\n        this.buildFormattingFunc = memoize(buildFormattingFunc);\n    }\n    format(date, context) {\n        return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        let { standardDateProps, extendedSettings } = this;\n        let diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);\n        if (!diffSeverity) {\n            return this.format(start, context);\n        }\n        let biggestUnitForPartial = diffSeverity;\n        if (biggestUnitForPartial > 1 && // the two dates are different in a way that's larger scale than time\n            (standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') &&\n            (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') &&\n            (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {\n            biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time\n        }\n        let full0 = this.format(start, context);\n        let full1 = this.format(end, context);\n        if (full0 === full1) {\n            return full0;\n        }\n        let partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);\n        let partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);\n        let partial0 = partialFormattingFunc(start);\n        let partial1 = partialFormattingFunc(end);\n        let insertion = findCommonInsertion(full0, partial0, full1, partial1);\n        let separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || '';\n        if (insertion) {\n            return insertion.before + partial0 + separator + partial1 + insertion.after;\n        }\n        return full0 + separator + full1;\n    }\n    getSmallestUnit() {\n        switch (this.smallestUnitNum) {\n            case 7:\n            case 6:\n            case 5:\n                return 'year';\n            case 4:\n                return 'month';\n            case 3:\n                return 'week';\n            case 2:\n                return 'day';\n            default:\n                return 'time'; // really?\n        }\n    }\n}\nfunction buildFormattingFunc(standardDateProps, extendedSettings, context) {\n    let standardDatePropCnt = Object.keys(standardDateProps).length;\n    if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {\n        return (date) => (formatTimeZoneOffset(date.timeZoneOffset));\n    }\n    if (standardDatePropCnt === 0 && extendedSettings.week) {\n        return (date) => (formatWeekNumber(context.computeWeekNumber(date.marker), context.weekText, context.weekTextLong, context.locale, extendedSettings.week));\n    }\n    return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);\n}\nfunction buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {\n    standardDateProps = Object.assign({}, standardDateProps); // copy\n    extendedSettings = Object.assign({}, extendedSettings); // copy\n    sanitizeSettings(standardDateProps, extendedSettings);\n    standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers\n    let normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);\n    let zeroFormat; // needed?\n    if (extendedSettings.omitZeroMinute) {\n        let zeroProps = Object.assign({}, standardDateProps);\n        delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings\n        zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);\n    }\n    return (date) => {\n        let { marker } = date;\n        let format;\n        if (zeroFormat && !marker.getUTCMinutes()) {\n            format = zeroFormat;\n        }\n        else {\n            format = normalFormat;\n        }\n        let s = format.format(marker);\n        return postProcess(s, date, standardDateProps, extendedSettings, context);\n    };\n}\nfunction sanitizeSettings(standardDateProps, extendedSettings) {\n    // deal with a browser inconsistency where formatting the timezone\n    // requires that the hour/minute be present.\n    if (standardDateProps.timeZoneName) {\n        if (!standardDateProps.hour) {\n            standardDateProps.hour = '2-digit';\n        }\n        if (!standardDateProps.minute) {\n            standardDateProps.minute = '2-digit';\n        }\n    }\n    // only support short timezone names\n    if (standardDateProps.timeZoneName === 'long') {\n        standardDateProps.timeZoneName = 'short';\n    }\n    // if requesting to display seconds, MUST display minutes\n    if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {\n        delete extendedSettings.omitZeroMinute;\n    }\n}\nfunction postProcess(s, date, standardDateProps, extendedSettings, context) {\n    s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes\n    if (standardDateProps.timeZoneName === 'short') {\n        s = injectTzoStr(s, (context.timeZone === 'UTC' || date.timeZoneOffset == null) ?\n            'UTC' : // important to normalize for IE, which does \"GMT\"\n            formatTimeZoneOffset(date.timeZoneOffset));\n    }\n    if (extendedSettings.omitCommas) {\n        s = s.replace(COMMA_RE, '').trim();\n    }\n    if (extendedSettings.omitZeroMinute) {\n        s = s.replace(':00', ''); // zeroFormat doesn't always achieve this\n    }\n    // ^ do anything that might create adjacent spaces before this point,\n    // because MERIDIEM_RE likes to eat up loading spaces\n    if (extendedSettings.meridiem === false) {\n        s = s.replace(MERIDIEM_RE, '').trim();\n    }\n    else if (extendedSettings.meridiem === 'narrow') { // a/p\n        s = s.replace(MERIDIEM_RE, (m0, m1) => m1.toLocaleLowerCase());\n    }\n    else if (extendedSettings.meridiem === 'short') { // am/pm\n        s = s.replace(MERIDIEM_RE, (m0, m1) => `${m1.toLocaleLowerCase()}m`);\n    }\n    else if (extendedSettings.meridiem === 'lowercase') { // other meridiem transformers already converted to lowercase\n        s = s.replace(MERIDIEM_RE, (m0) => m0.toLocaleLowerCase());\n    }\n    s = s.replace(MULTI_SPACE_RE, ' ');\n    s = s.trim();\n    return s;\n}\nfunction injectTzoStr(s, tzoStr) {\n    let replaced = false;\n    s = s.replace(UTC_RE, () => {\n        replaced = true;\n        return tzoStr;\n    });\n    // IE11 doesn't include UTC/GMT in the original string, so append to end\n    if (!replaced) {\n        s += ` ${tzoStr}`;\n    }\n    return s;\n}\nfunction formatWeekNumber(num, weekText, weekTextLong, locale, display) {\n    let parts = [];\n    if (display === 'long') {\n        parts.push(weekTextLong);\n    }\n    else if (display === 'short' || display === 'narrow') {\n        parts.push(weekText);\n    }\n    if (display === 'long' || display === 'short') {\n        parts.push(' ');\n    }\n    parts.push(locale.simpleNumberFormat.format(num));\n    if (locale.options.direction === 'rtl') { // TODO: use control characters instead?\n        parts.reverse();\n    }\n    return parts.join('');\n}\n// Range Formatting Utils\n// 0 = exactly the same\n// 1 = different by time\n// and bigger\nfunction computeMarkerDiffSeverity(d0, d1, ca) {\n    if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {\n        return 5;\n    }\n    if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {\n        return 4;\n    }\n    if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {\n        return 2;\n    }\n    if (timeAsMs(d0) !== timeAsMs(d1)) {\n        return 1;\n    }\n    return 0;\n}\nfunction computePartialFormattingOptions(options, biggestUnit) {\n    let partialOptions = {};\n    for (let name in options) {\n        if (!(name in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)\n            STANDARD_DATE_PROP_SEVERITIES[name] <= biggestUnit) {\n            partialOptions[name] = options[name];\n        }\n    }\n    return partialOptions;\n}\nfunction findCommonInsertion(full0, partial0, full1, partial1) {\n    let i0 = 0;\n    while (i0 < full0.length) {\n        let found0 = full0.indexOf(partial0, i0);\n        if (found0 === -1) {\n            break;\n        }\n        let before0 = full0.substr(0, found0);\n        i0 = found0 + partial0.length;\n        let after0 = full0.substr(i0);\n        let i1 = 0;\n        while (i1 < full1.length) {\n            let found1 = full1.indexOf(partial1, i1);\n            if (found1 === -1) {\n                break;\n            }\n            let before1 = full1.substr(0, found1);\n            i1 = found1 + partial1.length;\n            let after1 = full1.substr(i1);\n            if (before0 === before1 && after0 === after1) {\n                return {\n                    before: before0,\n                    after: after0,\n                };\n            }\n        }\n    }\n    return null;\n}\n\nfunction expandZonedMarker(dateInfo, calendarSystem) {\n    let a = calendarSystem.markerToArray(dateInfo.marker);\n    return {\n        marker: dateInfo.marker,\n        timeZoneOffset: dateInfo.timeZoneOffset,\n        array: a,\n        year: a[0],\n        month: a[1],\n        day: a[2],\n        hour: a[3],\n        minute: a[4],\n        second: a[5],\n        millisecond: a[6],\n    };\n}\n\nfunction createVerboseFormattingArg(start, end, context, betterDefaultSeparator) {\n    let startInfo = expandZonedMarker(start, context.calendarSystem);\n    let endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;\n    return {\n        date: startInfo,\n        start: startInfo,\n        end: endInfo,\n        timeZone: context.timeZone,\n        localeCodes: context.locale.codes,\n        defaultSeparator: betterDefaultSeparator || context.defaultSeparator,\n    };\n}\n\n/*\nTODO: fix the terminology of \"formatter\" vs \"formatting func\"\n*/\n/*\nAt the time of instantiation, this object does not know which cmd-formatting system it will use.\nIt receives this at the time of formatting, as a setting.\n*/\nclass CmdFormatter {\n    constructor(cmdStr) {\n        this.cmdStr = cmdStr;\n    }\n    format(date, context, betterDefaultSeparator) {\n        return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator));\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator));\n    }\n}\n\nclass FuncFormatter {\n    constructor(func) {\n        this.func = func;\n    }\n    format(date, context, betterDefaultSeparator) {\n        return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator));\n    }\n    formatRange(start, end, context, betterDefaultSeparator) {\n        return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator));\n    }\n}\n\nfunction createFormatter(input) {\n    if (typeof input === 'object' && input) { // non-null object\n        return new NativeFormatter(input);\n    }\n    if (typeof input === 'string') {\n        return new CmdFormatter(input);\n    }\n    if (typeof input === 'function') {\n        return new FuncFormatter(input);\n    }\n    return null;\n}\n\n// base options\n// ------------\nconst BASE_OPTION_REFINERS = {\n    navLinkDayClick: identity,\n    navLinkWeekClick: identity,\n    duration: createDuration,\n    bootstrapFontAwesome: identity,\n    buttonIcons: identity,\n    customButtons: identity,\n    defaultAllDayEventDuration: createDuration,\n    defaultTimedEventDuration: createDuration,\n    nextDayThreshold: createDuration,\n    scrollTime: createDuration,\n    scrollTimeReset: Boolean,\n    slotMinTime: createDuration,\n    slotMaxTime: createDuration,\n    dayPopoverFormat: createFormatter,\n    slotDuration: createDuration,\n    snapDuration: createDuration,\n    headerToolbar: identity,\n    footerToolbar: identity,\n    defaultRangeSeparator: String,\n    titleRangeSeparator: String,\n    forceEventDuration: Boolean,\n    dayHeaders: Boolean,\n    dayHeaderFormat: createFormatter,\n    dayHeaderClassNames: identity,\n    dayHeaderContent: identity,\n    dayHeaderDidMount: identity,\n    dayHeaderWillUnmount: identity,\n    dayCellClassNames: identity,\n    dayCellContent: identity,\n    dayCellDidMount: identity,\n    dayCellWillUnmount: identity,\n    initialView: String,\n    aspectRatio: Number,\n    weekends: Boolean,\n    weekNumberCalculation: identity,\n    weekNumbers: Boolean,\n    weekNumberClassNames: identity,\n    weekNumberContent: identity,\n    weekNumberDidMount: identity,\n    weekNumberWillUnmount: identity,\n    editable: Boolean,\n    viewClassNames: identity,\n    viewDidMount: identity,\n    viewWillUnmount: identity,\n    nowIndicator: Boolean,\n    nowIndicatorClassNames: identity,\n    nowIndicatorContent: identity,\n    nowIndicatorDidMount: identity,\n    nowIndicatorWillUnmount: identity,\n    showNonCurrentDates: Boolean,\n    lazyFetching: Boolean,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n    timeZone: String,\n    locales: identity,\n    locale: identity,\n    themeSystem: String,\n    dragRevertDuration: Number,\n    dragScroll: Boolean,\n    allDayMaintainDuration: Boolean,\n    unselectAuto: Boolean,\n    dropAccept: identity,\n    eventOrder: parseFieldSpecs,\n    eventOrderStrict: Boolean,\n    handleWindowResize: Boolean,\n    windowResizeDelay: Number,\n    longPressDelay: Number,\n    eventDragMinDistance: Number,\n    expandRows: Boolean,\n    height: identity,\n    contentHeight: identity,\n    direction: String,\n    weekNumberFormat: createFormatter,\n    eventResizableFromStart: Boolean,\n    displayEventTime: Boolean,\n    displayEventEnd: Boolean,\n    weekText: String,\n    weekTextLong: String,\n    progressiveEventRendering: Boolean,\n    businessHours: identity,\n    initialDate: identity,\n    now: identity,\n    eventDataTransform: identity,\n    stickyHeaderDates: identity,\n    stickyFooterScrollbar: identity,\n    viewHeight: identity,\n    defaultAllDay: Boolean,\n    eventSourceFailure: identity,\n    eventSourceSuccess: identity,\n    eventDisplay: String,\n    eventStartEditable: Boolean,\n    eventDurationEditable: Boolean,\n    eventOverlap: identity,\n    eventConstraint: identity,\n    eventAllow: identity,\n    eventBackgroundColor: String,\n    eventBorderColor: String,\n    eventTextColor: String,\n    eventColor: String,\n    eventClassNames: identity,\n    eventContent: identity,\n    eventDidMount: identity,\n    eventWillUnmount: identity,\n    selectConstraint: identity,\n    selectOverlap: identity,\n    selectAllow: identity,\n    droppable: Boolean,\n    unselectCancel: String,\n    slotLabelFormat: identity,\n    slotLaneClassNames: identity,\n    slotLaneContent: identity,\n    slotLaneDidMount: identity,\n    slotLaneWillUnmount: identity,\n    slotLabelClassNames: identity,\n    slotLabelContent: identity,\n    slotLabelDidMount: identity,\n    slotLabelWillUnmount: identity,\n    dayMaxEvents: identity,\n    dayMaxEventRows: identity,\n    dayMinWidth: Number,\n    slotLabelInterval: createDuration,\n    allDayText: String,\n    allDayClassNames: identity,\n    allDayContent: identity,\n    allDayDidMount: identity,\n    allDayWillUnmount: identity,\n    slotMinWidth: Number,\n    navLinks: Boolean,\n    eventTimeFormat: createFormatter,\n    rerenderDelay: Number,\n    moreLinkText: identity,\n    moreLinkHint: identity,\n    selectMinDistance: Number,\n    selectable: Boolean,\n    selectLongPressDelay: Number,\n    eventLongPressDelay: Number,\n    selectMirror: Boolean,\n    eventMaxStack: Number,\n    eventMinHeight: Number,\n    eventMinWidth: Number,\n    eventShortHeight: Number,\n    slotEventOverlap: Boolean,\n    plugins: identity,\n    firstDay: Number,\n    dayCount: Number,\n    dateAlignment: String,\n    dateIncrement: createDuration,\n    hiddenDays: identity,\n    fixedWeekCount: Boolean,\n    validRange: identity,\n    visibleRange: identity,\n    titleFormat: identity,\n    eventInteractive: Boolean,\n    // only used by list-view, but languages define the value, so we need it in base options\n    noEventsText: String,\n    viewHint: identity,\n    navLinkHint: identity,\n    closeHint: String,\n    timeHint: String,\n    eventHint: String,\n    moreLinkClick: identity,\n    moreLinkClassNames: identity,\n    moreLinkContent: identity,\n    moreLinkDidMount: identity,\n    moreLinkWillUnmount: identity,\n    monthStartFormat: createFormatter,\n    // for connectors\n    // (can't be part of plugin system b/c must be provided at runtime)\n    handleCustomRendering: identity,\n    customRenderingMetaMap: identity,\n    customRenderingReplaces: Boolean,\n};\n// do NOT give a type here. need `typeof BASE_OPTION_DEFAULTS` to give real results.\n// raw values.\nconst BASE_OPTION_DEFAULTS = {\n    eventDisplay: 'auto',\n    defaultRangeSeparator: ' - ',\n    titleRangeSeparator: ' \\u2013 ',\n    defaultTimedEventDuration: '01:00:00',\n    defaultAllDayEventDuration: { day: 1 },\n    forceEventDuration: false,\n    nextDayThreshold: '00:00:00',\n    dayHeaders: true,\n    initialView: '',\n    aspectRatio: 1.35,\n    headerToolbar: {\n        start: 'title',\n        center: '',\n        end: 'today prev,next',\n    },\n    weekends: true,\n    weekNumbers: false,\n    weekNumberCalculation: 'local',\n    editable: false,\n    nowIndicator: false,\n    scrollTime: '06:00:00',\n    scrollTimeReset: true,\n    slotMinTime: '00:00:00',\n    slotMaxTime: '24:00:00',\n    showNonCurrentDates: true,\n    lazyFetching: true,\n    startParam: 'start',\n    endParam: 'end',\n    timeZoneParam: 'timeZone',\n    timeZone: 'local',\n    locales: [],\n    locale: '',\n    themeSystem: 'standard',\n    dragRevertDuration: 500,\n    dragScroll: true,\n    allDayMaintainDuration: false,\n    unselectAuto: true,\n    dropAccept: '*',\n    eventOrder: 'start,-duration,allDay,title',\n    dayPopoverFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n    handleWindowResize: true,\n    windowResizeDelay: 100,\n    longPressDelay: 1000,\n    eventDragMinDistance: 5,\n    expandRows: false,\n    navLinks: false,\n    selectable: false,\n    eventMinHeight: 15,\n    eventMinWidth: 30,\n    eventShortHeight: 30,\n    monthStartFormat: { month: 'long', day: 'numeric' },\n};\n// calendar listeners\n// ------------------\nconst CALENDAR_LISTENER_REFINERS = {\n    datesSet: identity,\n    eventsSet: identity,\n    eventAdd: identity,\n    eventChange: identity,\n    eventRemove: identity,\n    windowResize: identity,\n    eventClick: identity,\n    eventMouseEnter: identity,\n    eventMouseLeave: identity,\n    select: identity,\n    unselect: identity,\n    loading: identity,\n    // internal\n    _unmount: identity,\n    _beforeprint: identity,\n    _afterprint: identity,\n    _noEventDrop: identity,\n    _noEventResize: identity,\n    _resize: identity,\n    _scrollRequest: identity,\n};\n// calendar-specific options\n// -------------------------\nconst CALENDAR_OPTION_REFINERS = {\n    buttonText: identity,\n    buttonHints: identity,\n    views: identity,\n    plugins: identity,\n    initialEvents: identity,\n    events: identity,\n    eventSources: identity,\n};\nconst COMPLEX_OPTION_COMPARATORS = {\n    headerToolbar: isMaybeObjectsEqual,\n    footerToolbar: isMaybeObjectsEqual,\n    buttonText: isMaybeObjectsEqual,\n    buttonHints: isMaybeObjectsEqual,\n    buttonIcons: isMaybeObjectsEqual,\n    dateIncrement: isMaybeObjectsEqual,\n    plugins: isMaybeArraysEqual,\n    events: isMaybeArraysEqual,\n    eventSources: isMaybeArraysEqual,\n    ['resources']: isMaybeArraysEqual,\n};\nfunction isMaybeObjectsEqual(a, b) {\n    if (typeof a === 'object' && typeof b === 'object' && a && b) { // both non-null objects\n        return isPropsEqual(a, b);\n    }\n    return a === b;\n}\nfunction isMaybeArraysEqual(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        return isArraysEqual(a, b);\n    }\n    return a === b;\n}\n// view-specific options\n// ---------------------\nconst VIEW_OPTION_REFINERS = {\n    type: String,\n    component: identity,\n    buttonText: String,\n    buttonTextKey: String,\n    dateProfileGeneratorClass: identity,\n    usesMinMaxTime: Boolean,\n    classNames: identity,\n    content: identity,\n    didMount: identity,\n    willUnmount: identity,\n};\n// util funcs\n// ----------------------------------------------------------------------------------------------------\nfunction mergeRawOptions(optionSets) {\n    return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS);\n}\nfunction refineProps(input, refiners) {\n    let refined = {};\n    let extra = {};\n    for (let propName in refiners) {\n        if (propName in input) {\n            refined[propName] = refiners[propName](input[propName]);\n        }\n    }\n    for (let propName in input) {\n        if (!(propName in refiners)) {\n            extra[propName] = input[propName];\n        }\n    }\n    return { refined, extra };\n}\nfunction identity(raw) {\n    return raw;\n}\n\nconst { hasOwnProperty } = Object.prototype;\n// Merges an array of objects into a single object.\n// The second argument allows for an array of property names who's object values will be merged together.\nfunction mergeProps(propObjs, complexPropsMap) {\n    let dest = {};\n    if (complexPropsMap) {\n        for (let name in complexPropsMap) {\n            if (complexPropsMap[name] === isMaybeObjectsEqual) { // implies that it's object-mergeable\n                let complexObjs = [];\n                // collect the trailing object values, stopping when a non-object is discovered\n                for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n                    let val = propObjs[i][name];\n                    if (typeof val === 'object' && val) { // non-null object\n                        complexObjs.unshift(val);\n                    }\n                    else if (val !== undefined) {\n                        dest[name] = val; // if there were no objects, this value will be used\n                        break;\n                    }\n                }\n                // if the trailing values were objects, use the merged value\n                if (complexObjs.length) {\n                    dest[name] = mergeProps(complexObjs);\n                }\n            }\n        }\n    }\n    // copy values into the destination, going from last to first\n    for (let i = propObjs.length - 1; i >= 0; i -= 1) {\n        let props = propObjs[i];\n        for (let name in props) {\n            if (!(name in dest)) { // if already assigned by previous props or complex props, don't reassign\n                dest[name] = props[name];\n            }\n        }\n    }\n    return dest;\n}\nfunction filterHash(hash, func) {\n    let filtered = {};\n    for (let key in hash) {\n        if (func(hash[key], key)) {\n            filtered[key] = hash[key];\n        }\n    }\n    return filtered;\n}\nfunction mapHash(hash, func) {\n    let newHash = {};\n    for (let key in hash) {\n        newHash[key] = func(hash[key], key);\n    }\n    return newHash;\n}\nfunction arrayToHash(a) {\n    let hash = {};\n    for (let item of a) {\n        hash[item] = true;\n    }\n    return hash;\n}\n// TODO: reassess browser support\n// https://caniuse.com/?search=object.values\nfunction hashValuesToArray(obj) {\n    let a = [];\n    for (let key in obj) {\n        a.push(obj[key]);\n    }\n    return a;\n}\nfunction isPropsEqual(obj0, obj1) {\n    if (obj0 === obj1) {\n        return true;\n    }\n    for (let key in obj0) {\n        if (hasOwnProperty.call(obj0, key)) {\n            if (!(key in obj1)) {\n                return false;\n            }\n        }\n    }\n    for (let key in obj1) {\n        if (hasOwnProperty.call(obj1, key)) {\n            if (obj0[key] !== obj1[key]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nconst HANDLER_RE = /^on[A-Z]/;\nfunction isNonHandlerPropsEqual(obj0, obj1) {\n    const keys = getUnequalProps(obj0, obj1);\n    for (let key of keys) {\n        if (!HANDLER_RE.test(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getUnequalProps(obj0, obj1) {\n    let keys = [];\n    for (let key in obj0) {\n        if (hasOwnProperty.call(obj0, key)) {\n            if (!(key in obj1)) {\n                keys.push(key);\n            }\n        }\n    }\n    for (let key in obj1) {\n        if (hasOwnProperty.call(obj1, key)) {\n            if (obj0[key] !== obj1[key]) {\n                keys.push(key);\n            }\n        }\n    }\n    return keys;\n}\nfunction compareObjs(oldProps, newProps, equalityFuncs = {}) {\n    if (oldProps === newProps) {\n        return true;\n    }\n    for (let key in newProps) {\n        if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])) ;\n        else {\n            return false;\n        }\n    }\n    // check for props that were omitted in the new\n    for (let key in oldProps) {\n        if (!(key in newProps)) {\n            return false;\n        }\n    }\n    return true;\n}\n/*\nassumed \"true\" equality for handler names like \"onReceiveSomething\"\n*/\nfunction isObjValsEqual(val0, val1, comparator) {\n    if (val0 === val1 || comparator === true) {\n        return true;\n    }\n    if (comparator) {\n        return comparator(val0, val1);\n    }\n    return false;\n}\nfunction collectFromHash(hash, startIndex = 0, endIndex, step = 1) {\n    let res = [];\n    if (endIndex == null) {\n        endIndex = Object.keys(hash).length;\n    }\n    for (let i = startIndex; i < endIndex; i += step) {\n        let val = hash[i];\n        if (val !== undefined) { // will disregard undefined for sparse arrays\n            res.push(val);\n        }\n    }\n    return res;\n}\n\nlet calendarSystemClassMap = {};\nfunction registerCalendarSystem(name, theClass) {\n    calendarSystemClassMap[name] = theClass;\n}\nfunction createCalendarSystem(name) {\n    return new calendarSystemClassMap[name]();\n}\nclass GregorianCalendarSystem {\n    getMarkerYear(d) {\n        return d.getUTCFullYear();\n    }\n    getMarkerMonth(d) {\n        return d.getUTCMonth();\n    }\n    getMarkerDay(d) {\n        return d.getUTCDate();\n    }\n    arrayToMarker(arr) {\n        return arrayToUtcDate(arr);\n    }\n    markerToArray(marker) {\n        return dateToUtcArray(marker);\n    }\n}\nregisterCalendarSystem('gregory', GregorianCalendarSystem);\n\nconst ISO_RE = /^\\s*(\\d{4})(-?(\\d{2})(-?(\\d{2})([T ](\\d{2}):?(\\d{2})(:?(\\d{2})(\\.(\\d+))?)?(Z|(([-+])(\\d{2})(:?(\\d{2}))?))?)?)?)?$/;\nfunction parse(str) {\n    let m = ISO_RE.exec(str);\n    if (m) {\n        let marker = new Date(Date.UTC(Number(m[1]), m[3] ? Number(m[3]) - 1 : 0, Number(m[5] || 1), Number(m[7] || 0), Number(m[8] || 0), Number(m[10] || 0), m[12] ? Number(`0.${m[12]}`) * 1000 : 0));\n        if (isValidDate(marker)) {\n            let timeZoneOffset = null;\n            if (m[13]) {\n                timeZoneOffset = (m[15] === '-' ? -1 : 1) * (Number(m[16] || 0) * 60 +\n                    Number(m[18] || 0));\n            }\n            return {\n                marker,\n                isTimeUnspecified: !m[6],\n                timeZoneOffset,\n            };\n        }\n    }\n    return null;\n}\n\nclass DateEnv {\n    constructor(settings) {\n        let timeZone = this.timeZone = settings.timeZone;\n        let isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';\n        if (settings.namedTimeZoneImpl && isNamedTimeZone) {\n            this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);\n        }\n        this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);\n        this.calendarSystem = createCalendarSystem(settings.calendarSystem);\n        this.locale = settings.locale;\n        this.weekDow = settings.locale.week.dow;\n        this.weekDoy = settings.locale.week.doy;\n        if (settings.weekNumberCalculation === 'ISO') {\n            this.weekDow = 1;\n            this.weekDoy = 4;\n        }\n        if (typeof settings.firstDay === 'number') {\n            this.weekDow = settings.firstDay;\n        }\n        if (typeof settings.weekNumberCalculation === 'function') {\n            this.weekNumberFunc = settings.weekNumberCalculation;\n        }\n        this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText;\n        this.weekTextLong = (settings.weekTextLong != null ? settings.weekTextLong : settings.locale.options.weekTextLong) || this.weekText;\n        this.cmdFormatter = settings.cmdFormatter;\n        this.defaultSeparator = settings.defaultSeparator;\n    }\n    // Creating / Parsing\n    createMarker(input) {\n        let meta = this.createMarkerMeta(input);\n        if (meta === null) {\n            return null;\n        }\n        return meta.marker;\n    }\n    createNowMarker() {\n        if (this.canComputeOffset) {\n            return this.timestampToMarker(new Date().valueOf());\n        }\n        // if we can't compute the current date val for a timezone,\n        // better to give the current local date vals than UTC\n        return arrayToUtcDate(dateToLocalArray(new Date()));\n    }\n    createMarkerMeta(input) {\n        if (typeof input === 'string') {\n            return this.parse(input);\n        }\n        let marker = null;\n        if (typeof input === 'number') {\n            marker = this.timestampToMarker(input);\n        }\n        else if (input instanceof Date) {\n            input = input.valueOf();\n            if (!isNaN(input)) {\n                marker = this.timestampToMarker(input);\n            }\n        }\n        else if (Array.isArray(input)) {\n            marker = arrayToUtcDate(input);\n        }\n        if (marker === null || !isValidDate(marker)) {\n            return null;\n        }\n        return { marker, isTimeUnspecified: false, forcedTzo: null };\n    }\n    parse(s) {\n        let parts = parse(s);\n        if (parts === null) {\n            return null;\n        }\n        let { marker } = parts;\n        let forcedTzo = null;\n        if (parts.timeZoneOffset !== null) {\n            if (this.canComputeOffset) {\n                marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);\n            }\n            else {\n                forcedTzo = parts.timeZoneOffset;\n            }\n        }\n        return { marker, isTimeUnspecified: parts.isTimeUnspecified, forcedTzo };\n    }\n    // Accessors\n    getYear(marker) {\n        return this.calendarSystem.getMarkerYear(marker);\n    }\n    getMonth(marker) {\n        return this.calendarSystem.getMarkerMonth(marker);\n    }\n    getDay(marker) {\n        return this.calendarSystem.getMarkerDay(marker);\n    }\n    // Adding / Subtracting\n    add(marker, dur) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] += dur.years;\n        a[1] += dur.months;\n        a[2] += dur.days;\n        a[6] += dur.milliseconds;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    subtract(marker, dur) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] -= dur.years;\n        a[1] -= dur.months;\n        a[2] -= dur.days;\n        a[6] -= dur.milliseconds;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    addYears(marker, n) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[0] += n;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    addMonths(marker, n) {\n        let a = this.calendarSystem.markerToArray(marker);\n        a[1] += n;\n        return this.calendarSystem.arrayToMarker(a);\n    }\n    // Diffing Whole Units\n    diffWholeYears(m0, m1) {\n        let { calendarSystem } = this;\n        if (timeAsMs(m0) === timeAsMs(m1) &&\n            calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) &&\n            calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {\n            return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);\n        }\n        return null;\n    }\n    diffWholeMonths(m0, m1) {\n        let { calendarSystem } = this;\n        if (timeAsMs(m0) === timeAsMs(m1) &&\n            calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {\n            return (calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0)) +\n                (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;\n        }\n        return null;\n    }\n    // Range / Duration\n    greatestWholeUnit(m0, m1) {\n        let n = this.diffWholeYears(m0, m1);\n        if (n !== null) {\n            return { unit: 'year', value: n };\n        }\n        n = this.diffWholeMonths(m0, m1);\n        if (n !== null) {\n            return { unit: 'month', value: n };\n        }\n        n = diffWholeWeeks(m0, m1);\n        if (n !== null) {\n            return { unit: 'week', value: n };\n        }\n        n = diffWholeDays(m0, m1);\n        if (n !== null) {\n            return { unit: 'day', value: n };\n        }\n        n = diffHours(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'hour', value: n };\n        }\n        n = diffMinutes(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'minute', value: n };\n        }\n        n = diffSeconds(m0, m1);\n        if (isInt(n)) {\n            return { unit: 'second', value: n };\n        }\n        return { unit: 'millisecond', value: m1.valueOf() - m0.valueOf() };\n    }\n    countDurationsBetween(m0, m1, d) {\n        // TODO: can use greatestWholeUnit\n        let diff;\n        if (d.years) {\n            diff = this.diffWholeYears(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughYears(d);\n            }\n        }\n        if (d.months) {\n            diff = this.diffWholeMonths(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughMonths(d);\n            }\n        }\n        if (d.days) {\n            diff = diffWholeDays(m0, m1);\n            if (diff !== null) {\n                return diff / asRoughDays(d);\n            }\n        }\n        return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);\n    }\n    // Start-Of\n    // these DON'T return zoned-dates. only UTC start-of dates\n    startOf(m, unit) {\n        if (unit === 'year') {\n            return this.startOfYear(m);\n        }\n        if (unit === 'month') {\n            return this.startOfMonth(m);\n        }\n        if (unit === 'week') {\n            return this.startOfWeek(m);\n        }\n        if (unit === 'day') {\n            return startOfDay(m);\n        }\n        if (unit === 'hour') {\n            return startOfHour(m);\n        }\n        if (unit === 'minute') {\n            return startOfMinute(m);\n        }\n        if (unit === 'second') {\n            return startOfSecond(m);\n        }\n        return null;\n    }\n    startOfYear(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n        ]);\n    }\n    startOfMonth(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n            this.calendarSystem.getMarkerMonth(m),\n        ]);\n    }\n    startOfWeek(m) {\n        return this.calendarSystem.arrayToMarker([\n            this.calendarSystem.getMarkerYear(m),\n            this.calendarSystem.getMarkerMonth(m),\n            m.getUTCDate() - ((m.getUTCDay() - this.weekDow + 7) % 7),\n        ]);\n    }\n    // Week Number\n    computeWeekNumber(marker) {\n        if (this.weekNumberFunc) {\n            return this.weekNumberFunc(this.toDate(marker));\n        }\n        return weekOfYear(marker, this.weekDow, this.weekDoy);\n    }\n    // TODO: choke on timeZoneName: long\n    format(marker, formatter, dateOptions = {}) {\n        return formatter.format({\n            marker,\n            timeZoneOffset: dateOptions.forcedTzo != null ?\n                dateOptions.forcedTzo :\n                this.offsetForMarker(marker),\n        }, this);\n    }\n    formatRange(start, end, formatter, dateOptions = {}) {\n        if (dateOptions.isEndExclusive) {\n            end = addMs(end, -1);\n        }\n        return formatter.formatRange({\n            marker: start,\n            timeZoneOffset: dateOptions.forcedStartTzo != null ?\n                dateOptions.forcedStartTzo :\n                this.offsetForMarker(start),\n        }, {\n            marker: end,\n            timeZoneOffset: dateOptions.forcedEndTzo != null ?\n                dateOptions.forcedEndTzo :\n                this.offsetForMarker(end),\n        }, this, dateOptions.defaultSeparator);\n    }\n    /*\n    DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,\n    might as well use buildIsoString or some other util directly\n    */\n    formatIso(marker, extraOptions = {}) {\n        let timeZoneOffset = null;\n        if (!extraOptions.omitTimeZoneOffset) {\n            if (extraOptions.forcedTzo != null) {\n                timeZoneOffset = extraOptions.forcedTzo;\n            }\n            else {\n                timeZoneOffset = this.offsetForMarker(marker);\n            }\n        }\n        return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);\n    }\n    // TimeZone\n    timestampToMarker(ms) {\n        if (this.timeZone === 'local') {\n            return arrayToUtcDate(dateToLocalArray(new Date(ms)));\n        }\n        if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {\n            return new Date(ms);\n        }\n        return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));\n    }\n    offsetForMarker(m) {\n        if (this.timeZone === 'local') {\n            return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert \"inverse\" offset to \"normal\" offset\n        }\n        if (this.timeZone === 'UTC') {\n            return 0;\n        }\n        if (this.namedTimeZoneImpl) {\n            return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));\n        }\n        return null;\n    }\n    // Conversion\n    toDate(m, forcedTzo) {\n        if (this.timeZone === 'local') {\n            return arrayToLocalDate(dateToUtcArray(m));\n        }\n        if (this.timeZone === 'UTC') {\n            return new Date(m.valueOf()); // make sure it's a copy\n        }\n        if (!this.namedTimeZoneImpl) {\n            return new Date(m.valueOf() - (forcedTzo || 0));\n        }\n        return new Date(m.valueOf() -\n            this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60);\n    }\n}\n\nclass Theme {\n    constructor(calendarOptions) {\n        if (this.iconOverrideOption) {\n            this.setIconOverride(calendarOptions[this.iconOverrideOption]);\n        }\n    }\n    setIconOverride(iconOverrideHash) {\n        let iconClassesCopy;\n        let buttonName;\n        if (typeof iconOverrideHash === 'object' && iconOverrideHash) { // non-null object\n            iconClassesCopy = Object.assign({}, this.iconClasses);\n            for (buttonName in iconOverrideHash) {\n                iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);\n            }\n            this.iconClasses = iconClassesCopy;\n        }\n        else if (iconOverrideHash === false) {\n            this.iconClasses = {};\n        }\n    }\n    applyIconOverridePrefix(className) {\n        let prefix = this.iconOverridePrefix;\n        if (prefix && className.indexOf(prefix) !== 0) { // if not already present\n            className = prefix + className;\n        }\n        return className;\n    }\n    getClass(key) {\n        return this.classes[key] || '';\n    }\n    getIconClass(buttonName, isRtl) {\n        let className;\n        if (isRtl && this.rtlIconClasses) {\n            className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName];\n        }\n        else {\n            className = this.iconClasses[buttonName];\n        }\n        if (className) {\n            return `${this.baseIconClass} ${className}`;\n        }\n        return '';\n    }\n    getCustomButtonIconClass(customButtonProps) {\n        let className;\n        if (this.iconOverrideCustomButtonOption) {\n            className = customButtonProps[this.iconOverrideCustomButtonOption];\n            if (className) {\n                return `${this.baseIconClass} ${this.applyIconOverridePrefix(className)}`;\n            }\n        }\n        return '';\n    }\n}\nTheme.prototype.classes = {};\nTheme.prototype.iconClasses = {};\nTheme.prototype.baseIconClass = '';\nTheme.prototype.iconOverridePrefix = '';\n\n/*\nNOTE: this can be a public API, especially createElement for hooks.\nSee examples/typescript-scheduler/src/index.ts\n*/\nfunction flushSync(runBeforeFlush) {\n    runBeforeFlush();\n    let oldDebounceRendering = preact.options.debounceRendering; // orig\n    let callbackQ = [];\n    function execCallbackSync(callback) {\n        callbackQ.push(callback);\n    }\n    preact.options.debounceRendering = execCallbackSync;\n    preact.render(preact.createElement(FakeComponent, {}), document.createElement('div'));\n    while (callbackQ.length) {\n        callbackQ.shift()();\n    }\n    preact.options.debounceRendering = oldDebounceRendering;\n}\nclass FakeComponent extends preact.Component {\n    render() { return preact.createElement('div', {}); }\n    componentDidMount() { this.setState({}); }\n}\n// TODO: use preact/compat instead?\nfunction createContext(defaultValue) {\n    let ContextType = preact.createContext(defaultValue);\n    let origProvider = ContextType.Provider;\n    ContextType.Provider = function () {\n        let isNew = !this.getChildContext;\n        let children = origProvider.apply(this, arguments); // eslint-disable-line prefer-rest-params\n        if (isNew) {\n            let subs = [];\n            this.shouldComponentUpdate = (_props) => {\n                if (this.props.value !== _props.value) {\n                    subs.forEach((c) => {\n                        c.context = _props.value;\n                        c.forceUpdate();\n                    });\n                }\n            };\n            this.sub = (c) => {\n                subs.push(c);\n                let old = c.componentWillUnmount;\n                c.componentWillUnmount = () => {\n                    subs.splice(subs.indexOf(c), 1);\n                    old && old.call(c);\n                };\n            };\n        }\n        return children;\n    };\n    return ContextType;\n}\n\nclass ScrollResponder {\n    constructor(execFunc, emitter, scrollTime, scrollTimeReset) {\n        this.execFunc = execFunc;\n        this.emitter = emitter;\n        this.scrollTime = scrollTime;\n        this.scrollTimeReset = scrollTimeReset;\n        this.handleScrollRequest = (request) => {\n            this.queuedRequest = Object.assign({}, this.queuedRequest || {}, request);\n            this.drain();\n        };\n        emitter.on('_scrollRequest', this.handleScrollRequest);\n        this.fireInitialScroll();\n    }\n    detach() {\n        this.emitter.off('_scrollRequest', this.handleScrollRequest);\n    }\n    update(isDatesNew) {\n        if (isDatesNew && this.scrollTimeReset) {\n            this.fireInitialScroll(); // will drain\n        }\n        else {\n            this.drain();\n        }\n    }\n    fireInitialScroll() {\n        this.handleScrollRequest({\n            time: this.scrollTime,\n        });\n    }\n    drain() {\n        if (this.queuedRequest && this.execFunc(this.queuedRequest)) {\n            this.queuedRequest = null;\n        }\n    }\n}\n\nconst ViewContextType = createContext({}); // for Components\nfunction buildViewContext(viewSpec, viewApi, viewOptions, dateProfileGenerator, dateEnv, nowManager, theme, pluginHooks, dispatch, getCurrentData, emitter, calendarApi, registerInteractiveComponent, unregisterInteractiveComponent) {\n    return {\n        dateEnv,\n        nowManager,\n        options: viewOptions,\n        pluginHooks,\n        emitter,\n        dispatch,\n        getCurrentData,\n        calendarApi,\n        viewSpec,\n        viewApi,\n        dateProfileGenerator,\n        theme,\n        isRtl: viewOptions.direction === 'rtl',\n        addResizeHandler(handler) {\n            emitter.on('_resize', handler);\n        },\n        removeResizeHandler(handler) {\n            emitter.off('_resize', handler);\n        },\n        createScrollResponder(execFunc) {\n            return new ScrollResponder(execFunc, emitter, createDuration(viewOptions.scrollTime), viewOptions.scrollTimeReset);\n        },\n        registerInteractiveComponent,\n        unregisterInteractiveComponent,\n    };\n}\n\n/* eslint max-classes-per-file: off */\nclass PureComponent extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.debug) {\n            // eslint-disable-next-line no-console\n            console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state));\n        }\n        return !compareObjs(this.props, nextProps, this.propEquality) ||\n            !compareObjs(this.state, nextState, this.stateEquality);\n    }\n    // HACK for freakin' React StrictMode\n    safeSetState(newState) {\n        if (!compareObjs(this.state, Object.assign(Object.assign({}, this.state), newState), this.stateEquality)) {\n            this.setState(newState);\n        }\n    }\n}\nPureComponent.addPropsEquality = addPropsEquality;\nPureComponent.addStateEquality = addStateEquality;\nPureComponent.contextType = ViewContextType;\nPureComponent.prototype.propEquality = {};\nPureComponent.prototype.stateEquality = {};\nclass BaseComponent extends PureComponent {\n}\nBaseComponent.contextType = ViewContextType;\nfunction addPropsEquality(propEquality) {\n    let hash = Object.create(this.prototype.propEquality);\n    Object.assign(hash, propEquality);\n    this.prototype.propEquality = hash;\n}\nfunction addStateEquality(stateEquality) {\n    let hash = Object.create(this.prototype.stateEquality);\n    Object.assign(hash, stateEquality);\n    this.prototype.stateEquality = hash;\n}\n// use other one\nfunction setRef(ref, current) {\n    if (typeof ref === 'function') {\n        ref(current);\n    }\n    else if (ref) {\n        // see https://github.com/facebook/react/issues/13029\n        ref.current = current;\n    }\n}\n\nclass ContentInjector extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.id = guid();\n        this.queuedDomNodes = [];\n        this.currentDomNodes = [];\n        this.handleEl = (el) => {\n            const { options } = this.context;\n            const { generatorName } = this.props;\n            if (!options.customRenderingReplaces || !hasCustomRenderingHandler(generatorName, options)) {\n                this.updateElRef(el);\n            }\n        };\n        this.updateElRef = (el) => {\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n            }\n        };\n    }\n    render() {\n        const { props, context } = this;\n        const { options } = context;\n        const { customGenerator, defaultGenerator, renderProps } = props;\n        const attrs = buildElAttrs(props, [], this.handleEl);\n        let useDefault = false;\n        let innerContent;\n        let queuedDomNodes = [];\n        let currentGeneratorMeta;\n        if (customGenerator != null) {\n            const customGeneratorRes = typeof customGenerator === 'function' ?\n                customGenerator(renderProps, createElement) :\n                customGenerator;\n            if (customGeneratorRes === true) {\n                useDefault = true;\n            }\n            else {\n                const isObject = customGeneratorRes && typeof customGeneratorRes === 'object'; // non-null\n                if (isObject && ('html' in customGeneratorRes)) {\n                    attrs.dangerouslySetInnerHTML = { __html: customGeneratorRes.html };\n                }\n                else if (isObject && ('domNodes' in customGeneratorRes)) {\n                    queuedDomNodes = Array.prototype.slice.call(customGeneratorRes.domNodes);\n                }\n                else if (isObject\n                    ? isValidElement(customGeneratorRes) // vdom node\n                    : typeof customGeneratorRes !== 'function' // primitive value (like string or number)\n                ) {\n                    // use in vdom\n                    innerContent = customGeneratorRes;\n                }\n                else {\n                    // an exotic object for handleCustomRendering\n                    currentGeneratorMeta = customGeneratorRes;\n                }\n            }\n        }\n        else {\n            useDefault = !hasCustomRenderingHandler(props.generatorName, options);\n        }\n        if (useDefault && defaultGenerator) {\n            innerContent = defaultGenerator(renderProps);\n        }\n        this.queuedDomNodes = queuedDomNodes;\n        this.currentGeneratorMeta = currentGeneratorMeta;\n        return createElement(props.elTag, attrs, innerContent);\n    }\n    componentDidMount() {\n        this.applyQueueudDomNodes();\n        this.triggerCustomRendering(true);\n    }\n    componentDidUpdate() {\n        this.applyQueueudDomNodes();\n        this.triggerCustomRendering(true);\n    }\n    componentWillUnmount() {\n        this.triggerCustomRendering(false); // TODO: different API for removal?\n    }\n    triggerCustomRendering(isActive) {\n        var _a;\n        const { props, context } = this;\n        const { handleCustomRendering, customRenderingMetaMap } = context.options;\n        if (handleCustomRendering) {\n            const generatorMeta = (_a = this.currentGeneratorMeta) !== null && _a !== void 0 ? _a : customRenderingMetaMap === null || customRenderingMetaMap === void 0 ? void 0 : customRenderingMetaMap[props.generatorName];\n            if (generatorMeta) {\n                handleCustomRendering(Object.assign(Object.assign({ id: this.id, isActive, containerEl: this.base, reportNewContainerEl: this.updateElRef, // front-end framework tells us about new container els\n                    generatorMeta }, props), { elClasses: (props.elClasses || []).filter(isTruthy) }));\n            }\n        }\n    }\n    applyQueueudDomNodes() {\n        const { queuedDomNodes, currentDomNodes } = this;\n        const el = this.base;\n        if (!isArraysEqual(queuedDomNodes, currentDomNodes)) {\n            currentDomNodes.forEach(removeElement);\n            for (let newNode of queuedDomNodes) {\n                el.appendChild(newNode);\n            }\n            this.currentDomNodes = queuedDomNodes;\n        }\n    }\n}\nContentInjector.addPropsEquality({\n    elClasses: isArraysEqual,\n    elStyle: isPropsEqual,\n    elAttrs: isNonHandlerPropsEqual,\n    renderProps: isPropsEqual,\n});\n// Util\n/*\nDoes UI-framework provide custom way of rendering that does not use Preact VDOM\nAND does the calendar's options define custom rendering?\nAKA. Should we NOT render the default content?\n*/\nfunction hasCustomRenderingHandler(generatorName, options) {\n    var _a;\n    return Boolean(options.handleCustomRendering &&\n        generatorName &&\n        ((_a = options.customRenderingMetaMap) === null || _a === void 0 ? void 0 : _a[generatorName]));\n}\nfunction buildElAttrs(props, extraClassNames, elRef) {\n    const attrs = Object.assign(Object.assign({}, props.elAttrs), { ref: elRef });\n    if (props.elClasses || extraClassNames) {\n        attrs.className = (props.elClasses || [])\n            .concat(extraClassNames || [])\n            .concat(attrs.className || [])\n            .filter(Boolean)\n            .join(' ');\n    }\n    if (props.elStyle) {\n        attrs.style = props.elStyle;\n    }\n    return attrs;\n}\nfunction isTruthy(val) {\n    return Boolean(val);\n}\n\nconst RenderId = createContext(0);\n\nclass ContentContainer extends Component {\n    constructor() {\n        super(...arguments);\n        this.InnerContent = InnerContentInjector.bind(undefined, this);\n        this.handleEl = (el) => {\n            this.el = el;\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n                if (el && this.didMountMisfire) {\n                    this.componentDidMount();\n                }\n            }\n        };\n    }\n    render() {\n        const { props } = this;\n        const generatedClassNames = generateClassNames(props.classNameGenerator, props.renderProps);\n        if (props.children) {\n            const elAttrs = buildElAttrs(props, generatedClassNames, this.handleEl);\n            const children = props.children(this.InnerContent, props.renderProps, elAttrs);\n            if (props.elTag) {\n                return createElement(props.elTag, elAttrs, children);\n            }\n            else {\n                return children;\n            }\n        }\n        else {\n            return createElement((ContentInjector), Object.assign(Object.assign({}, props), { elRef: this.handleEl, elTag: props.elTag || 'div', elClasses: (props.elClasses || []).concat(generatedClassNames), renderId: this.context }));\n        }\n    }\n    componentDidMount() {\n        var _a, _b;\n        if (this.el) {\n            (_b = (_a = this.props).didMount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.el }));\n        }\n        else {\n            this.didMountMisfire = true;\n        }\n    }\n    componentWillUnmount() {\n        var _a, _b;\n        (_b = (_a = this.props).willUnmount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), { el: this.el }));\n    }\n}\nContentContainer.contextType = RenderId;\nfunction InnerContentInjector(containerComponent, props) {\n    const parentProps = containerComponent.props;\n    return createElement((ContentInjector), Object.assign({ renderProps: parentProps.renderProps, generatorName: parentProps.generatorName, customGenerator: parentProps.customGenerator, defaultGenerator: parentProps.defaultGenerator, renderId: containerComponent.context }, props));\n}\n// Utils\nfunction generateClassNames(classNameGenerator, renderProps) {\n    const classNames = typeof classNameGenerator === 'function' ?\n        classNameGenerator(renderProps) :\n        classNameGenerator || [];\n    return typeof classNames === 'string' ? [classNames] : classNames;\n}\n\nclass ViewContainer extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let renderProps = { view: context.viewApi };\n        return (createElement(ContentContainer, Object.assign({}, props, { elTag: props.elTag || 'div', elClasses: [\n                ...buildViewClassNames(props.viewSpec),\n                ...(props.elClasses || []),\n            ], renderProps: renderProps, classNameGenerator: options.viewClassNames, generatorName: undefined, didMount: options.viewDidMount, willUnmount: options.viewWillUnmount }), () => props.children));\n    }\n}\nfunction buildViewClassNames(viewSpec) {\n    return [\n        `fc-${viewSpec.type}-view`,\n        'fc-view',\n    ];\n}\n\nfunction parseRange(input, dateEnv) {\n    let start = null;\n    let end = null;\n    if (input.start) {\n        start = dateEnv.createMarker(input.start);\n    }\n    if (input.end) {\n        end = dateEnv.createMarker(input.end);\n    }\n    if (!start && !end) {\n        return null;\n    }\n    if (start && end && end < start) {\n        return null;\n    }\n    return { start, end };\n}\n// SIDE-EFFECT: will mutate ranges.\n// Will return a new array result.\nfunction invertRanges(ranges, constraintRange) {\n    let invertedRanges = [];\n    let { start } = constraintRange; // the end of the previous range. the start of the new range\n    let i;\n    let dateRange;\n    // ranges need to be in order. required for our date-walking algorithm\n    ranges.sort(compareRanges);\n    for (i = 0; i < ranges.length; i += 1) {\n        dateRange = ranges[i];\n        // add the span of time before the event (if there is any)\n        if (dateRange.start > start) { // compare millisecond time (skip any ambig logic)\n            invertedRanges.push({ start, end: dateRange.start });\n        }\n        if (dateRange.end > start) {\n            start = dateRange.end;\n        }\n    }\n    // add the span of time after the last event (if there is any)\n    if (start < constraintRange.end) { // compare millisecond time (skip any ambig logic)\n        invertedRanges.push({ start, end: constraintRange.end });\n    }\n    return invertedRanges;\n}\nfunction compareRanges(range0, range1) {\n    return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first\n}\nfunction intersectRanges(range0, range1) {\n    let { start, end } = range0;\n    let newRange = null;\n    if (range1.start !== null) {\n        if (start === null) {\n            start = range1.start;\n        }\n        else {\n            start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));\n        }\n    }\n    if (range1.end != null) {\n        if (end === null) {\n            end = range1.end;\n        }\n        else {\n            end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));\n        }\n    }\n    if (start === null || end === null || start < end) {\n        newRange = { start, end };\n    }\n    return newRange;\n}\nfunction rangesEqual(range0, range1) {\n    return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) &&\n        (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());\n}\nfunction rangesIntersect(range0, range1) {\n    return (range0.end === null || range1.start === null || range0.end > range1.start) &&\n        (range0.start === null || range1.end === null || range0.start < range1.end);\n}\nfunction rangeContainsRange(outerRange, innerRange) {\n    return (outerRange.start === null || (innerRange.start !== null && innerRange.start >= outerRange.start)) &&\n        (outerRange.end === null || (innerRange.end !== null && innerRange.end <= outerRange.end));\n}\nfunction rangeContainsMarker(range, date) {\n    return (range.start === null || date >= range.start) &&\n        (range.end === null || date < range.end);\n}\n// If the given date is not within the given range, move it inside.\n// (If it's past the end, make it one millisecond before the end).\nfunction constrainMarkerToRange(date, range) {\n    if (range.start != null && date < range.start) {\n        return range.start;\n    }\n    if (range.end != null && date >= range.end) {\n        return new Date(range.end.valueOf() - 1);\n    }\n    return date;\n}\n\n/* Date stuff that doesn't belong in datelib core\n----------------------------------------------------------------------------------------------------------------------*/\n// given a timed range, computes an all-day range that has the same exact duration,\n// but whose start time is aligned with the start of the day.\nfunction computeAlignedDayRange(timedRange) {\n    let dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;\n    let start = startOfDay(timedRange.start);\n    let end = addDays(start, dayCnt);\n    return { start, end };\n}\n// given a timed range, computes an all-day range based on how for the end date bleeds into the next day\n// TODO: give nextDayThreshold a default arg\nfunction computeVisibleDayRange(timedRange, nextDayThreshold = createDuration(0)) {\n    let startDay = null;\n    let endDay = null;\n    if (timedRange.end) {\n        endDay = startOfDay(timedRange.end);\n        let endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into `endDay`\n        // If the end time is actually inclusively part of the next day and is equal to or\n        // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\n        // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\n        if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {\n            endDay = addDays(endDay, 1);\n        }\n    }\n    if (timedRange.start) {\n        startDay = startOfDay(timedRange.start); // the beginning of the day the range starts\n        // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.\n        if (endDay && endDay <= startDay) {\n            endDay = addDays(startDay, 1);\n        }\n    }\n    return { start: startDay, end: endDay };\n}\n// spans from one day into another?\nfunction isMultiDayRange(range) {\n    let visibleRange = computeVisibleDayRange(range);\n    return diffDays(visibleRange.start, visibleRange.end) > 1;\n}\nfunction diffDates(date0, date1, dateEnv, largeUnit) {\n    if (largeUnit === 'year') {\n        return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');\n    }\n    if (largeUnit === 'month') {\n        return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');\n    }\n    return diffDayAndTime(date0, date1); // returns a duration\n}\n\nclass DateProfileGenerator {\n    constructor(props) {\n        this.props = props;\n        this.initHiddenDays();\n    }\n    /* Date Range Computation\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Builds a structure with info about what the dates/ranges will be for the \"prev\" view.\n    buildPrev(currentDateProfile, currentDate, forceToValid) {\n        let { dateEnv } = this.props;\n        let prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n        currentDateProfile.dateIncrement);\n        return this.build(prevDate, -1, forceToValid);\n    }\n    // Builds a structure with info about what the dates/ranges will be for the \"next\" view.\n    buildNext(currentDateProfile, currentDate, forceToValid) {\n        let { dateEnv } = this.props;\n        let nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n        currentDateProfile.dateIncrement);\n        return this.build(nextDate, 1, forceToValid);\n    }\n    // Builds a structure holding dates/ranges for rendering around the given date.\n    // Optional direction param indicates whether the date is being incremented/decremented\n    // from its previous value. decremented = -1, incremented = 1 (default).\n    build(currentDate, direction, forceToValid = true) {\n        let { props } = this;\n        let validRange;\n        let currentInfo;\n        let isRangeAllDay;\n        let renderRange;\n        let activeRange;\n        let isValid;\n        validRange = this.buildValidRange();\n        validRange = this.trimHiddenDays(validRange);\n        if (forceToValid) {\n            currentDate = constrainMarkerToRange(currentDate, validRange);\n        }\n        currentInfo = this.buildCurrentRangeInfo(currentDate, direction);\n        isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);\n        renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);\n        renderRange = this.trimHiddenDays(renderRange);\n        activeRange = renderRange;\n        if (!props.showNonCurrentDates) {\n            activeRange = intersectRanges(activeRange, currentInfo.range);\n        }\n        activeRange = this.adjustActiveRange(activeRange);\n        activeRange = intersectRanges(activeRange, validRange); // might return null\n        // it's invalid if the originally requested date is not contained,\n        // or if the range is completely outside of the valid range.\n        isValid = rangesIntersect(currentInfo.range, validRange);\n        // HACK: constrain to render-range so `currentDate` is more useful to view rendering\n        if (!rangeContainsMarker(renderRange, currentDate)) {\n            currentDate = renderRange.start;\n        }\n        return {\n            currentDate,\n            // constraint for where prev/next operations can go and where events can be dragged/resized to.\n            // an object with optional start and end properties.\n            validRange,\n            // range the view is formally responsible for.\n            // for example, a month view might have 1st-31st, excluding padded dates\n            currentRange: currentInfo.range,\n            // name of largest unit being displayed, like \"month\" or \"week\"\n            currentRangeUnit: currentInfo.unit,\n            isRangeAllDay,\n            // dates that display events and accept drag-n-drop\n            // will be `null` if no dates accept events\n            activeRange,\n            // date range with a rendered skeleton\n            // includes not-active days that need some sort of DOM\n            renderRange,\n            // Duration object that denotes the first visible time of any given day\n            slotMinTime: props.slotMinTime,\n            // Duration object that denotes the exclusive visible end time of any given day\n            slotMaxTime: props.slotMaxTime,\n            isValid,\n            // how far the current date will move for a prev/next operation\n            dateIncrement: this.buildDateIncrement(currentInfo.duration),\n            // pass a fallback (might be null) ^\n        };\n    }\n    // Builds an object with optional start/end properties.\n    // Indicates the minimum/maximum dates to display.\n    // not responsible for trimming hidden days.\n    buildValidRange() {\n        let input = this.props.validRangeInput;\n        let simpleInput = typeof input === 'function'\n            ? input.call(this.props.calendarApi, this.props.dateEnv.toDate(this.props.nowManager.getDateMarker()))\n            : input;\n        return this.refineRange(simpleInput) ||\n            { start: null, end: null }; // completely open-ended\n    }\n    // Builds a structure with info about the \"current\" range, the range that is\n    // highlighted as being the current month for example.\n    // See build() for a description of `direction`.\n    // Guaranteed to have `range` and `unit` properties. `duration` is optional.\n    buildCurrentRangeInfo(date, direction) {\n        let { props } = this;\n        let duration = null;\n        let unit = null;\n        let range = null;\n        let dayCount;\n        if (props.duration) {\n            duration = props.duration;\n            unit = props.durationUnit;\n            range = this.buildRangeFromDuration(date, direction, duration, unit);\n        }\n        else if ((dayCount = this.props.dayCount)) {\n            unit = 'day';\n            range = this.buildRangeFromDayCount(date, direction, dayCount);\n        }\n        else if ((range = this.buildCustomVisibleRange(date))) {\n            unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit;\n        }\n        else {\n            duration = this.getFallbackDuration();\n            unit = greatestDurationDenominator(duration).unit;\n            range = this.buildRangeFromDuration(date, direction, duration, unit);\n        }\n        return { duration, unit, range };\n    }\n    getFallbackDuration() {\n        return createDuration({ day: 1 });\n    }\n    // Returns a new activeRange to have time values (un-ambiguate)\n    // slotMinTime or slotMaxTime causes the range to expand.\n    adjustActiveRange(range) {\n        let { dateEnv, usesMinMaxTime, slotMinTime, slotMaxTime } = this.props;\n        let { start, end } = range;\n        if (usesMinMaxTime) {\n            // expand active range if slotMinTime is negative (why not when positive?)\n            if (asRoughDays(slotMinTime) < 0) {\n                start = startOfDay(start); // necessary?\n                start = dateEnv.add(start, slotMinTime);\n            }\n            // expand active range if slotMaxTime is beyond one day (why not when negative?)\n            if (asRoughDays(slotMaxTime) > 1) {\n                end = startOfDay(end); // necessary?\n                end = addDays(end, -1);\n                end = dateEnv.add(end, slotMaxTime);\n            }\n        }\n        return { start, end };\n    }\n    // Builds the \"current\" range when it is specified as an explicit duration.\n    // `unit` is the already-computed greatestDurationDenominator unit of duration.\n    buildRangeFromDuration(date, direction, duration, unit) {\n        let { dateEnv, dateAlignment } = this.props;\n        let start;\n        let end;\n        let res;\n        // compute what the alignment should be\n        if (!dateAlignment) {\n            let { dateIncrement } = this.props;\n            if (dateIncrement) {\n                // use the smaller of the two units\n                if (asRoughMs(dateIncrement) < asRoughMs(duration)) {\n                    dateAlignment = greatestDurationDenominator(dateIncrement).unit;\n                }\n                else {\n                    dateAlignment = unit;\n                }\n            }\n            else {\n                dateAlignment = unit;\n            }\n        }\n        // if the view displays a single day or smaller\n        if (asRoughDays(duration) <= 1) {\n            if (this.isHiddenDay(start)) {\n                start = this.skipHiddenDays(start, direction);\n                start = startOfDay(start);\n            }\n        }\n        function computeRes() {\n            start = dateEnv.startOf(date, dateAlignment);\n            end = dateEnv.add(start, duration);\n            res = { start, end };\n        }\n        computeRes();\n        // if range is completely enveloped by hidden days, go past the hidden days\n        if (!this.trimHiddenDays(res)) {\n            date = this.skipHiddenDays(date, direction);\n            computeRes();\n        }\n        return res;\n    }\n    // Builds the \"current\" range when a dayCount is specified.\n    buildRangeFromDayCount(date, direction, dayCount) {\n        let { dateEnv, dateAlignment } = this.props;\n        let runningCount = 0;\n        let start = date;\n        let end;\n        if (dateAlignment) {\n            start = dateEnv.startOf(start, dateAlignment);\n        }\n        start = startOfDay(start);\n        start = this.skipHiddenDays(start, direction);\n        end = start;\n        do {\n            end = addDays(end, 1);\n            if (!this.isHiddenDay(end)) {\n                runningCount += 1;\n            }\n        } while (runningCount < dayCount);\n        return { start, end };\n    }\n    // Builds a normalized range object for the \"visible\" range,\n    // which is a way to define the currentRange and activeRange at the same time.\n    buildCustomVisibleRange(date) {\n        let { props } = this;\n        let input = props.visibleRangeInput;\n        let simpleInput = typeof input === 'function'\n            ? input.call(props.calendarApi, props.dateEnv.toDate(date))\n            : input;\n        let range = this.refineRange(simpleInput);\n        if (range && (range.start == null || range.end == null)) {\n            return null;\n        }\n        return range;\n    }\n    // Computes the range that will represent the element/cells for *rendering*,\n    // but which may have voided days/times.\n    // not responsible for trimming hidden days.\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        return currentRange;\n    }\n    // Compute the duration value that should be added/substracted to the current date\n    // when a prev/next operation happens.\n    buildDateIncrement(fallback) {\n        let { dateIncrement } = this.props;\n        let customAlignment;\n        if (dateIncrement) {\n            return dateIncrement;\n        }\n        if ((customAlignment = this.props.dateAlignment)) {\n            return createDuration(1, customAlignment);\n        }\n        if (fallback) {\n            return fallback;\n        }\n        return createDuration({ days: 1 });\n    }\n    refineRange(rangeInput) {\n        if (rangeInput) {\n            let range = parseRange(rangeInput, this.props.dateEnv);\n            if (range) {\n                range = computeVisibleDayRange(range);\n            }\n            return range;\n        }\n        return null;\n    }\n    /* Hidden Days\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Initializes internal variables related to calculating hidden days-of-week\n    initHiddenDays() {\n        let hiddenDays = this.props.hiddenDays || []; // array of day-of-week indices that are hidden\n        let isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)\n        let dayCnt = 0;\n        let i;\n        if (this.props.weekends === false) {\n            hiddenDays.push(0, 6); // 0=sunday, 6=saturday\n        }\n        for (i = 0; i < 7; i += 1) {\n            if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {\n                dayCnt += 1;\n            }\n        }\n        if (!dayCnt) {\n            throw new Error('invalid hiddenDays'); // all days were hidden? bad.\n        }\n        this.isHiddenDayHash = isHiddenDayHash;\n    }\n    // Remove days from the beginning and end of the range that are computed as hidden.\n    // If the whole range is trimmed off, returns null\n    trimHiddenDays(range) {\n        let { start, end } = range;\n        if (start) {\n            start = this.skipHiddenDays(start);\n        }\n        if (end) {\n            end = this.skipHiddenDays(end, -1, true);\n        }\n        if (start == null || end == null || start < end) {\n            return { start, end };\n        }\n        return null;\n    }\n    // Is the current day hidden?\n    // `day` is a day-of-week index (0-6), or a Date (used for UTC)\n    isHiddenDay(day) {\n        if (day instanceof Date) {\n            day = day.getUTCDay();\n        }\n        return this.isHiddenDayHash[day];\n    }\n    // Incrementing the current day until it is no longer a hidden day, returning a copy.\n    // DOES NOT CONSIDER validRange!\n    // If the initial value of `date` is not a hidden day, don't do anything.\n    // Pass `isExclusive` as `true` if you are dealing with an end date.\n    // `inc` defaults to `1` (increment one day forward each time)\n    skipHiddenDays(date, inc = 1, isExclusive = false) {\n        while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {\n            date = addDays(date, inc);\n        }\n        return date;\n    }\n}\n\nfunction createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {\n    return {\n        instanceId: guid(),\n        defId,\n        range,\n        forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,\n        forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo,\n    };\n}\n\nfunction parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {\n    for (let i = 0; i < recurringTypes.length; i += 1) {\n        let parsed = recurringTypes[i].parse(refined, dateEnv);\n        if (parsed) {\n            let { allDay } = refined;\n            if (allDay == null) {\n                allDay = defaultAllDay;\n                if (allDay == null) {\n                    allDay = parsed.allDayGuess;\n                    if (allDay == null) {\n                        allDay = false;\n                    }\n                }\n            }\n            return {\n                allDay,\n                duration: parsed.duration,\n                typeData: parsed.typeData,\n                typeId: i,\n            };\n        }\n    }\n    return null;\n}\nfunction expandRecurring(eventStore, framingRange, context) {\n    let { dateEnv, pluginHooks, options } = context;\n    let { defs, instances } = eventStore;\n    // remove existing recurring instances\n    // TODO: bad. always expand events as a second step\n    instances = filterHash(instances, (instance) => !defs[instance.defId].recurringDef);\n    for (let defId in defs) {\n        let def = defs[defId];\n        if (def.recurringDef) {\n            let { duration } = def.recurringDef;\n            if (!duration) {\n                duration = def.allDay ?\n                    options.defaultAllDayEventDuration :\n                    options.defaultTimedEventDuration;\n            }\n            let starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes);\n            for (let start of starts) {\n                let instance = createEventInstance(defId, {\n                    start,\n                    end: dateEnv.add(start, duration),\n                });\n                instances[instance.instanceId] = instance;\n            }\n        }\n    }\n    return { defs, instances };\n}\n/*\nEvent MUST have a recurringDef\n*/\nfunction expandRecurringRanges(eventDef, duration, framingRange, dateEnv, recurringTypes) {\n    let typeDef = recurringTypes[eventDef.recurringDef.typeId];\n    let markers = typeDef.expand(eventDef.recurringDef.typeData, {\n        start: dateEnv.subtract(framingRange.start, duration),\n        end: framingRange.end,\n    }, dateEnv);\n    // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to\n    if (eventDef.allDay) {\n        markers = markers.map(startOfDay);\n    }\n    return markers;\n}\n\nconst EVENT_NON_DATE_REFINERS = {\n    id: String,\n    groupId: String,\n    title: String,\n    url: String,\n    interactive: Boolean,\n};\nconst EVENT_DATE_REFINERS = {\n    start: identity,\n    end: identity,\n    date: identity,\n    allDay: Boolean,\n};\nconst EVENT_REFINERS = Object.assign(Object.assign(Object.assign({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS), { extendedProps: identity });\nfunction parseEvent(raw, eventSource, context, allowOpenRange, refiners = buildEventRefiners(context), defIdMap, instanceIdMap) {\n    let { refined, extra } = refineEventDef(raw, context, refiners);\n    let defaultAllDay = computeIsDefaultAllDay(eventSource, context);\n    let recurringRes = parseRecurring(refined, defaultAllDay, context.dateEnv, context.pluginHooks.recurringTypes);\n    if (recurringRes) {\n        let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', recurringRes.allDay, Boolean(recurringRes.duration), context, defIdMap);\n        def.recurringDef = {\n            typeId: recurringRes.typeId,\n            typeData: recurringRes.typeData,\n            duration: recurringRes.duration,\n        };\n        return { def, instance: null };\n    }\n    let singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange);\n    if (singleRes) {\n        let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', singleRes.allDay, singleRes.hasEnd, context, defIdMap);\n        let instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);\n        if (instanceIdMap && def.publicId && instanceIdMap[def.publicId]) {\n            instance.instanceId = instanceIdMap[def.publicId];\n        }\n        return { def, instance };\n    }\n    return null;\n}\nfunction refineEventDef(raw, context, refiners = buildEventRefiners(context)) {\n    return refineProps(raw, refiners);\n}\nfunction buildEventRefiners(context) {\n    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_REFINERS), context.pluginHooks.eventRefiners);\n}\n/*\nWill NOT populate extendedProps with the leftover properties.\nWill NOT populate date-related props.\n*/\nfunction parseEventDef(refined, extra, sourceId, allDay, hasEnd, context, defIdMap) {\n    let def = {\n        title: refined.title || '',\n        groupId: refined.groupId || '',\n        publicId: refined.id || '',\n        url: refined.url || '',\n        recurringDef: null,\n        defId: ((defIdMap && refined.id) ? defIdMap[refined.id] : '') || guid(),\n        sourceId,\n        allDay,\n        hasEnd,\n        interactive: refined.interactive,\n        ui: createEventUi(refined, context),\n        extendedProps: Object.assign(Object.assign({}, (refined.extendedProps || {})), extra),\n    };\n    for (let memberAdder of context.pluginHooks.eventDefMemberAdders) {\n        Object.assign(def, memberAdder(refined));\n    }\n    // help out EventImpl from having user modify props\n    Object.freeze(def.ui.classNames);\n    Object.freeze(def.extendedProps);\n    return def;\n}\nfunction parseSingle(refined, defaultAllDay, context, allowOpenRange) {\n    let { allDay } = refined;\n    let startMeta;\n    let startMarker = null;\n    let hasEnd = false;\n    let endMeta;\n    let endMarker = null;\n    let startInput = refined.start != null ? refined.start : refined.date;\n    startMeta = context.dateEnv.createMarkerMeta(startInput);\n    if (startMeta) {\n        startMarker = startMeta.marker;\n    }\n    else if (!allowOpenRange) {\n        return null;\n    }\n    if (refined.end != null) {\n        endMeta = context.dateEnv.createMarkerMeta(refined.end);\n    }\n    if (allDay == null) {\n        if (defaultAllDay != null) {\n            allDay = defaultAllDay;\n        }\n        else {\n            // fall back to the date props LAST\n            allDay = (!startMeta || startMeta.isTimeUnspecified) &&\n                (!endMeta || endMeta.isTimeUnspecified);\n        }\n    }\n    if (allDay && startMarker) {\n        startMarker = startOfDay(startMarker);\n    }\n    if (endMeta) {\n        endMarker = endMeta.marker;\n        if (allDay) {\n            endMarker = startOfDay(endMarker);\n        }\n        if (startMarker && endMarker <= startMarker) {\n            endMarker = null;\n        }\n    }\n    if (endMarker) {\n        hasEnd = true;\n    }\n    else if (!allowOpenRange) {\n        hasEnd = context.options.forceEventDuration || false;\n        endMarker = context.dateEnv.add(startMarker, allDay ?\n            context.options.defaultAllDayEventDuration :\n            context.options.defaultTimedEventDuration);\n    }\n    return {\n        allDay,\n        hasEnd,\n        range: { start: startMarker, end: endMarker },\n        forcedStartTzo: startMeta ? startMeta.forcedTzo : null,\n        forcedEndTzo: endMeta ? endMeta.forcedTzo : null,\n    };\n}\nfunction computeIsDefaultAllDay(eventSource, context) {\n    let res = null;\n    if (eventSource) {\n        res = eventSource.defaultAllDay;\n    }\n    if (res == null) {\n        res = context.options.defaultAllDay;\n    }\n    return res;\n}\n\nfunction parseEvents(rawEvents, eventSource, context, allowOpenRange, defIdMap, instanceIdMap) {\n    let eventStore = createEmptyEventStore();\n    let eventRefiners = buildEventRefiners(context);\n    for (let rawEvent of rawEvents) {\n        let tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners, defIdMap, instanceIdMap);\n        if (tuple) {\n            eventTupleToStore(tuple, eventStore);\n        }\n    }\n    return eventStore;\n}\nfunction eventTupleToStore(tuple, eventStore = createEmptyEventStore()) {\n    eventStore.defs[tuple.def.defId] = tuple.def;\n    if (tuple.instance) {\n        eventStore.instances[tuple.instance.instanceId] = tuple.instance;\n    }\n    return eventStore;\n}\n// retrieves events that have the same groupId as the instance specified by `instanceId`\n// or they are the same as the instance.\n// why might instanceId not be in the store? an event from another calendar?\nfunction getRelevantEvents(eventStore, instanceId) {\n    let instance = eventStore.instances[instanceId];\n    if (instance) {\n        let def = eventStore.defs[instance.defId];\n        // get events/instances with same group\n        let newStore = filterEventStoreDefs(eventStore, (lookDef) => isEventDefsGrouped(def, lookDef));\n        // add the original\n        // TODO: wish we could use eventTupleToStore or something like it\n        newStore.defs[def.defId] = def;\n        newStore.instances[instance.instanceId] = instance;\n        return newStore;\n    }\n    return createEmptyEventStore();\n}\nfunction isEventDefsGrouped(def0, def1) {\n    return Boolean(def0.groupId && def0.groupId === def1.groupId);\n}\nfunction createEmptyEventStore() {\n    return { defs: {}, instances: {} };\n}\nfunction mergeEventStores(store0, store1) {\n    return {\n        defs: Object.assign(Object.assign({}, store0.defs), store1.defs),\n        instances: Object.assign(Object.assign({}, store0.instances), store1.instances),\n    };\n}\nfunction filterEventStoreDefs(eventStore, filterFunc) {\n    let defs = filterHash(eventStore.defs, filterFunc);\n    let instances = filterHash(eventStore.instances, (instance) => (defs[instance.defId] // still exists?\n    ));\n    return { defs, instances };\n}\nfunction excludeSubEventStore(master, sub) {\n    let { defs, instances } = master;\n    let filteredDefs = {};\n    let filteredInstances = {};\n    for (let defId in defs) {\n        if (!sub.defs[defId]) { // not explicitly excluded\n            filteredDefs[defId] = defs[defId];\n        }\n    }\n    for (let instanceId in instances) {\n        if (!sub.instances[instanceId] && // not explicitly excluded\n            filteredDefs[instances[instanceId].defId] // def wasn't filtered away\n        ) {\n            filteredInstances[instanceId] = instances[instanceId];\n        }\n    }\n    return {\n        defs: filteredDefs,\n        instances: filteredInstances,\n    };\n}\n\nfunction normalizeConstraint(input, context) {\n    if (Array.isArray(input)) {\n        return parseEvents(input, null, context, true); // allowOpenRange=true\n    }\n    if (typeof input === 'object' && input) { // non-null object\n        return parseEvents([input], null, context, true); // allowOpenRange=true\n    }\n    if (input != null) {\n        return String(input);\n    }\n    return null;\n}\n\nfunction parseClassNames(raw) {\n    if (Array.isArray(raw)) {\n        return raw;\n    }\n    if (typeof raw === 'string') {\n        return raw.split(/\\s+/);\n    }\n    return [];\n}\n\n// TODO: better called \"EventSettings\" or \"EventConfig\"\n// TODO: move this file into structs\n// TODO: separate constraint/overlap/allow, because selection uses only that, not other props\nconst EVENT_UI_REFINERS = {\n    display: String,\n    editable: Boolean,\n    startEditable: Boolean,\n    durationEditable: Boolean,\n    constraint: identity,\n    overlap: identity,\n    allow: identity,\n    className: parseClassNames,\n    classNames: parseClassNames,\n    color: String,\n    backgroundColor: String,\n    borderColor: String,\n    textColor: String,\n};\nconst EMPTY_EVENT_UI = {\n    display: null,\n    startEditable: null,\n    durationEditable: null,\n    constraints: [],\n    overlap: null,\n    allows: [],\n    backgroundColor: '',\n    borderColor: '',\n    textColor: '',\n    classNames: [],\n};\nfunction createEventUi(refined, context) {\n    let constraint = normalizeConstraint(refined.constraint, context);\n    return {\n        display: refined.display || null,\n        startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,\n        durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,\n        constraints: constraint != null ? [constraint] : [],\n        overlap: refined.overlap != null ? refined.overlap : null,\n        allows: refined.allow != null ? [refined.allow] : [],\n        backgroundColor: refined.backgroundColor || refined.color || '',\n        borderColor: refined.borderColor || refined.color || '',\n        textColor: refined.textColor || '',\n        classNames: (refined.className || []).concat(refined.classNames || []), // join singular and plural\n    };\n}\n// TODO: prevent against problems with <2 args!\nfunction combineEventUis(uis) {\n    return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);\n}\nfunction combineTwoEventUis(item0, item1) {\n    return {\n        display: item1.display != null ? item1.display : item0.display,\n        startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,\n        durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,\n        constraints: item0.constraints.concat(item1.constraints),\n        overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,\n        allows: item0.allows.concat(item1.allows),\n        backgroundColor: item1.backgroundColor || item0.backgroundColor,\n        borderColor: item1.borderColor || item0.borderColor,\n        textColor: item1.textColor || item0.textColor,\n        classNames: item0.classNames.concat(item1.classNames),\n    };\n}\n\nconst EVENT_SOURCE_REFINERS = {\n    id: String,\n    defaultAllDay: Boolean,\n    url: String,\n    format: String,\n    events: identity,\n    eventDataTransform: identity,\n    // for any network-related sources\n    success: identity,\n    failure: identity,\n};\nfunction parseEventSource(raw, context, refiners = buildEventSourceRefiners(context)) {\n    let rawObj;\n    if (typeof raw === 'string') {\n        rawObj = { url: raw };\n    }\n    else if (typeof raw === 'function' || Array.isArray(raw)) {\n        rawObj = { events: raw };\n    }\n    else if (typeof raw === 'object' && raw) { // not null\n        rawObj = raw;\n    }\n    if (rawObj) {\n        let { refined, extra } = refineProps(rawObj, refiners);\n        let metaRes = buildEventSourceMeta(refined, context);\n        if (metaRes) {\n            return {\n                _raw: raw,\n                isFetching: false,\n                latestFetchId: '',\n                fetchRange: null,\n                defaultAllDay: refined.defaultAllDay,\n                eventDataTransform: refined.eventDataTransform,\n                success: refined.success,\n                failure: refined.failure,\n                publicId: refined.id || '',\n                sourceId: guid(),\n                sourceDefId: metaRes.sourceDefId,\n                meta: metaRes.meta,\n                ui: createEventUi(refined, context),\n                extendedProps: extra,\n            };\n        }\n    }\n    return null;\n}\nfunction buildEventSourceRefiners(context) {\n    return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS), context.pluginHooks.eventSourceRefiners);\n}\nfunction buildEventSourceMeta(raw, context) {\n    let defs = context.pluginHooks.eventSourceDefs;\n    for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n        let def = defs[i];\n        let meta = def.parseMeta(raw);\n        if (meta) {\n            return { sourceDefId: i, meta };\n        }\n    }\n    return null;\n}\n\nfunction reduceEventStore(eventStore, action, eventSources, dateProfile, context) {\n    switch (action.type) {\n        case 'RECEIVE_EVENTS': // raw\n            return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, context);\n        case 'RESET_RAW_EVENTS':\n            return resetRawEvents(eventStore, eventSources[action.sourceId], action.rawEvents, dateProfile.activeRange, context);\n        case 'ADD_EVENTS': // already parsed, but not expanded\n            return addEvent(eventStore, action.eventStore, // new ones\n            dateProfile ? dateProfile.activeRange : null, context);\n        case 'RESET_EVENTS':\n            return action.eventStore;\n        case 'MERGE_EVENTS': // already parsed and expanded\n            return mergeEventStores(eventStore, action.eventStore);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            if (dateProfile) {\n                return expandRecurring(eventStore, dateProfile.activeRange, context);\n            }\n            return eventStore;\n        case 'REMOVE_EVENTS':\n            return excludeSubEventStore(eventStore, action.eventStore);\n        case 'REMOVE_EVENT_SOURCE':\n            return excludeEventsBySourceId(eventStore, action.sourceId);\n        case 'REMOVE_ALL_EVENT_SOURCES':\n            return filterEventStoreDefs(eventStore, (eventDef) => (!eventDef.sourceId // only keep events with no source id\n            ));\n        case 'REMOVE_ALL_EVENTS':\n            return createEmptyEventStore();\n        default:\n            return eventStore;\n    }\n}\nfunction receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, context) {\n    if (eventSource && // not already removed\n        fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources\n    ) {\n        let subset = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context);\n        if (fetchRange) {\n            subset = expandRecurring(subset, fetchRange, context);\n        }\n        return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);\n    }\n    return eventStore;\n}\nfunction resetRawEvents(existingEventStore, eventSource, rawEvents, activeRange, context) {\n    const { defIdMap, instanceIdMap } = buildPublicIdMaps(existingEventStore);\n    let newEventStore = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context, false, defIdMap, instanceIdMap);\n    return expandRecurring(newEventStore, activeRange, context);\n}\nfunction transformRawEvents(rawEvents, eventSource, context) {\n    let calEachTransform = context.options.eventDataTransform;\n    let sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;\n    if (sourceEachTransform) {\n        rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);\n    }\n    if (calEachTransform) {\n        rawEvents = transformEachRawEvent(rawEvents, calEachTransform);\n    }\n    return rawEvents;\n}\nfunction transformEachRawEvent(rawEvents, func) {\n    let refinedEvents;\n    if (!func) {\n        refinedEvents = rawEvents;\n    }\n    else {\n        refinedEvents = [];\n        for (let rawEvent of rawEvents) {\n            let refinedEvent = func(rawEvent);\n            if (refinedEvent) {\n                refinedEvents.push(refinedEvent);\n            }\n            else if (refinedEvent == null) {\n                refinedEvents.push(rawEvent);\n            } // if a different falsy value, do nothing\n        }\n    }\n    return refinedEvents;\n}\nfunction addEvent(eventStore, subset, expandRange, context) {\n    if (expandRange) {\n        subset = expandRecurring(subset, expandRange, context);\n    }\n    return mergeEventStores(eventStore, subset);\n}\nfunction rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {\n    let { defs } = eventStore;\n    let instances = mapHash(eventStore.instances, (instance) => {\n        let def = defs[instance.defId];\n        if (def.allDay) {\n            return instance; // isn't dependent on timezone\n        }\n        return Object.assign(Object.assign({}, instance), { range: {\n                start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),\n                end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo)),\n            }, forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo, forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo });\n    });\n    return { defs, instances };\n}\nfunction excludeEventsBySourceId(eventStore, sourceId) {\n    return filterEventStoreDefs(eventStore, (eventDef) => eventDef.sourceId !== sourceId);\n}\n// QUESTION: why not just return instances? do a general object-property-exclusion util\nfunction excludeInstances(eventStore, removals) {\n    return {\n        defs: eventStore.defs,\n        instances: filterHash(eventStore.instances, (instance) => !removals[instance.instanceId]),\n    };\n}\nfunction buildPublicIdMaps(eventStore) {\n    const { defs, instances } = eventStore;\n    const defIdMap = {};\n    const instanceIdMap = {};\n    for (let defId in defs) {\n        const def = defs[defId];\n        const { publicId } = def;\n        if (publicId) {\n            defIdMap[publicId] = defId;\n        }\n    }\n    for (let instanceId in instances) {\n        const instance = instances[instanceId];\n        const def = defs[instance.defId];\n        const { publicId } = def;\n        if (publicId) {\n            instanceIdMap[publicId] = instanceId;\n        }\n    }\n    return { defIdMap, instanceIdMap };\n}\n\nclass Emitter {\n    constructor() {\n        this.handlers = {};\n        this.thisContext = null;\n    }\n    setThisContext(thisContext) {\n        this.thisContext = thisContext;\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n    on(type, handler) {\n        addToHash(this.handlers, type, handler);\n    }\n    off(type, handler) {\n        removeFromHash(this.handlers, type, handler);\n    }\n    trigger(type, ...args) {\n        let attachedHandlers = this.handlers[type] || [];\n        let optionHandler = this.options && this.options[type];\n        let handlers = [].concat(optionHandler || [], attachedHandlers);\n        for (let handler of handlers) {\n            handler.apply(this.thisContext, args);\n        }\n    }\n    hasHandlers(type) {\n        return Boolean((this.handlers[type] && this.handlers[type].length) ||\n            (this.options && this.options[type]));\n    }\n}\nfunction addToHash(hash, type, handler) {\n    (hash[type] || (hash[type] = []))\n        .push(handler);\n}\nfunction removeFromHash(hash, type, handler) {\n    if (handler) {\n        if (hash[type]) {\n            hash[type] = hash[type].filter((func) => func !== handler);\n        }\n    }\n    else {\n        delete hash[type]; // remove all handler funcs for this type\n    }\n}\n\nconst DEF_DEFAULTS = {\n    startTime: '09:00',\n    endTime: '17:00',\n    daysOfWeek: [1, 2, 3, 4, 5],\n    display: 'inverse-background',\n    classNames: 'fc-non-business',\n    groupId: '_businessHours', // so multiple defs get grouped\n};\n/*\nTODO: pass around as EventDefHash!!!\n*/\nfunction parseBusinessHours(input, context) {\n    return parseEvents(refineInputs(input), null, context);\n}\nfunction refineInputs(input) {\n    let rawDefs;\n    if (input === true) {\n        rawDefs = [{}]; // will get DEF_DEFAULTS verbatim\n    }\n    else if (Array.isArray(input)) {\n        // if specifying an array, every sub-definition NEEDS a day-of-week\n        rawDefs = input.filter((rawDef) => rawDef.daysOfWeek);\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        rawDefs = [input];\n    }\n    else { // is probably false\n        rawDefs = [];\n    }\n    rawDefs = rawDefs.map((rawDef) => (Object.assign(Object.assign({}, DEF_DEFAULTS), rawDef)));\n    return rawDefs;\n}\n\nfunction triggerDateSelect(selection, pev, context) {\n    context.emitter.trigger('select', Object.assign(Object.assign({}, buildDateSpanApiWithContext(selection, context)), { jsEvent: pev ? pev.origEvent : null, view: context.viewApi || context.calendarApi.view }));\n}\nfunction triggerDateUnselect(pev, context) {\n    context.emitter.trigger('unselect', {\n        jsEvent: pev ? pev.origEvent : null,\n        view: context.viewApi || context.calendarApi.view,\n    });\n}\nfunction buildDateSpanApiWithContext(dateSpan, context) {\n    let props = {};\n    for (let transform of context.pluginHooks.dateSpanTransforms) {\n        Object.assign(props, transform(dateSpan, context));\n    }\n    Object.assign(props, buildDateSpanApi(dateSpan, context.dateEnv));\n    return props;\n}\n// Given an event's allDay status and start date, return what its fallback end date should be.\n// TODO: rename to computeDefaultEventEnd\nfunction getDefaultEventEnd(allDay, marker, context) {\n    let { dateEnv, options } = context;\n    let end = marker;\n    if (allDay) {\n        end = startOfDay(end);\n        end = dateEnv.add(end, options.defaultAllDayEventDuration);\n    }\n    else {\n        end = dateEnv.add(end, options.defaultTimedEventDuration);\n    }\n    return end;\n}\n\n// applies the mutation to ALL defs/instances within the event store\nfunction applyMutationToEventStore(eventStore, eventConfigBase, mutation, context) {\n    let eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);\n    let dest = createEmptyEventStore();\n    for (let defId in eventStore.defs) {\n        let def = eventStore.defs[defId];\n        dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context);\n    }\n    for (let instanceId in eventStore.instances) {\n        let instance = eventStore.instances[instanceId];\n        let def = dest.defs[instance.defId]; // important to grab the newly modified def\n        dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context);\n    }\n    return dest;\n}\nfunction applyMutationToEventDef(eventDef, eventConfig, mutation, context) {\n    let standardProps = mutation.standardProps || {};\n    // if hasEnd has not been specified, guess a good value based on deltas.\n    // if duration will change, there's no way the default duration will persist,\n    // and thus, we need to mark the event as having a real end\n    if (standardProps.hasEnd == null &&\n        eventConfig.durationEditable &&\n        (mutation.startDelta || mutation.endDelta)) {\n        standardProps.hasEnd = true; // TODO: is this mutation okay?\n    }\n    let copy = Object.assign(Object.assign(Object.assign({}, eventDef), standardProps), { ui: Object.assign(Object.assign({}, eventDef.ui), standardProps.ui) });\n    if (mutation.extendedProps) {\n        copy.extendedProps = Object.assign(Object.assign({}, copy.extendedProps), mutation.extendedProps);\n    }\n    for (let applier of context.pluginHooks.eventDefMutationAppliers) {\n        applier(copy, mutation, context);\n    }\n    if (!copy.hasEnd && context.options.forceEventDuration) {\n        copy.hasEnd = true;\n    }\n    return copy;\n}\nfunction applyMutationToEventInstance(eventInstance, eventDef, // must first be modified by applyMutationToEventDef\neventConfig, mutation, context) {\n    let { dateEnv } = context;\n    let forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;\n    let clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;\n    let copy = Object.assign({}, eventInstance);\n    if (forceAllDay) {\n        copy.range = computeAlignedDayRange(copy.range);\n    }\n    if (mutation.datesDelta && eventConfig.startEditable) {\n        copy.range = {\n            start: dateEnv.add(copy.range.start, mutation.datesDelta),\n            end: dateEnv.add(copy.range.end, mutation.datesDelta),\n        };\n    }\n    if (mutation.startDelta && eventConfig.durationEditable) {\n        copy.range = {\n            start: dateEnv.add(copy.range.start, mutation.startDelta),\n            end: copy.range.end,\n        };\n    }\n    if (mutation.endDelta && eventConfig.durationEditable) {\n        copy.range = {\n            start: copy.range.start,\n            end: dateEnv.add(copy.range.end, mutation.endDelta),\n        };\n    }\n    if (clearEnd) {\n        copy.range = {\n            start: copy.range.start,\n            end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context),\n        };\n    }\n    // in case event was all-day but the supplied deltas were not\n    // better util for this?\n    if (eventDef.allDay) {\n        copy.range = {\n            start: startOfDay(copy.range.start),\n            end: startOfDay(copy.range.end),\n        };\n    }\n    // handle invalid durations\n    if (copy.range.end < copy.range.start) {\n        copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context);\n    }\n    return copy;\n}\n\nclass EventSourceImpl {\n    constructor(context, internalEventSource) {\n        this.context = context;\n        this.internalEventSource = internalEventSource;\n    }\n    remove() {\n        this.context.dispatch({\n            type: 'REMOVE_EVENT_SOURCE',\n            sourceId: this.internalEventSource.sourceId,\n        });\n    }\n    refetch() {\n        this.context.dispatch({\n            type: 'FETCH_EVENT_SOURCES',\n            sourceIds: [this.internalEventSource.sourceId],\n            isRefetch: true,\n        });\n    }\n    get id() {\n        return this.internalEventSource.publicId;\n    }\n    get url() {\n        return this.internalEventSource.meta.url;\n    }\n    get format() {\n        return this.internalEventSource.meta.format; // TODO: bad. not guaranteed\n    }\n}\n\nclass EventImpl {\n    // instance will be null if expressing a recurring event that has no current instances,\n    // OR if trying to validate an incoming external event that has no dates assigned\n    constructor(context, def, instance) {\n        this._context = context;\n        this._def = def;\n        this._instance = instance || null;\n    }\n    /*\n    TODO: make event struct more responsible for this\n    */\n    setProp(name, val) {\n        if (name in EVENT_DATE_REFINERS) {\n            console.warn('Could not set date-related prop \\'name\\'. Use one of the date-related methods instead.');\n            // TODO: make proper aliasing system?\n        }\n        else if (name === 'id') {\n            val = EVENT_NON_DATE_REFINERS[name](val);\n            this.mutate({\n                standardProps: { publicId: val }, // hardcoded internal name\n            });\n        }\n        else if (name in EVENT_NON_DATE_REFINERS) {\n            val = EVENT_NON_DATE_REFINERS[name](val);\n            this.mutate({\n                standardProps: { [name]: val },\n            });\n        }\n        else if (name in EVENT_UI_REFINERS) {\n            let ui = EVENT_UI_REFINERS[name](val);\n            if (name === 'color') {\n                ui = { backgroundColor: val, borderColor: val };\n            }\n            else if (name === 'editable') {\n                ui = { startEditable: val, durationEditable: val };\n            }\n            else {\n                ui = { [name]: val };\n            }\n            this.mutate({\n                standardProps: { ui },\n            });\n        }\n        else {\n            console.warn(`Could not set prop '${name}'. Use setExtendedProp instead.`);\n        }\n    }\n    setExtendedProp(name, val) {\n        this.mutate({\n            extendedProps: { [name]: val },\n        });\n    }\n    setStart(startInput, options = {}) {\n        let { dateEnv } = this._context;\n        let start = dateEnv.createMarker(startInput);\n        if (start && this._instance) { // TODO: warning if parsed bad\n            let instanceRange = this._instance.range;\n            let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?\n            if (options.maintainDuration) {\n                this.mutate({ datesDelta: startDelta });\n            }\n            else {\n                this.mutate({ startDelta });\n            }\n        }\n    }\n    setEnd(endInput, options = {}) {\n        let { dateEnv } = this._context;\n        let end;\n        if (endInput != null) {\n            end = dateEnv.createMarker(endInput);\n            if (!end) {\n                return; // TODO: warning if parsed bad\n            }\n        }\n        if (this._instance) {\n            if (end) {\n                let endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);\n                this.mutate({ endDelta });\n            }\n            else {\n                this.mutate({ standardProps: { hasEnd: false } });\n            }\n        }\n    }\n    setDates(startInput, endInput, options = {}) {\n        let { dateEnv } = this._context;\n        let standardProps = { allDay: options.allDay };\n        let start = dateEnv.createMarker(startInput);\n        let end;\n        if (!start) {\n            return; // TODO: warning if parsed bad\n        }\n        if (endInput != null) {\n            end = dateEnv.createMarker(endInput);\n            if (!end) { // TODO: warning if parsed bad\n                return;\n            }\n        }\n        if (this._instance) {\n            let instanceRange = this._instance.range;\n            // when computing the diff for an event being converted to all-day,\n            // compute diff off of the all-day values the way event-mutation does.\n            if (options.allDay === true) {\n                instanceRange = computeAlignedDayRange(instanceRange);\n            }\n            let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);\n            if (end) {\n                let endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);\n                if (durationsEqual(startDelta, endDelta)) {\n                    this.mutate({ datesDelta: startDelta, standardProps });\n                }\n                else {\n                    this.mutate({ startDelta, endDelta, standardProps });\n                }\n            }\n            else { // means \"clear the end\"\n                standardProps.hasEnd = false;\n                this.mutate({ datesDelta: startDelta, standardProps });\n            }\n        }\n    }\n    moveStart(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ startDelta: delta });\n        }\n    }\n    moveEnd(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ endDelta: delta });\n        }\n    }\n    moveDates(deltaInput) {\n        let delta = createDuration(deltaInput);\n        if (delta) { // TODO: warning if parsed bad\n            this.mutate({ datesDelta: delta });\n        }\n    }\n    setAllDay(allDay, options = {}) {\n        let standardProps = { allDay };\n        let { maintainDuration } = options;\n        if (maintainDuration == null) {\n            maintainDuration = this._context.options.allDayMaintainDuration;\n        }\n        if (this._def.allDay !== allDay) {\n            standardProps.hasEnd = maintainDuration;\n        }\n        this.mutate({ standardProps });\n    }\n    formatRange(formatInput) {\n        let { dateEnv } = this._context;\n        let instance = this._instance;\n        let formatter = createFormatter(formatInput);\n        if (this._def.hasEnd) {\n            return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {\n                forcedStartTzo: instance.forcedStartTzo,\n                forcedEndTzo: instance.forcedEndTzo,\n            });\n        }\n        return dateEnv.format(instance.range.start, formatter, {\n            forcedTzo: instance.forcedStartTzo,\n        });\n    }\n    mutate(mutation) {\n        let instance = this._instance;\n        if (instance) {\n            let def = this._def;\n            let context = this._context;\n            let { eventStore } = context.getCurrentData();\n            let relevantEvents = getRelevantEvents(eventStore, instance.instanceId);\n            let eventConfigBase = {\n                '': {\n                    display: '',\n                    startEditable: true,\n                    durationEditable: true,\n                    constraints: [],\n                    overlap: null,\n                    allows: [],\n                    backgroundColor: '',\n                    borderColor: '',\n                    textColor: '',\n                    classNames: [],\n                },\n            };\n            relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context);\n            let oldEvent = new EventImpl(context, def, instance); // snapshot\n            this._def = relevantEvents.defs[def.defId];\n            this._instance = relevantEvents.instances[instance.instanceId];\n            context.dispatch({\n                type: 'MERGE_EVENTS',\n                eventStore: relevantEvents,\n            });\n            context.emitter.trigger('eventChange', {\n                oldEvent,\n                event: this,\n                relatedEvents: buildEventApis(relevantEvents, context, instance),\n                revert() {\n                    context.dispatch({\n                        type: 'RESET_EVENTS',\n                        eventStore, // the ORIGINAL store\n                    });\n                },\n            });\n        }\n    }\n    remove() {\n        let context = this._context;\n        let asStore = eventApiToStore(this);\n        context.dispatch({\n            type: 'REMOVE_EVENTS',\n            eventStore: asStore,\n        });\n        context.emitter.trigger('eventRemove', {\n            event: this,\n            relatedEvents: [],\n            revert() {\n                context.dispatch({\n                    type: 'MERGE_EVENTS',\n                    eventStore: asStore,\n                });\n            },\n        });\n    }\n    get source() {\n        let { sourceId } = this._def;\n        if (sourceId) {\n            return new EventSourceImpl(this._context, this._context.getCurrentData().eventSources[sourceId]);\n        }\n        return null;\n    }\n    get start() {\n        return this._instance ?\n            this._context.dateEnv.toDate(this._instance.range.start) :\n            null;\n    }\n    get end() {\n        return (this._instance && this._def.hasEnd) ?\n            this._context.dateEnv.toDate(this._instance.range.end) :\n            null;\n    }\n    get startStr() {\n        let instance = this._instance;\n        if (instance) {\n            return this._context.dateEnv.formatIso(instance.range.start, {\n                omitTime: this._def.allDay,\n                forcedTzo: instance.forcedStartTzo,\n            });\n        }\n        return '';\n    }\n    get endStr() {\n        let instance = this._instance;\n        if (instance && this._def.hasEnd) {\n            return this._context.dateEnv.formatIso(instance.range.end, {\n                omitTime: this._def.allDay,\n                forcedTzo: instance.forcedEndTzo,\n            });\n        }\n        return '';\n    }\n    // computable props that all access the def\n    // TODO: find a TypeScript-compatible way to do this at scale\n    get id() { return this._def.publicId; }\n    get groupId() { return this._def.groupId; }\n    get allDay() { return this._def.allDay; }\n    get title() { return this._def.title; }\n    get url() { return this._def.url; }\n    get display() { return this._def.ui.display || 'auto'; } // bad. just normalize the type earlier\n    get startEditable() { return this._def.ui.startEditable; }\n    get durationEditable() { return this._def.ui.durationEditable; }\n    get constraint() { return this._def.ui.constraints[0] || null; }\n    get overlap() { return this._def.ui.overlap; }\n    get allow() { return this._def.ui.allows[0] || null; }\n    get backgroundColor() { return this._def.ui.backgroundColor; }\n    get borderColor() { return this._def.ui.borderColor; }\n    get textColor() { return this._def.ui.textColor; }\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n    get classNames() { return this._def.ui.classNames; }\n    get extendedProps() { return this._def.extendedProps; }\n    toPlainObject(settings = {}) {\n        let def = this._def;\n        let { ui } = def;\n        let { startStr, endStr } = this;\n        let res = {\n            allDay: def.allDay,\n        };\n        if (def.title) {\n            res.title = def.title;\n        }\n        if (startStr) {\n            res.start = startStr;\n        }\n        if (endStr) {\n            res.end = endStr;\n        }\n        if (def.publicId) {\n            res.id = def.publicId;\n        }\n        if (def.groupId) {\n            res.groupId = def.groupId;\n        }\n        if (def.url) {\n            res.url = def.url;\n        }\n        if (ui.display && ui.display !== 'auto') {\n            res.display = ui.display;\n        }\n        // TODO: what about recurring-event properties???\n        // TODO: include startEditable/durationEditable/constraint/overlap/allow\n        if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n            res.color = ui.backgroundColor;\n        }\n        else {\n            if (ui.backgroundColor) {\n                res.backgroundColor = ui.backgroundColor;\n            }\n            if (ui.borderColor) {\n                res.borderColor = ui.borderColor;\n            }\n        }\n        if (ui.textColor) {\n            res.textColor = ui.textColor;\n        }\n        if (ui.classNames.length) {\n            res.classNames = ui.classNames;\n        }\n        if (Object.keys(def.extendedProps).length) {\n            if (settings.collapseExtendedProps) {\n                Object.assign(res, def.extendedProps);\n            }\n            else {\n                res.extendedProps = def.extendedProps;\n            }\n        }\n        return res;\n    }\n    toJSON() {\n        return this.toPlainObject();\n    }\n}\nfunction eventApiToStore(eventApi) {\n    let def = eventApi._def;\n    let instance = eventApi._instance;\n    return {\n        defs: { [def.defId]: def },\n        instances: instance\n            ? { [instance.instanceId]: instance }\n            : {},\n    };\n}\nfunction buildEventApis(eventStore, context, excludeInstance) {\n    let { defs, instances } = eventStore;\n    let eventApis = [];\n    let excludeInstanceId = excludeInstance ? excludeInstance.instanceId : '';\n    for (let id in instances) {\n        let instance = instances[id];\n        let def = defs[instance.defId];\n        if (instance.instanceId !== excludeInstanceId) {\n            eventApis.push(new EventImpl(context, def, instance));\n        }\n    }\n    return eventApis;\n}\n\n/*\nSpecifying nextDayThreshold signals that all-day ranges should be sliced.\n*/\nfunction sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {\n    let inverseBgByGroupId = {};\n    let inverseBgByDefId = {};\n    let defByGroupId = {};\n    let bgRanges = [];\n    let fgRanges = [];\n    let eventUis = compileEventUis(eventStore.defs, eventUiBases);\n    for (let defId in eventStore.defs) {\n        let def = eventStore.defs[defId];\n        let ui = eventUis[def.defId];\n        if (ui.display === 'inverse-background') {\n            if (def.groupId) {\n                inverseBgByGroupId[def.groupId] = [];\n                if (!defByGroupId[def.groupId]) {\n                    defByGroupId[def.groupId] = def;\n                }\n            }\n            else {\n                inverseBgByDefId[defId] = [];\n            }\n        }\n    }\n    for (let instanceId in eventStore.instances) {\n        let instance = eventStore.instances[instanceId];\n        let def = eventStore.defs[instance.defId];\n        let ui = eventUis[def.defId];\n        let origRange = instance.range;\n        let normalRange = (!def.allDay && nextDayThreshold) ?\n            computeVisibleDayRange(origRange, nextDayThreshold) :\n            origRange;\n        let slicedRange = intersectRanges(normalRange, framingRange);\n        if (slicedRange) {\n            if (ui.display === 'inverse-background') {\n                if (def.groupId) {\n                    inverseBgByGroupId[def.groupId].push(slicedRange);\n                }\n                else {\n                    inverseBgByDefId[instance.defId].push(slicedRange);\n                }\n            }\n            else if (ui.display !== 'none') {\n                (ui.display === 'background' ? bgRanges : fgRanges).push({\n                    def,\n                    ui,\n                    instance,\n                    range: slicedRange,\n                    isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),\n                    isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf(),\n                });\n            }\n        }\n    }\n    for (let groupId in inverseBgByGroupId) { // BY GROUP\n        let ranges = inverseBgByGroupId[groupId];\n        let invertedRanges = invertRanges(ranges, framingRange);\n        for (let invertedRange of invertedRanges) {\n            let def = defByGroupId[groupId];\n            let ui = eventUis[def.defId];\n            bgRanges.push({\n                def,\n                ui,\n                instance: null,\n                range: invertedRange,\n                isStart: false,\n                isEnd: false,\n            });\n        }\n    }\n    for (let defId in inverseBgByDefId) {\n        let ranges = inverseBgByDefId[defId];\n        let invertedRanges = invertRanges(ranges, framingRange);\n        for (let invertedRange of invertedRanges) {\n            bgRanges.push({\n                def: eventStore.defs[defId],\n                ui: eventUis[defId],\n                instance: null,\n                range: invertedRange,\n                isStart: false,\n                isEnd: false,\n            });\n        }\n    }\n    return { bg: bgRanges, fg: fgRanges };\n}\nfunction hasBgRendering(def) {\n    return def.ui.display === 'background' || def.ui.display === 'inverse-background';\n}\nfunction setElSeg(el, seg) {\n    el.fcSeg = seg;\n}\nfunction getElSeg(el) {\n    return el.fcSeg ||\n        el.parentNode.fcSeg || // for the harness\n        null;\n}\n// event ui computation\nfunction compileEventUis(eventDefs, eventUiBases) {\n    return mapHash(eventDefs, (eventDef) => compileEventUi(eventDef, eventUiBases));\n}\nfunction compileEventUi(eventDef, eventUiBases) {\n    let uis = [];\n    if (eventUiBases['']) {\n        uis.push(eventUiBases['']);\n    }\n    if (eventUiBases[eventDef.defId]) {\n        uis.push(eventUiBases[eventDef.defId]);\n    }\n    uis.push(eventDef.ui);\n    return combineEventUis(uis);\n}\nfunction sortEventSegs(segs, eventOrderSpecs) {\n    let objs = segs.map(buildSegCompareObj);\n    objs.sort((obj0, obj1) => compareByFieldSpecs(obj0, obj1, eventOrderSpecs));\n    return objs.map((c) => c._seg);\n}\n// returns a object with all primitive props that can be compared\nfunction buildSegCompareObj(seg) {\n    let { eventRange } = seg;\n    let eventDef = eventRange.def;\n    let range = eventRange.instance ? eventRange.instance.range : eventRange.range;\n    let start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events\n    let end = range.end ? range.end.valueOf() : 0; // \"\n    return Object.assign(Object.assign(Object.assign({}, eventDef.extendedProps), eventDef), { id: eventDef.publicId, start,\n        end, duration: end - start, allDay: Number(eventDef.allDay), _seg: seg });\n}\nfunction computeSegDraggable(seg, context) {\n    let { pluginHooks } = context;\n    let transformers = pluginHooks.isDraggableTransformers;\n    let { def, ui } = seg.eventRange;\n    let val = ui.startEditable;\n    for (let transformer of transformers) {\n        val = transformer(val, def, ui, context);\n    }\n    return val;\n}\nfunction computeSegStartResizable(seg, context) {\n    return seg.isStart && seg.eventRange.ui.durationEditable && context.options.eventResizableFromStart;\n}\nfunction computeSegEndResizable(seg, context) {\n    return seg.isEnd && seg.eventRange.ui.durationEditable;\n}\nfunction buildSegTimeText(seg, timeFormat, context, defaultDisplayEventTime, // defaults to true\ndefaultDisplayEventEnd, // defaults to true\nstartOverride, endOverride) {\n    let { dateEnv, options } = context;\n    let { displayEventTime, displayEventEnd } = options;\n    let eventDef = seg.eventRange.def;\n    let eventInstance = seg.eventRange.instance;\n    if (displayEventTime == null) {\n        displayEventTime = defaultDisplayEventTime !== false;\n    }\n    if (displayEventEnd == null) {\n        displayEventEnd = defaultDisplayEventEnd !== false;\n    }\n    let wholeEventStart = eventInstance.range.start;\n    let wholeEventEnd = eventInstance.range.end;\n    let segStart = startOverride || seg.start || seg.eventRange.range.start;\n    let segEnd = endOverride || seg.end || seg.eventRange.range.end;\n    let isStartDay = startOfDay(wholeEventStart).valueOf() === startOfDay(segStart).valueOf();\n    let isEndDay = startOfDay(addMs(wholeEventEnd, -1)).valueOf() === startOfDay(addMs(segEnd, -1)).valueOf();\n    if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {\n        segStart = isStartDay ? wholeEventStart : segStart;\n        segEnd = isEndDay ? wholeEventEnd : segEnd;\n        if (displayEventEnd && eventDef.hasEnd) {\n            return dateEnv.formatRange(segStart, segEnd, timeFormat, {\n                forcedStartTzo: startOverride ? null : eventInstance.forcedStartTzo,\n                forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo,\n            });\n        }\n        return dateEnv.format(segStart, timeFormat, {\n            forcedTzo: startOverride ? null : eventInstance.forcedStartTzo, // nooooo, same\n        });\n    }\n    return '';\n}\nfunction getSegMeta(seg, todayRange, nowDate) {\n    let segRange = seg.eventRange.range;\n    return {\n        isPast: segRange.end <= (nowDate || todayRange.start),\n        isFuture: segRange.start >= (nowDate || todayRange.end),\n        isToday: todayRange && rangeContainsMarker(todayRange, segRange.start),\n    };\n}\nfunction getEventClassNames(props) {\n    let classNames = ['fc-event'];\n    if (props.isMirror) {\n        classNames.push('fc-event-mirror');\n    }\n    if (props.isDraggable) {\n        classNames.push('fc-event-draggable');\n    }\n    if (props.isStartResizable || props.isEndResizable) {\n        classNames.push('fc-event-resizable');\n    }\n    if (props.isDragging) {\n        classNames.push('fc-event-dragging');\n    }\n    if (props.isResizing) {\n        classNames.push('fc-event-resizing');\n    }\n    if (props.isSelected) {\n        classNames.push('fc-event-selected');\n    }\n    if (props.isStart) {\n        classNames.push('fc-event-start');\n    }\n    if (props.isEnd) {\n        classNames.push('fc-event-end');\n    }\n    if (props.isPast) {\n        classNames.push('fc-event-past');\n    }\n    if (props.isToday) {\n        classNames.push('fc-event-today');\n    }\n    if (props.isFuture) {\n        classNames.push('fc-event-future');\n    }\n    return classNames;\n}\nfunction buildEventRangeKey(eventRange) {\n    return eventRange.instance\n        ? eventRange.instance.instanceId\n        : `${eventRange.def.defId}:${eventRange.range.start.toISOString()}`;\n    // inverse-background events don't have specific instances. TODO: better solution\n}\nfunction getSegAnchorAttrs(seg, context) {\n    let { def, instance } = seg.eventRange;\n    let { url } = def;\n    if (url) {\n        return { href: url };\n    }\n    let { emitter, options } = context;\n    let { eventInteractive } = options;\n    if (eventInteractive == null) {\n        eventInteractive = def.interactive;\n        if (eventInteractive == null) {\n            eventInteractive = Boolean(emitter.hasHandlers('eventClick'));\n        }\n    }\n    // mock what happens in EventClicking\n    if (eventInteractive) {\n        // only attach keyboard-related handlers because click handler is already done in EventClicking\n        return createAriaKeyboardAttrs((ev) => {\n            emitter.trigger('eventClick', {\n                el: ev.target,\n                event: new EventImpl(context, def, instance),\n                jsEvent: ev,\n                view: context.viewApi,\n            });\n        });\n    }\n    return {};\n}\n\nconst STANDARD_PROPS = {\n    start: identity,\n    end: identity,\n    allDay: Boolean,\n};\nfunction parseDateSpan(raw, dateEnv, defaultDuration) {\n    let span = parseOpenDateSpan(raw, dateEnv);\n    let { range } = span;\n    if (!range.start) {\n        return null;\n    }\n    if (!range.end) {\n        if (defaultDuration == null) {\n            return null;\n        }\n        range.end = dateEnv.add(range.start, defaultDuration);\n    }\n    return span;\n}\n/*\nTODO: somehow combine with parseRange?\nWill return null if the start/end props were present but parsed invalidly.\n*/\nfunction parseOpenDateSpan(raw, dateEnv) {\n    let { refined: standardProps, extra } = refineProps(raw, STANDARD_PROPS);\n    let startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;\n    let endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;\n    let { allDay } = standardProps;\n    if (allDay == null) {\n        allDay = (startMeta && startMeta.isTimeUnspecified) &&\n            (!endMeta || endMeta.isTimeUnspecified);\n    }\n    return Object.assign({ range: {\n            start: startMeta ? startMeta.marker : null,\n            end: endMeta ? endMeta.marker : null,\n        }, allDay }, extra);\n}\nfunction isDateSpansEqual(span0, span1) {\n    return rangesEqual(span0.range, span1.range) &&\n        span0.allDay === span1.allDay &&\n        isSpanPropsEqual(span0, span1);\n}\n// the NON-DATE-RELATED props\nfunction isSpanPropsEqual(span0, span1) {\n    for (let propName in span1) {\n        if (propName !== 'range' && propName !== 'allDay') {\n            if (span0[propName] !== span1[propName]) {\n                return false;\n            }\n        }\n    }\n    // are there any props that span0 has that span1 DOESN'T have?\n    // both have range/allDay, so no need to special-case.\n    for (let propName in span0) {\n        if (!(propName in span1)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction buildDateSpanApi(span, dateEnv) {\n    return Object.assign(Object.assign({}, buildRangeApi(span.range, dateEnv, span.allDay)), { allDay: span.allDay });\n}\nfunction buildRangeApiWithTimeZone(range, dateEnv, omitTime) {\n    return Object.assign(Object.assign({}, buildRangeApi(range, dateEnv, omitTime)), { timeZone: dateEnv.timeZone });\n}\nfunction buildRangeApi(range, dateEnv, omitTime) {\n    return {\n        start: dateEnv.toDate(range.start),\n        end: dateEnv.toDate(range.end),\n        startStr: dateEnv.formatIso(range.start, { omitTime }),\n        endStr: dateEnv.formatIso(range.end, { omitTime }),\n    };\n}\nfunction fabricateEventRange(dateSpan, eventUiBases, context) {\n    let res = refineEventDef({ editable: false }, context);\n    let def = parseEventDef(res.refined, res.extra, '', // sourceId\n    dateSpan.allDay, true, // hasEnd\n    context);\n    return {\n        def,\n        ui: compileEventUi(def, eventUiBases),\n        instance: createEventInstance(def.defId, dateSpan.range),\n        range: dateSpan.range,\n        isStart: true,\n        isEnd: true,\n    };\n}\n\n/*\ngiven a function that resolves a result asynchronously.\nthe function can either call passed-in success and failure callbacks,\nor it can return a promise.\nif you need to pass additional params to func, bind them first.\n*/\nfunction unpromisify(func, normalizedSuccessCallback, normalizedFailureCallback) {\n    // guard against success/failure callbacks being called more than once\n    // and guard against a promise AND callback being used together.\n    let isResolved = false;\n    let wrappedSuccess = function (res) {\n        if (!isResolved) {\n            isResolved = true;\n            normalizedSuccessCallback(res);\n        }\n    };\n    let wrappedFailure = function (error) {\n        if (!isResolved) {\n            isResolved = true;\n            normalizedFailureCallback(error);\n        }\n    };\n    let res = func(wrappedSuccess, wrappedFailure);\n    if (res && typeof res.then === 'function') {\n        res.then(wrappedSuccess, wrappedFailure);\n    }\n}\n\nclass JsonRequestError extends Error {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\nfunction requestJson(method, url, params) {\n    method = method.toUpperCase();\n    const fetchOptions = {\n        method,\n    };\n    if (method === 'GET') {\n        url += (url.indexOf('?') === -1 ? '?' : '&') +\n            new URLSearchParams(params);\n    }\n    else {\n        fetchOptions.body = new URLSearchParams(params);\n        fetchOptions.headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n    }\n    return fetch(url, fetchOptions).then((fetchRes) => {\n        if (fetchRes.ok) {\n            return fetchRes.json().then((parsedResponse) => {\n                return [parsedResponse, fetchRes];\n            }, () => {\n                throw new JsonRequestError('Failure parsing JSON', fetchRes);\n            });\n        }\n        else {\n            throw new JsonRequestError('Request failed', fetchRes);\n        }\n    });\n}\n\nlet canVGrowWithinCell;\nfunction getCanVGrowWithinCell() {\n    if (canVGrowWithinCell == null) {\n        canVGrowWithinCell = computeCanVGrowWithinCell();\n    }\n    return canVGrowWithinCell;\n}\nfunction computeCanVGrowWithinCell() {\n    // for SSR, because this function is call immediately at top-level\n    // TODO: just make this logic execute top-level, immediately, instead of doing lazily\n    if (typeof document === 'undefined') {\n        return true;\n    }\n    let el = document.createElement('div');\n    el.style.position = 'absolute';\n    el.style.top = '0px';\n    el.style.left = '0px';\n    el.innerHTML = '<table><tr><td><div></div></td></tr></table>';\n    el.querySelector('table').style.height = '100px';\n    el.querySelector('div').style.height = '100%';\n    document.body.appendChild(el);\n    let div = el.querySelector('div');\n    let possible = div.offsetHeight > 0;\n    document.body.removeChild(el);\n    return possible;\n}\n\nclass CalendarRoot extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            forPrint: false,\n        };\n        this.handleBeforePrint = () => {\n            flushSync(() => {\n                this.setState({ forPrint: true });\n            });\n        };\n        this.handleAfterPrint = () => {\n            flushSync(() => {\n                this.setState({ forPrint: false });\n            });\n        };\n    }\n    render() {\n        let { props } = this;\n        let { options } = props;\n        let { forPrint } = this.state;\n        let isHeightAuto = forPrint || options.height === 'auto' || options.contentHeight === 'auto';\n        let height = (!isHeightAuto && options.height != null) ? options.height : '';\n        let classNames = [\n            'fc',\n            forPrint ? 'fc-media-print' : 'fc-media-screen',\n            `fc-direction-${options.direction}`,\n            props.theme.getClass('root'),\n        ];\n        if (!getCanVGrowWithinCell()) {\n            classNames.push('fc-liquid-hack');\n        }\n        return props.children(classNames, height, isHeightAuto, forPrint);\n    }\n    componentDidMount() {\n        let { emitter } = this.props;\n        emitter.on('_beforeprint', this.handleBeforePrint);\n        emitter.on('_afterprint', this.handleAfterPrint);\n    }\n    componentWillUnmount() {\n        let { emitter } = this.props;\n        emitter.off('_beforeprint', this.handleBeforePrint);\n        emitter.off('_afterprint', this.handleAfterPrint);\n    }\n}\n\nclass Interaction {\n    constructor(settings) {\n        this.component = settings.component;\n        this.isHitComboAllowed = settings.isHitComboAllowed || null;\n    }\n    destroy() {\n    }\n}\nfunction parseInteractionSettings(component, input) {\n    return {\n        component,\n        el: input.el,\n        useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,\n        isHitComboAllowed: input.isHitComboAllowed || null,\n    };\n}\nfunction interactionSettingsToStore(settings) {\n    return {\n        [settings.component.uid]: settings,\n    };\n}\n// global state\nconst interactionSettingsStore = {};\n\nclass NowTimer extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.handleRefresh = () => {\n            let timing = this.computeTiming();\n            if (timing.state.nowDate.valueOf() !== this.state.nowDate.valueOf()) {\n                this.setState(timing.state);\n            }\n            this.clearTimeout();\n            this.setTimeout(timing.waitMs);\n        };\n        this.handleVisibilityChange = () => {\n            if (!document.hidden) {\n                this.handleRefresh();\n            }\n        };\n        this.state = this.computeTiming().state;\n    }\n    render() {\n        let { props, state } = this;\n        return props.children(state.nowDate, state.todayRange);\n    }\n    componentDidMount() {\n        this.setTimeout();\n        this.context.nowManager.addResetListener(this.handleRefresh);\n        // fired tab becomes visible after being hidden\n        document.addEventListener('visibilitychange', this.handleVisibilityChange);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.unit !== this.props.unit) {\n            this.clearTimeout();\n            this.setTimeout();\n        }\n    }\n    componentWillUnmount() {\n        this.clearTimeout();\n        this.context.nowManager.removeResetListener(this.handleRefresh);\n        document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n    }\n    computeTiming() {\n        let { props, context } = this;\n        let unroundedNow = context.nowManager.getDateMarker();\n        let currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit);\n        let nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit));\n        let waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf();\n        // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)\n        // ensure no longer than a day\n        waitMs = Math.min(1000 * 60 * 60 * 24, waitMs);\n        return {\n            state: { nowDate: currentUnitStart, todayRange: buildDayRange(currentUnitStart) },\n            waitMs,\n        };\n    }\n    setTimeout(waitMs = this.computeTiming().waitMs) {\n        // NOTE: timeout could take longer than expected if tab sleeps,\n        // which is why we listen to 'visibilitychange'\n        this.timeoutId = setTimeout(() => {\n            // NOTE: timeout could also return *earlier* than expected, and we need to wait 2 ms more\n            // This is why use use same waitMs from computeTiming, so we don't skip an interval while\n            // .setState() is executing\n            const timing = this.computeTiming();\n            this.setState(timing.state, () => {\n                this.setTimeout(timing.waitMs);\n            });\n        }, waitMs);\n    }\n    clearTimeout() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    }\n}\nNowTimer.contextType = ViewContextType;\nfunction buildDayRange(date) {\n    let start = startOfDay(date);\n    let end = addDays(start, 1);\n    return { start, end };\n}\n\nclass CalendarImpl {\n    getCurrentData() {\n        return this.currentDataManager.getCurrentData();\n    }\n    dispatch(action) {\n        this.currentDataManager.dispatch(action);\n    }\n    get view() { return this.getCurrentData().viewApi; }\n    batchRendering(callback) {\n        callback();\n    }\n    updateSize() {\n        this.trigger('_resize', true);\n    }\n    // Options\n    // -----------------------------------------------------------------------------------------------------------------\n    setOption(name, val) {\n        this.dispatch({\n            type: 'SET_OPTION',\n            optionName: name,\n            rawOptionValue: val,\n        });\n    }\n    getOption(name) {\n        return this.currentDataManager.currentCalendarOptionsInput[name];\n    }\n    getAvailableLocaleCodes() {\n        return Object.keys(this.getCurrentData().availableRawLocales);\n    }\n    // Trigger\n    // -----------------------------------------------------------------------------------------------------------------\n    on(handlerName, handler) {\n        let { currentDataManager } = this;\n        if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {\n            currentDataManager.emitter.on(handlerName, handler);\n        }\n        else {\n            console.warn(`Unknown listener name '${handlerName}'`);\n        }\n    }\n    off(handlerName, handler) {\n        this.currentDataManager.emitter.off(handlerName, handler);\n    }\n    // not meant for public use\n    trigger(handlerName, ...args) {\n        this.currentDataManager.emitter.trigger(handlerName, ...args);\n    }\n    // View\n    // -----------------------------------------------------------------------------------------------------------------\n    changeView(viewType, dateOrRange) {\n        this.batchRendering(() => {\n            this.unselect();\n            if (dateOrRange) {\n                if (dateOrRange.start && dateOrRange.end) { // a range\n                    this.dispatch({\n                        type: 'CHANGE_VIEW_TYPE',\n                        viewType,\n                    });\n                    this.dispatch({\n                        type: 'SET_OPTION',\n                        optionName: 'visibleRange',\n                        rawOptionValue: dateOrRange,\n                    });\n                }\n                else {\n                    let { dateEnv } = this.getCurrentData();\n                    this.dispatch({\n                        type: 'CHANGE_VIEW_TYPE',\n                        viewType,\n                        dateMarker: dateEnv.createMarker(dateOrRange),\n                    });\n                }\n            }\n            else {\n                this.dispatch({\n                    type: 'CHANGE_VIEW_TYPE',\n                    viewType,\n                });\n            }\n        });\n    }\n    // Forces navigation to a view for the given date.\n    // `viewType` can be a specific view name or a generic one like \"week\" or \"day\".\n    // needs to change\n    zoomTo(dateMarker, viewType) {\n        let state = this.getCurrentData();\n        let spec;\n        viewType = viewType || 'day'; // day is default zoom\n        spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType);\n        this.unselect();\n        if (spec) {\n            this.dispatch({\n                type: 'CHANGE_VIEW_TYPE',\n                viewType: spec.type,\n                dateMarker,\n            });\n        }\n        else {\n            this.dispatch({\n                type: 'CHANGE_DATE',\n                dateMarker,\n            });\n        }\n    }\n    // Given a duration singular unit, like \"week\" or \"day\", finds a matching view spec.\n    // Preference is given to views that have corresponding buttons.\n    getUnitViewSpec(unit) {\n        let { viewSpecs, toolbarConfig } = this.getCurrentData();\n        let viewTypes = [].concat(toolbarConfig.header ? toolbarConfig.header.viewsWithButtons : [], toolbarConfig.footer ? toolbarConfig.footer.viewsWithButtons : []);\n        let i;\n        let spec;\n        for (let viewType in viewSpecs) {\n            viewTypes.push(viewType);\n        }\n        for (i = 0; i < viewTypes.length; i += 1) {\n            spec = viewSpecs[viewTypes[i]];\n            if (spec) {\n                if (spec.singleUnit === unit) {\n                    return spec;\n                }\n            }\n        }\n        return null;\n    }\n    // Current Date\n    // -----------------------------------------------------------------------------------------------------------------\n    prev() {\n        this.unselect();\n        this.dispatch({ type: 'PREV' });\n    }\n    next() {\n        this.unselect();\n        this.dispatch({ type: 'NEXT' });\n    }\n    prevYear() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.addYears(state.currentDate, -1),\n        });\n    }\n    nextYear() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.addYears(state.currentDate, 1),\n        });\n    }\n    today() {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.nowManager.getDateMarker(),\n        });\n    }\n    gotoDate(zonedDateInput) {\n        let state = this.getCurrentData();\n        this.unselect();\n        this.dispatch({\n            type: 'CHANGE_DATE',\n            dateMarker: state.dateEnv.createMarker(zonedDateInput),\n        });\n    }\n    incrementDate(deltaInput) {\n        let state = this.getCurrentData();\n        let delta = createDuration(deltaInput);\n        if (delta) { // else, warn about invalid input?\n            this.unselect();\n            this.dispatch({\n                type: 'CHANGE_DATE',\n                dateMarker: state.dateEnv.add(state.currentDate, delta),\n            });\n        }\n    }\n    getDate() {\n        let state = this.getCurrentData();\n        return state.dateEnv.toDate(state.currentDate);\n    }\n    // Date Formatting Utils\n    // -----------------------------------------------------------------------------------------------------------------\n    formatDate(d, formatter) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));\n    }\n    // `settings` is for formatter AND isEndExclusive\n    formatRange(d0, d1, settings) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings), settings);\n    }\n    formatIso(d, omitTime) {\n        let { dateEnv } = this.getCurrentData();\n        return dateEnv.formatIso(dateEnv.createMarker(d), { omitTime });\n    }\n    // Date Selection / Event Selection / DayClick\n    // -----------------------------------------------------------------------------------------------------------------\n    select(dateOrObj, endDate) {\n        let selectionInput;\n        if (endDate == null) {\n            if (dateOrObj.start != null) {\n                selectionInput = dateOrObj;\n            }\n            else {\n                selectionInput = {\n                    start: dateOrObj,\n                    end: null,\n                };\n            }\n        }\n        else {\n            selectionInput = {\n                start: dateOrObj,\n                end: endDate,\n            };\n        }\n        let state = this.getCurrentData();\n        let selection = parseDateSpan(selectionInput, state.dateEnv, createDuration({ days: 1 }));\n        if (selection) { // throw parse error otherwise?\n            this.dispatch({ type: 'SELECT_DATES', selection });\n            triggerDateSelect(selection, null, state);\n        }\n    }\n    unselect(pev) {\n        let state = this.getCurrentData();\n        if (state.dateSelection) {\n            this.dispatch({ type: 'UNSELECT_DATES' });\n            triggerDateUnselect(pev, state);\n        }\n    }\n    // Public Events API\n    // -----------------------------------------------------------------------------------------------------------------\n    addEvent(eventInput, sourceInput) {\n        if (eventInput instanceof EventImpl) {\n            let def = eventInput._def;\n            let instance = eventInput._instance;\n            let currentData = this.getCurrentData();\n            // not already present? don't want to add an old snapshot\n            if (!currentData.eventStore.defs[def.defId]) {\n                this.dispatch({\n                    type: 'ADD_EVENTS',\n                    eventStore: eventTupleToStore({ def, instance }), // TODO: better util for two args?\n                });\n                this.triggerEventAdd(eventInput);\n            }\n            return eventInput;\n        }\n        let state = this.getCurrentData();\n        let eventSource;\n        if (sourceInput instanceof EventSourceImpl) {\n            eventSource = sourceInput.internalEventSource;\n        }\n        else if (typeof sourceInput === 'boolean') {\n            if (sourceInput) { // true. part of the first event source\n                [eventSource] = hashValuesToArray(state.eventSources);\n            }\n        }\n        else if (sourceInput != null) { // an ID. accepts a number too\n            let sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function\n            if (!sourceApi) {\n                console.warn(`Could not find an event source with ID \"${sourceInput}\"`); // TODO: test\n                return null;\n            }\n            eventSource = sourceApi.internalEventSource;\n        }\n        let tuple = parseEvent(eventInput, eventSource, state, false);\n        if (tuple) {\n            let newEventApi = new EventImpl(state, tuple.def, tuple.def.recurringDef ? null : tuple.instance);\n            this.dispatch({\n                type: 'ADD_EVENTS',\n                eventStore: eventTupleToStore(tuple),\n            });\n            this.triggerEventAdd(newEventApi);\n            return newEventApi;\n        }\n        return null;\n    }\n    triggerEventAdd(eventApi) {\n        let { emitter } = this.getCurrentData();\n        emitter.trigger('eventAdd', {\n            event: eventApi,\n            relatedEvents: [],\n            revert: () => {\n                this.dispatch({\n                    type: 'REMOVE_EVENTS',\n                    eventStore: eventApiToStore(eventApi),\n                });\n            },\n        });\n    }\n    // TODO: optimize\n    getEventById(id) {\n        let state = this.getCurrentData();\n        let { defs, instances } = state.eventStore;\n        id = String(id);\n        for (let defId in defs) {\n            let def = defs[defId];\n            if (def.publicId === id) {\n                if (def.recurringDef) {\n                    return new EventImpl(state, def, null);\n                }\n                for (let instanceId in instances) {\n                    let instance = instances[instanceId];\n                    if (instance.defId === def.defId) {\n                        return new EventImpl(state, def, instance);\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    getEvents() {\n        let currentData = this.getCurrentData();\n        return buildEventApis(currentData.eventStore, currentData);\n    }\n    removeAllEvents() {\n        this.dispatch({ type: 'REMOVE_ALL_EVENTS' });\n    }\n    // Public Event Sources API\n    // -----------------------------------------------------------------------------------------------------------------\n    getEventSources() {\n        let state = this.getCurrentData();\n        let sourceHash = state.eventSources;\n        let sourceApis = [];\n        for (let internalId in sourceHash) {\n            sourceApis.push(new EventSourceImpl(state, sourceHash[internalId]));\n        }\n        return sourceApis;\n    }\n    getEventSourceById(id) {\n        let state = this.getCurrentData();\n        let sourceHash = state.eventSources;\n        id = String(id);\n        for (let sourceId in sourceHash) {\n            if (sourceHash[sourceId].publicId === id) {\n                return new EventSourceImpl(state, sourceHash[sourceId]);\n            }\n        }\n        return null;\n    }\n    addEventSource(sourceInput) {\n        let state = this.getCurrentData();\n        if (sourceInput instanceof EventSourceImpl) {\n            // not already present? don't want to add an old snapshot\n            if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {\n                this.dispatch({\n                    type: 'ADD_EVENT_SOURCES',\n                    sources: [sourceInput.internalEventSource],\n                });\n            }\n            return sourceInput;\n        }\n        let eventSource = parseEventSource(sourceInput, state);\n        if (eventSource) { // TODO: error otherwise?\n            this.dispatch({ type: 'ADD_EVENT_SOURCES', sources: [eventSource] });\n            return new EventSourceImpl(state, eventSource);\n        }\n        return null;\n    }\n    removeAllEventSources() {\n        this.dispatch({ type: 'REMOVE_ALL_EVENT_SOURCES' });\n    }\n    refetchEvents() {\n        this.dispatch({ type: 'FETCH_EVENT_SOURCES', isRefetch: true });\n    }\n    // Scroll\n    // -----------------------------------------------------------------------------------------------------------------\n    scrollToTime(timeInput) {\n        let time = createDuration(timeInput);\n        if (time) {\n            this.trigger('_scrollRequest', { time });\n        }\n    }\n}\n\nfunction pointInsideRect(point, rect) {\n    return point.left >= rect.left &&\n        point.left < rect.right &&\n        point.top >= rect.top &&\n        point.top < rect.bottom;\n}\n// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\nfunction intersectRects(rect1, rect2) {\n    let res = {\n        left: Math.max(rect1.left, rect2.left),\n        right: Math.min(rect1.right, rect2.right),\n        top: Math.max(rect1.top, rect2.top),\n        bottom: Math.min(rect1.bottom, rect2.bottom),\n    };\n    if (res.left < res.right && res.top < res.bottom) {\n        return res;\n    }\n    return false;\n}\nfunction translateRect(rect, deltaX, deltaY) {\n    return {\n        left: rect.left + deltaX,\n        right: rect.right + deltaX,\n        top: rect.top + deltaY,\n        bottom: rect.bottom + deltaY,\n    };\n}\n// Returns a new point that will have been moved to reside within the given rectangle\nfunction constrainPoint(point, rect) {\n    return {\n        left: Math.min(Math.max(point.left, rect.left), rect.right),\n        top: Math.min(Math.max(point.top, rect.top), rect.bottom),\n    };\n}\n// Returns a point that is the center of the given rectangle\nfunction getRectCenter(rect) {\n    return {\n        left: (rect.left + rect.right) / 2,\n        top: (rect.top + rect.bottom) / 2,\n    };\n}\n// Subtracts point2's coordinates from point1's coordinates, returning a delta\nfunction diffPoints(point1, point2) {\n    return {\n        left: point1.left - point2.left,\n        top: point1.top - point2.top,\n    };\n}\n\nconst EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere\nclass Splitter {\n    constructor() {\n        this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);\n        this.splitDateSelection = memoize(this._splitDateSpan);\n        this.splitEventStore = memoize(this._splitEventStore);\n        this.splitIndividualUi = memoize(this._splitIndividualUi);\n        this.splitEventDrag = memoize(this._splitInteraction);\n        this.splitEventResize = memoize(this._splitInteraction);\n        this.eventUiBuilders = {}; // TODO: typescript protection\n    }\n    splitProps(props) {\n        let keyInfos = this.getKeyInfo(props);\n        let defKeys = this.getKeysForEventDefs(props.eventStore);\n        let dateSelections = this.splitDateSelection(props.dateSelection);\n        let individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*\n        let eventStores = this.splitEventStore(props.eventStore, defKeys);\n        let eventDrags = this.splitEventDrag(props.eventDrag);\n        let eventResizes = this.splitEventResize(props.eventResize);\n        let splitProps = {};\n        this.eventUiBuilders = mapHash(keyInfos, (info, key) => this.eventUiBuilders[key] || memoize(buildEventUiForKey));\n        for (let key in keyInfos) {\n            let keyInfo = keyInfos[key];\n            let eventStore = eventStores[key] || EMPTY_EVENT_STORE;\n            let buildEventUi = this.eventUiBuilders[key];\n            splitProps[key] = {\n                businessHours: keyInfo.businessHours || props.businessHours,\n                dateSelection: dateSelections[key] || null,\n                eventStore,\n                eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),\n                eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',\n                eventDrag: eventDrags[key] || null,\n                eventResize: eventResizes[key] || null,\n            };\n        }\n        return splitProps;\n    }\n    _splitDateSpan(dateSpan) {\n        let dateSpans = {};\n        if (dateSpan) {\n            let keys = this.getKeysForDateSpan(dateSpan);\n            for (let key of keys) {\n                dateSpans[key] = dateSpan;\n            }\n        }\n        return dateSpans;\n    }\n    _getKeysForEventDefs(eventStore) {\n        return mapHash(eventStore.defs, (eventDef) => this.getKeysForEventDef(eventDef));\n    }\n    _splitEventStore(eventStore, defKeys) {\n        let { defs, instances } = eventStore;\n        let splitStores = {};\n        for (let defId in defs) {\n            for (let key of defKeys[defId]) {\n                if (!splitStores[key]) {\n                    splitStores[key] = createEmptyEventStore();\n                }\n                splitStores[key].defs[defId] = defs[defId];\n            }\n        }\n        for (let instanceId in instances) {\n            let instance = instances[instanceId];\n            for (let key of defKeys[instance.defId]) {\n                if (splitStores[key]) { // must have already been created\n                    splitStores[key].instances[instanceId] = instance;\n                }\n            }\n        }\n        return splitStores;\n    }\n    _splitIndividualUi(eventUiBases, defKeys) {\n        let splitHashes = {};\n        for (let defId in eventUiBases) {\n            if (defId) { // not the '' key\n                for (let key of defKeys[defId]) {\n                    if (!splitHashes[key]) {\n                        splitHashes[key] = {};\n                    }\n                    splitHashes[key][defId] = eventUiBases[defId];\n                }\n            }\n        }\n        return splitHashes;\n    }\n    _splitInteraction(interaction) {\n        let splitStates = {};\n        if (interaction) {\n            let affectedStores = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents));\n            // can't rely on defKeys because event data is mutated\n            let mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);\n            let mutatedStores = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);\n            let populate = (key) => {\n                if (!splitStates[key]) {\n                    splitStates[key] = {\n                        affectedEvents: affectedStores[key] || EMPTY_EVENT_STORE,\n                        mutatedEvents: mutatedStores[key] || EMPTY_EVENT_STORE,\n                        isEvent: interaction.isEvent,\n                    };\n                }\n            };\n            for (let key in affectedStores) {\n                populate(key);\n            }\n            for (let key in mutatedStores) {\n                populate(key);\n            }\n        }\n        return splitStates;\n    }\n}\nfunction buildEventUiForKey(allUi, eventUiForKey, individualUi) {\n    let baseParts = [];\n    if (allUi) {\n        baseParts.push(allUi);\n    }\n    if (eventUiForKey) {\n        baseParts.push(eventUiForKey);\n    }\n    let stuff = {\n        '': combineEventUis(baseParts),\n    };\n    if (individualUi) {\n        Object.assign(stuff, individualUi);\n    }\n    return stuff;\n}\n\nfunction getDateMeta(date, todayRange, nowDate, dateProfile) {\n    return {\n        dow: date.getUTCDay(),\n        isDisabled: Boolean(dateProfile && (!dateProfile.activeRange || !rangeContainsMarker(dateProfile.activeRange, date))),\n        isOther: Boolean(dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)),\n        isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),\n        isPast: Boolean(nowDate ? (date < nowDate) : todayRange ? (date < todayRange.start) : false),\n        isFuture: Boolean(nowDate ? (date > nowDate) : todayRange ? (date >= todayRange.end) : false),\n    };\n}\nfunction getDayClassNames(meta, theme) {\n    let classNames = [\n        'fc-day',\n        `fc-day-${DAY_IDS[meta.dow]}`,\n    ];\n    if (meta.isDisabled) {\n        classNames.push('fc-day-disabled');\n    }\n    else {\n        if (meta.isToday) {\n            classNames.push('fc-day-today');\n            classNames.push(theme.getClass('today'));\n        }\n        if (meta.isPast) {\n            classNames.push('fc-day-past');\n        }\n        if (meta.isFuture) {\n            classNames.push('fc-day-future');\n        }\n        if (meta.isOther) {\n            classNames.push('fc-day-other');\n        }\n    }\n    return classNames;\n}\nfunction getSlotClassNames(meta, theme) {\n    let classNames = [\n        'fc-slot',\n        `fc-slot-${DAY_IDS[meta.dow]}`,\n    ];\n    if (meta.isDisabled) {\n        classNames.push('fc-slot-disabled');\n    }\n    else {\n        if (meta.isToday) {\n            classNames.push('fc-slot-today');\n            classNames.push(theme.getClass('today'));\n        }\n        if (meta.isPast) {\n            classNames.push('fc-slot-past');\n        }\n        if (meta.isFuture) {\n            classNames.push('fc-slot-future');\n        }\n    }\n    return classNames;\n}\n\nconst DAY_FORMAT = createFormatter({ year: 'numeric', month: 'long', day: 'numeric' });\nconst WEEK_FORMAT = createFormatter({ week: 'long' });\nfunction buildNavLinkAttrs(context, dateMarker, viewType = 'day', isTabbable = true) {\n    const { dateEnv, options, calendarApi } = context;\n    let dateStr = dateEnv.format(dateMarker, viewType === 'week' ? WEEK_FORMAT : DAY_FORMAT);\n    if (options.navLinks) {\n        let zonedDate = dateEnv.toDate(dateMarker);\n        const handleInteraction = (ev) => {\n            let customAction = viewType === 'day' ? options.navLinkDayClick :\n                viewType === 'week' ? options.navLinkWeekClick : null;\n            if (typeof customAction === 'function') {\n                customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev);\n            }\n            else {\n                if (typeof customAction === 'string') {\n                    viewType = customAction;\n                }\n                calendarApi.zoomTo(dateMarker, viewType);\n            }\n        };\n        return Object.assign({ title: formatWithOrdinals(options.navLinkHint, [dateStr, zonedDate], dateStr), 'data-navlink': '' }, (isTabbable\n            ? createAriaClickAttrs(handleInteraction)\n            : { onClick: handleInteraction }));\n    }\n    return { 'aria-label': dateStr };\n}\n\nlet _isRtlScrollbarOnLeft = null;\nfunction getIsRtlScrollbarOnLeft() {\n    if (_isRtlScrollbarOnLeft === null) {\n        _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();\n    }\n    return _isRtlScrollbarOnLeft;\n}\nfunction computeIsRtlScrollbarOnLeft() {\n    let outerEl = document.createElement('div');\n    applyStyle(outerEl, {\n        position: 'absolute',\n        top: -1000,\n        left: 0,\n        border: 0,\n        padding: 0,\n        overflow: 'scroll',\n        direction: 'rtl',\n    });\n    outerEl.innerHTML = '<div></div>';\n    document.body.appendChild(outerEl);\n    let innerEl = outerEl.firstChild;\n    let res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;\n    removeElement(outerEl);\n    return res;\n}\n\nlet _scrollbarWidths;\nfunction getScrollbarWidths() {\n    if (!_scrollbarWidths) {\n        _scrollbarWidths = computeScrollbarWidths();\n    }\n    return _scrollbarWidths;\n}\nfunction computeScrollbarWidths() {\n    let el = document.createElement('div');\n    el.style.overflow = 'scroll';\n    el.style.position = 'absolute';\n    el.style.top = '-9999px';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    let res = computeScrollbarWidthsForEl(el);\n    document.body.removeChild(el);\n    return res;\n}\n// WARNING: will include border\nfunction computeScrollbarWidthsForEl(el) {\n    return {\n        x: el.offsetHeight - el.clientHeight,\n        y: el.offsetWidth - el.clientWidth,\n    };\n}\n\nfunction computeEdges(el, getPadding = false) {\n    let computedStyle = window.getComputedStyle(el);\n    let borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;\n    let borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;\n    let borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;\n    let borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;\n    let badScrollbarWidths = computeScrollbarWidthsForEl(el); // includes border!\n    let scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight;\n    let scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom;\n    let res = {\n        borderLeft,\n        borderRight,\n        borderTop,\n        borderBottom,\n        scrollbarBottom,\n        scrollbarLeft: 0,\n        scrollbarRight: 0,\n    };\n    if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') { // is the scrollbar on the left side?\n        res.scrollbarLeft = scrollbarLeftRight;\n    }\n    else {\n        res.scrollbarRight = scrollbarLeftRight;\n    }\n    if (getPadding) {\n        res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n        res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n        res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n        res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n    }\n    return res;\n}\nfunction computeInnerRect(el, goWithinPadding = false, doFromWindowViewport) {\n    let outerRect = doFromWindowViewport ? el.getBoundingClientRect() : computeRect(el);\n    let edges = computeEdges(el, goWithinPadding);\n    let res = {\n        left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,\n        right: outerRect.right - edges.borderRight - edges.scrollbarRight,\n        top: outerRect.top + edges.borderTop,\n        bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom,\n    };\n    if (goWithinPadding) {\n        res.left += edges.paddingLeft;\n        res.right -= edges.paddingRight;\n        res.top += edges.paddingTop;\n        res.bottom -= edges.paddingBottom;\n    }\n    return res;\n}\nfunction computeRect(el) {\n    let rect = el.getBoundingClientRect();\n    return {\n        left: rect.left + window.scrollX,\n        top: rect.top + window.scrollY,\n        right: rect.right + window.scrollX,\n        bottom: rect.bottom + window.scrollY,\n    };\n}\nfunction computeClippedClientRect(el) {\n    let clippingParents = getClippingParents(el);\n    let rect = el.getBoundingClientRect();\n    for (let clippingParent of clippingParents) {\n        let intersection = intersectRects(rect, clippingParent.getBoundingClientRect());\n        if (intersection) {\n            rect = intersection;\n        }\n        else {\n            return null;\n        }\n    }\n    return rect;\n}\n// does not return window\nfunction getClippingParents(el) {\n    let parents = [];\n    while (el instanceof HTMLElement) { // will stop when gets to document or null\n        let computedStyle = window.getComputedStyle(el);\n        if (computedStyle.position === 'fixed') {\n            break;\n        }\n        if ((/(auto|scroll)/).test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {\n            parents.push(el);\n        }\n        el = el.parentNode;\n    }\n    return parents;\n}\n\n/*\nRecords offset information for a set of elements, relative to an origin element.\nCan record the left/right OR the top/bottom OR both.\nProvides methods for querying the cache by position.\n*/\nclass PositionCache {\n    constructor(originEl, els, isHorizontal, isVertical) {\n        this.els = els;\n        let originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left\n        if (isHorizontal) {\n            this.buildElHorizontals(originClientRect.left);\n        }\n        if (isVertical) {\n            this.buildElVerticals(originClientRect.top);\n        }\n    }\n    // Populates the left/right internal coordinate arrays\n    buildElHorizontals(originClientLeft) {\n        let lefts = [];\n        let rights = [];\n        for (let el of this.els) {\n            let rect = el.getBoundingClientRect();\n            lefts.push(rect.left - originClientLeft);\n            rights.push(rect.right - originClientLeft);\n        }\n        this.lefts = lefts;\n        this.rights = rights;\n    }\n    // Populates the top/bottom internal coordinate arrays\n    buildElVerticals(originClientTop) {\n        let tops = [];\n        let bottoms = [];\n        for (let el of this.els) {\n            let rect = el.getBoundingClientRect();\n            tops.push(rect.top - originClientTop);\n            bottoms.push(rect.bottom - originClientTop);\n        }\n        this.tops = tops;\n        this.bottoms = bottoms;\n    }\n    // Given a left offset (from document left), returns the index of the el that it horizontally intersects.\n    // If no intersection is made, returns undefined.\n    leftToIndex(leftPosition) {\n        let { lefts, rights } = this;\n        let len = lefts.length;\n        let i;\n        for (i = 0; i < len; i += 1) {\n            if (leftPosition >= lefts[i] && leftPosition < rights[i]) {\n                return i;\n            }\n        }\n        return undefined; // TODO: better\n    }\n    // Given a top offset (from document top), returns the index of the el that it vertically intersects.\n    // If no intersection is made, returns undefined.\n    topToIndex(topPosition) {\n        let { tops, bottoms } = this;\n        let len = tops.length;\n        let i;\n        for (i = 0; i < len; i += 1) {\n            if (topPosition >= tops[i] && topPosition < bottoms[i]) {\n                return i;\n            }\n        }\n        return undefined; // TODO: better\n    }\n    // Gets the width of the element at the given index\n    getWidth(leftIndex) {\n        return this.rights[leftIndex] - this.lefts[leftIndex];\n    }\n    // Gets the height of the element at the given index\n    getHeight(topIndex) {\n        return this.bottoms[topIndex] - this.tops[topIndex];\n    }\n    similarTo(otherCache) {\n        return similarNumArrays(this.tops || [], otherCache.tops || []) &&\n            similarNumArrays(this.bottoms || [], otherCache.bottoms || []) &&\n            similarNumArrays(this.lefts || [], otherCache.lefts || []) &&\n            similarNumArrays(this.rights || [], otherCache.rights || []);\n    }\n}\nfunction similarNumArrays(a, b) {\n    const len = a.length;\n    if (len !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < len; i++) {\n        if (Math.round(a[i]) !== Math.round(b[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/* eslint max-classes-per-file: \"off\" */\n/*\nAn object for getting/setting scroll-related information for an element.\nInternally, this is done very differently for window versus DOM element,\nso this object serves as a common interface.\n*/\nclass ScrollController {\n    getMaxScrollTop() {\n        return this.getScrollHeight() - this.getClientHeight();\n    }\n    getMaxScrollLeft() {\n        return this.getScrollWidth() - this.getClientWidth();\n    }\n    canScrollVertically() {\n        return this.getMaxScrollTop() > 0;\n    }\n    canScrollHorizontally() {\n        return this.getMaxScrollLeft() > 0;\n    }\n    canScrollUp() {\n        return this.getScrollTop() > 0;\n    }\n    canScrollDown() {\n        return this.getScrollTop() < this.getMaxScrollTop();\n    }\n    canScrollLeft() {\n        return this.getScrollLeft() > 0;\n    }\n    canScrollRight() {\n        return this.getScrollLeft() < this.getMaxScrollLeft();\n    }\n}\nclass ElementScrollController extends ScrollController {\n    constructor(el) {\n        super();\n        this.el = el;\n    }\n    getScrollTop() {\n        return this.el.scrollTop;\n    }\n    getScrollLeft() {\n        return this.el.scrollLeft;\n    }\n    setScrollTop(top) {\n        this.el.scrollTop = top;\n    }\n    setScrollLeft(left) {\n        this.el.scrollLeft = left;\n    }\n    getScrollWidth() {\n        return this.el.scrollWidth;\n    }\n    getScrollHeight() {\n        return this.el.scrollHeight;\n    }\n    getClientHeight() {\n        return this.el.clientHeight;\n    }\n    getClientWidth() {\n        return this.el.clientWidth;\n    }\n}\nclass WindowScrollController extends ScrollController {\n    getScrollTop() {\n        return window.scrollY;\n    }\n    getScrollLeft() {\n        return window.scrollX;\n    }\n    setScrollTop(n) {\n        window.scroll(window.scrollX, n);\n    }\n    setScrollLeft(n) {\n        window.scroll(n, window.scrollY);\n    }\n    getScrollWidth() {\n        return document.documentElement.scrollWidth;\n    }\n    getScrollHeight() {\n        return document.documentElement.scrollHeight;\n    }\n    getClientHeight() {\n        return document.documentElement.clientHeight;\n    }\n    getClientWidth() {\n        return document.documentElement.clientWidth;\n    }\n}\n\n/*\nan INTERACTABLE date component\n\nPURPOSES:\n- hook up to fg, fill, and mirror renderers\n- interface for dragging and hits\n*/\nclass DateComponent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.uid = guid();\n    }\n    // Hit System\n    // -----------------------------------------------------------------------------------------------------------------\n    prepareHits() {\n    }\n    queryHit(positionLeft, positionTop, elWidth, elHeight) {\n        return null; // this should be abstract\n    }\n    // Pointer Interaction Utils\n    // -----------------------------------------------------------------------------------------------------------------\n    isValidSegDownEl(el) {\n        return !this.props.eventDrag && // HACK\n            !this.props.eventResize && // HACK\n            !elementClosest(el, '.fc-event-mirror');\n    }\n    isValidDateDownEl(el) {\n        return !elementClosest(el, '.fc-event:not(.fc-bg-event)') &&\n            !elementClosest(el, '.fc-more-link') && // a \"more..\" link\n            !elementClosest(el, 'a[data-navlink]') && // a clickable nav link\n            !elementClosest(el, '.fc-popover'); // hack\n    }\n}\n\nclass NamedTimeZoneImpl {\n    constructor(timeZoneName) {\n        this.timeZoneName = timeZoneName;\n    }\n}\n\nclass SegHierarchy {\n    constructor(getEntryThickness = (entry) => {\n        // if no thickness known, assume 1 (if 0, so small it always fits)\n        return entry.thickness || 1;\n    }) {\n        this.getEntryThickness = getEntryThickness;\n        // settings\n        this.strictOrder = false;\n        this.allowReslicing = false;\n        this.maxCoord = -1; // -1 means no max\n        this.maxStackCnt = -1; // -1 means no max\n        this.levelCoords = []; // ordered\n        this.entriesByLevel = []; // parallel with levelCoords\n        this.stackCnts = {}; // TODO: use better technique!?\n    }\n    addSegs(inputs) {\n        let hiddenEntries = [];\n        for (let input of inputs) {\n            this.insertEntry(input, hiddenEntries);\n        }\n        return hiddenEntries;\n    }\n    insertEntry(entry, hiddenEntries) {\n        let insertion = this.findInsertion(entry);\n        if (this.isInsertionValid(insertion, entry)) {\n            this.insertEntryAt(entry, insertion);\n        }\n        else {\n            this.handleInvalidInsertion(insertion, entry, hiddenEntries);\n        }\n    }\n    isInsertionValid(insertion, entry) {\n        return (this.maxCoord === -1 || insertion.levelCoord + this.getEntryThickness(entry) <= this.maxCoord) &&\n            (this.maxStackCnt === -1 || insertion.stackCnt < this.maxStackCnt);\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        if (this.allowReslicing && insertion.touchingEntry) {\n            const hiddenEntry = Object.assign(Object.assign({}, entry), { span: intersectSpans(entry.span, insertion.touchingEntry.span) });\n            hiddenEntries.push(hiddenEntry);\n            this.splitEntry(entry, insertion.touchingEntry, hiddenEntries);\n        }\n        else {\n            hiddenEntries.push(entry);\n        }\n    }\n    /*\n    Does NOT add what hit the `barrier` into hiddenEntries. Should already be done.\n    */\n    splitEntry(entry, barrier, hiddenEntries) {\n        let entrySpan = entry.span;\n        let barrierSpan = barrier.span;\n        if (entrySpan.start < barrierSpan.start) {\n            this.insertEntry({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: { start: entrySpan.start, end: barrierSpan.start },\n            }, hiddenEntries);\n        }\n        if (entrySpan.end > barrierSpan.end) {\n            this.insertEntry({\n                index: entry.index,\n                thickness: entry.thickness,\n                span: { start: barrierSpan.end, end: entrySpan.end },\n            }, hiddenEntries);\n        }\n    }\n    insertEntryAt(entry, insertion) {\n        let { entriesByLevel, levelCoords } = this;\n        if (insertion.lateral === -1) {\n            // create a new level\n            insertAt(levelCoords, insertion.level, insertion.levelCoord);\n            insertAt(entriesByLevel, insertion.level, [entry]);\n        }\n        else {\n            // insert into existing level\n            insertAt(entriesByLevel[insertion.level], insertion.lateral, entry);\n        }\n        this.stackCnts[buildEntryKey(entry)] = insertion.stackCnt;\n    }\n    /*\n    does not care about limits\n    */\n    findInsertion(newEntry) {\n        let { levelCoords, entriesByLevel, strictOrder, stackCnts } = this;\n        let levelCnt = levelCoords.length;\n        let candidateCoord = 0;\n        let touchingLevel = -1;\n        let touchingLateral = -1;\n        let touchingEntry = null;\n        let stackCnt = 0;\n        for (let trackingLevel = 0; trackingLevel < levelCnt; trackingLevel += 1) {\n            const trackingCoord = levelCoords[trackingLevel];\n            // if the current level is past the placed entry, we have found a good empty space and can stop.\n            // if strictOrder, keep finding more lateral intersections.\n            if (!strictOrder && trackingCoord >= candidateCoord + this.getEntryThickness(newEntry)) {\n                break;\n            }\n            let trackingEntries = entriesByLevel[trackingLevel];\n            let trackingEntry;\n            let searchRes = binarySearch(trackingEntries, newEntry.span.start, getEntrySpanEnd); // find first entry after newEntry's end\n            let lateralIndex = searchRes[0] + searchRes[1]; // if exact match (which doesn't collide), go to next one\n            while ( // loop through entries that horizontally intersect\n            (trackingEntry = trackingEntries[lateralIndex]) && // but not past the whole entry list\n                trackingEntry.span.start < newEntry.span.end // and not entirely past newEntry\n            ) {\n                let trackingEntryBottom = trackingCoord + this.getEntryThickness(trackingEntry);\n                // intersects into the top of the candidate?\n                if (trackingEntryBottom > candidateCoord) {\n                    candidateCoord = trackingEntryBottom;\n                    touchingEntry = trackingEntry;\n                    touchingLevel = trackingLevel;\n                    touchingLateral = lateralIndex;\n                }\n                // butts up against top of candidate? (will happen if just intersected as well)\n                if (trackingEntryBottom === candidateCoord) {\n                    // accumulate the highest possible stackCnt of the trackingEntries that butt up\n                    stackCnt = Math.max(stackCnt, stackCnts[buildEntryKey(trackingEntry)] + 1);\n                }\n                lateralIndex += 1;\n            }\n        }\n        // the destination level will be after touchingEntry's level. find it\n        let destLevel = 0;\n        if (touchingEntry) {\n            destLevel = touchingLevel + 1;\n            while (destLevel < levelCnt && levelCoords[destLevel] < candidateCoord) {\n                destLevel += 1;\n            }\n        }\n        // if adding to an existing level, find where to insert\n        let destLateral = -1;\n        if (destLevel < levelCnt && levelCoords[destLevel] === candidateCoord) {\n            destLateral = binarySearch(entriesByLevel[destLevel], newEntry.span.end, getEntrySpanEnd)[0];\n        }\n        return {\n            touchingLevel,\n            touchingLateral,\n            touchingEntry,\n            stackCnt,\n            levelCoord: candidateCoord,\n            level: destLevel,\n            lateral: destLateral,\n        };\n    }\n    // sorted by levelCoord (lowest to highest)\n    toRects() {\n        let { entriesByLevel, levelCoords } = this;\n        let levelCnt = entriesByLevel.length;\n        let rects = [];\n        for (let level = 0; level < levelCnt; level += 1) {\n            let entries = entriesByLevel[level];\n            let levelCoord = levelCoords[level];\n            for (let entry of entries) {\n                rects.push(Object.assign(Object.assign({}, entry), { thickness: this.getEntryThickness(entry), levelCoord }));\n            }\n        }\n        return rects;\n    }\n}\nfunction getEntrySpanEnd(entry) {\n    return entry.span.end;\n}\nfunction buildEntryKey(entry) {\n    return entry.index + ':' + entry.span.start;\n}\n// returns groups with entries sorted by input order\nfunction groupIntersectingEntries(entries) {\n    let merges = [];\n    for (let entry of entries) {\n        let filteredMerges = [];\n        let hungryMerge = {\n            span: entry.span,\n            entries: [entry],\n        };\n        for (let merge of merges) {\n            if (intersectSpans(merge.span, hungryMerge.span)) {\n                hungryMerge = {\n                    entries: merge.entries.concat(hungryMerge.entries),\n                    span: joinSpans(merge.span, hungryMerge.span),\n                };\n            }\n            else {\n                filteredMerges.push(merge);\n            }\n        }\n        filteredMerges.push(hungryMerge);\n        merges = filteredMerges;\n    }\n    return merges;\n}\nfunction joinSpans(span0, span1) {\n    return {\n        start: Math.min(span0.start, span1.start),\n        end: Math.max(span0.end, span1.end),\n    };\n}\nfunction intersectSpans(span0, span1) {\n    let start = Math.max(span0.start, span1.start);\n    let end = Math.min(span0.end, span1.end);\n    if (start < end) {\n        return { start, end };\n    }\n    return null;\n}\n// general util\n// ---------------------------------------------------------------------------------------------------------------------\nfunction insertAt(arr, index, item) {\n    arr.splice(index, 0, item);\n}\nfunction binarySearch(a, searchVal, getItemVal) {\n    let startIndex = 0;\n    let endIndex = a.length; // exclusive\n    if (!endIndex || searchVal < getItemVal(a[startIndex])) { // no items OR before first item\n        return [0, 0];\n    }\n    if (searchVal > getItemVal(a[endIndex - 1])) { // after last item\n        return [endIndex, 0];\n    }\n    while (startIndex < endIndex) {\n        let middleIndex = Math.floor(startIndex + (endIndex - startIndex) / 2);\n        let middleVal = getItemVal(a[middleIndex]);\n        if (searchVal < middleVal) {\n            endIndex = middleIndex;\n        }\n        else if (searchVal > middleVal) {\n            startIndex = middleIndex + 1;\n        }\n        else { // equal!\n            return [middleIndex, 1];\n        }\n    }\n    return [startIndex, 0];\n}\n\n/*\nAn abstraction for a dragging interaction originating on an event.\nDoes higher-level things than PointerDragger, such as possibly:\n- a \"mirror\" that moves with the pointer\n- a minimum number of pixels or other criteria for a true drag to begin\n\nsubclasses must emit:\n- pointerdown\n- dragstart\n- dragmove\n- pointerup\n- dragend\n*/\nclass ElementDragging {\n    constructor(el, selector) {\n        this.emitter = new Emitter();\n    }\n    destroy() {\n    }\n    setMirrorIsVisible(bool) {\n        // optional if subclass doesn't want to support a mirror\n    }\n    setMirrorNeedsRevert(bool) {\n        // optional if subclass doesn't want to support a mirror\n    }\n    setAutoScrollEnabled(bool) {\n        // optional\n    }\n}\n\n// TODO: get rid of this in favor of options system,\n// tho it's really easy to access this globally rather than pass thru options.\nconst config = {};\n\n/*\nInformation about what will happen when an external element is dragged-and-dropped\nonto a calendar. Contains information for creating an event.\n*/\nconst DRAG_META_REFINERS = {\n    startTime: createDuration,\n    duration: createDuration,\n    create: Boolean,\n    sourceId: String,\n};\nfunction parseDragMeta(raw) {\n    let { refined, extra } = refineProps(raw, DRAG_META_REFINERS);\n    return {\n        startTime: refined.startTime || null,\n        duration: refined.duration || null,\n        create: refined.create != null ? refined.create : true,\n        sourceId: refined.sourceId,\n        leftoverProps: extra,\n    };\n}\n\n// Computes a default column header formatting string if `colFormat` is not explicitly defined\nfunction computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {\n    // if more than one week row, or if there are a lot of columns with not much space,\n    // put just the day numbers will be in each cell\n    if (!datesRepDistinctDays || dayCnt > 10) {\n        return createFormatter({ weekday: 'short' }); // \"Sat\"\n    }\n    if (dayCnt > 1) {\n        return createFormatter({ weekday: 'short', month: 'numeric', day: 'numeric', omitCommas: true }); // \"Sat 11/12\"\n    }\n    return createFormatter({ weekday: 'long' }); // \"Saturday\"\n}\n\nconst CLASS_NAME = 'fc-col-header-cell'; // do the cushion too? no\nfunction renderInner$1(renderProps) {\n    return renderProps.text;\n}\n\n// BAD name for this class now. used in the Header\nclass TableDateCell extends BaseComponent {\n    render() {\n        let { dateEnv, options, theme, viewApi } = this.context;\n        let { props } = this;\n        let { date, dateProfile } = props;\n        let dayMeta = getDateMeta(date, props.todayRange, null, dateProfile);\n        let classNames = [CLASS_NAME].concat(getDayClassNames(dayMeta, theme));\n        let text = dateEnv.format(date, props.dayHeaderFormat);\n        // if colCnt is 1, we are already in a day-view and don't need a navlink\n        let navLinkAttrs = (!dayMeta.isDisabled && props.colCnt > 1)\n            ? buildNavLinkAttrs(this.context, date)\n            : {};\n        let publicDate = dateEnv.toDate(date);\n        // workaround for Luxon (and maybe moment) returning prior-days when start-of-day\n        // in DST gap: https://github.com/fullcalendar/fullcalendar/issues/7633\n        if (dateEnv.namedTimeZoneImpl) {\n            publicDate = addMs(publicDate, 3600000); // add an hour\n        }\n        let renderProps = Object.assign(Object.assign(Object.assign({ date: publicDate, view: viewApi }, props.extraRenderProps), { text }), dayMeta);\n        return (createElement(ContentContainer, { elTag: \"th\", elClasses: classNames, elAttrs: Object.assign({ role: 'columnheader', colSpan: props.colSpan, 'data-date': !dayMeta.isDisabled ? formatDayString(date) : undefined }, props.extraDataAttrs), renderProps: renderProps, generatorName: \"dayHeaderContent\", customGenerator: options.dayHeaderContent, defaultGenerator: renderInner$1, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContainer) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" }, !dayMeta.isDisabled && (createElement(InnerContainer, { elTag: \"a\", elAttrs: navLinkAttrs, elClasses: [\n                'fc-col-header-cell-cushion',\n                props.isSticky && 'fc-sticky',\n            ] }))))));\n    }\n}\n\nconst WEEKDAY_FORMAT = createFormatter({ weekday: 'long' });\nclass TableDowCell extends BaseComponent {\n    render() {\n        let { props } = this;\n        let { dateEnv, theme, viewApi, options } = this.context;\n        let date = addDays(new Date(259200000), props.dow); // start with Sun, 04 Jan 1970 00:00:00 GMT\n        let dateMeta = {\n            dow: props.dow,\n            isDisabled: false,\n            isFuture: false,\n            isPast: false,\n            isToday: false,\n            isOther: false,\n        };\n        let text = dateEnv.format(date, props.dayHeaderFormat);\n        let renderProps = Object.assign(Object.assign(Object.assign(Object.assign({ // TODO: make this public?\n            date }, dateMeta), { view: viewApi }), props.extraRenderProps), { text });\n        return (createElement(ContentContainer, { elTag: \"th\", elClasses: [\n                CLASS_NAME,\n                ...getDayClassNames(dateMeta, theme),\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'columnheader', colSpan: props.colSpan }, props.extraDataAttrs), renderProps: renderProps, generatorName: \"dayHeaderContent\", customGenerator: options.dayHeaderContent, defaultGenerator: renderInner$1, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" },\n            createElement(InnerContent, { elTag: \"a\", elClasses: [\n                    'fc-col-header-cell-cushion',\n                    props.isSticky && 'fc-sticky',\n                ], elAttrs: {\n                    'aria-label': dateEnv.format(date, WEEKDAY_FORMAT),\n                } })))));\n    }\n}\n\nclass DayHeader extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.createDayHeaderFormatter = memoize(createDayHeaderFormatter);\n    }\n    render() {\n        let { context } = this;\n        let { dates, dateProfile, datesRepDistinctDays, renderIntro } = this.props;\n        let dayHeaderFormat = this.createDayHeaderFormatter(context.options.dayHeaderFormat, datesRepDistinctDays, dates.length);\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(\"tr\", { role: \"row\" },\n            renderIntro && renderIntro('day'),\n            dates.map((date) => (datesRepDistinctDays ? (createElement(TableDateCell, { key: date.toISOString(), date: date, dateProfile: dateProfile, todayRange: todayRange, colCnt: dates.length, dayHeaderFormat: dayHeaderFormat })) : (createElement(TableDowCell, { key: date.getUTCDay(), dow: date.getUTCDay(), dayHeaderFormat: dayHeaderFormat }))))))));\n    }\n}\nfunction createDayHeaderFormatter(explicitFormat, datesRepDistinctDays, dateCnt) {\n    return explicitFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt);\n}\n\nclass DaySeriesModel {\n    constructor(range, dateProfileGenerator) {\n        let date = range.start;\n        let { end } = range;\n        let indices = [];\n        let dates = [];\n        let dayIndex = -1;\n        while (date < end) { // loop each day from start to end\n            if (dateProfileGenerator.isHiddenDay(date)) {\n                indices.push(dayIndex + 0.5); // mark that it's between indices\n            }\n            else {\n                dayIndex += 1;\n                indices.push(dayIndex);\n                dates.push(date);\n            }\n            date = addDays(date, 1);\n        }\n        this.dates = dates;\n        this.indices = indices;\n        this.cnt = dates.length;\n    }\n    sliceRange(range) {\n        let firstIndex = this.getDateDayIndex(range.start); // inclusive first index\n        let lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index\n        let clippedFirstIndex = Math.max(0, firstIndex);\n        let clippedLastIndex = Math.min(this.cnt - 1, lastIndex);\n        // deal with in-between indices\n        clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell\n        clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell\n        if (clippedFirstIndex <= clippedLastIndex) {\n            return {\n                firstIndex: clippedFirstIndex,\n                lastIndex: clippedLastIndex,\n                isStart: firstIndex === clippedFirstIndex,\n                isEnd: lastIndex === clippedLastIndex,\n            };\n        }\n        return null;\n    }\n    // Given a date, returns its chronolocial cell-index from the first cell of the grid.\n    // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\n    // If before the first offset, returns a negative number.\n    // If after the last offset, returns an offset past the last cell offset.\n    // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\n    getDateDayIndex(date) {\n        let { indices } = this;\n        let dayOffset = Math.floor(diffDays(this.dates[0], date));\n        if (dayOffset < 0) {\n            return indices[0] - 1;\n        }\n        if (dayOffset >= indices.length) {\n            return indices[indices.length - 1] + 1;\n        }\n        return indices[dayOffset];\n    }\n}\n\nclass DayTableModel {\n    constructor(daySeries, breakOnWeeks) {\n        let { dates } = daySeries;\n        let daysPerRow;\n        let firstDay;\n        let rowCnt;\n        if (breakOnWeeks) {\n            // count columns until the day-of-week repeats\n            firstDay = dates[0].getUTCDay();\n            for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {\n                if (dates[daysPerRow].getUTCDay() === firstDay) {\n                    break;\n                }\n            }\n            rowCnt = Math.ceil(dates.length / daysPerRow);\n        }\n        else {\n            rowCnt = 1;\n            daysPerRow = dates.length;\n        }\n        this.rowCnt = rowCnt;\n        this.colCnt = daysPerRow;\n        this.daySeries = daySeries;\n        this.cells = this.buildCells();\n        this.headerDates = this.buildHeaderDates();\n    }\n    buildCells() {\n        let rows = [];\n        for (let row = 0; row < this.rowCnt; row += 1) {\n            let cells = [];\n            for (let col = 0; col < this.colCnt; col += 1) {\n                cells.push(this.buildCell(row, col));\n            }\n            rows.push(cells);\n        }\n        return rows;\n    }\n    buildCell(row, col) {\n        let date = this.daySeries.dates[row * this.colCnt + col];\n        return {\n            key: date.toISOString(),\n            date,\n        };\n    }\n    buildHeaderDates() {\n        let dates = [];\n        for (let col = 0; col < this.colCnt; col += 1) {\n            dates.push(this.cells[0][col].date);\n        }\n        return dates;\n    }\n    sliceRange(range) {\n        let { colCnt } = this;\n        let seriesSeg = this.daySeries.sliceRange(range);\n        let segs = [];\n        if (seriesSeg) {\n            let { firstIndex, lastIndex } = seriesSeg;\n            let index = firstIndex;\n            while (index <= lastIndex) {\n                let row = Math.floor(index / colCnt);\n                let nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);\n                segs.push({\n                    row,\n                    firstCol: index % colCnt,\n                    lastCol: (nextIndex - 1) % colCnt,\n                    isStart: seriesSeg.isStart && index === firstIndex,\n                    isEnd: seriesSeg.isEnd && (nextIndex - 1) === lastIndex,\n                });\n                index = nextIndex;\n            }\n        }\n        return segs;\n    }\n}\n\nclass Slicer {\n    constructor() {\n        this.sliceBusinessHours = memoize(this._sliceBusinessHours);\n        this.sliceDateSelection = memoize(this._sliceDateSpan);\n        this.sliceEventStore = memoize(this._sliceEventStore);\n        this.sliceEventDrag = memoize(this._sliceInteraction);\n        this.sliceEventResize = memoize(this._sliceInteraction);\n        this.forceDayIfListItem = false; // hack\n    }\n    sliceProps(props, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        let { eventUiBases } = props;\n        let eventSegs = this.sliceEventStore(props.eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs);\n        return {\n            dateSelectionSegs: this.sliceDateSelection(props.dateSelection, dateProfile, nextDayThreshold, eventUiBases, context, ...extraArgs),\n            businessHourSegs: this.sliceBusinessHours(props.businessHours, dateProfile, nextDayThreshold, context, ...extraArgs),\n            fgEventSegs: eventSegs.fg,\n            bgEventSegs: eventSegs.bg,\n            eventDrag: this.sliceEventDrag(props.eventDrag, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n            eventResize: this.sliceEventResize(props.eventResize, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),\n            eventSelection: props.eventSelection,\n        }; // TODO: give interactionSegs?\n    }\n    sliceNowDate(// does not memoize\n    date, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        return this._sliceDateSpan({ range: { start: date, end: addMs(date, 1) }, allDay: false }, // add 1 ms, protect against null range\n        dateProfile, nextDayThreshold, {}, context, ...extraArgs);\n    }\n    _sliceBusinessHours(businessHours, dateProfile, nextDayThreshold, context, ...extraArgs) {\n        if (!businessHours) {\n            return [];\n        }\n        return this._sliceEventStore(expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), context), {}, dateProfile, nextDayThreshold, ...extraArgs).bg;\n    }\n    _sliceEventStore(eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {\n        if (eventStore) {\n            let rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n            return {\n                bg: this.sliceEventRanges(rangeRes.bg, extraArgs),\n                fg: this.sliceEventRanges(rangeRes.fg, extraArgs),\n            };\n        }\n        return { bg: [], fg: [] };\n    }\n    _sliceInteraction(interaction, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {\n        if (!interaction) {\n            return null;\n        }\n        let rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n        return {\n            segs: this.sliceEventRanges(rangeRes.fg, extraArgs),\n            affectedInstances: interaction.affectedEvents.instances,\n            isEvent: interaction.isEvent,\n        };\n    }\n    _sliceDateSpan(dateSpan, dateProfile, nextDayThreshold, eventUiBases, context, ...extraArgs) {\n        if (!dateSpan) {\n            return [];\n        }\n        let activeRange = computeActiveRange(dateProfile, Boolean(nextDayThreshold));\n        let activeDateSpanRange = intersectRanges(dateSpan.range, activeRange);\n        if (activeDateSpanRange) {\n            dateSpan = Object.assign(Object.assign({}, dateSpan), { range: activeDateSpanRange });\n            let eventRange = fabricateEventRange(dateSpan, eventUiBases, context);\n            let segs = this.sliceRange(dateSpan.range, ...extraArgs);\n            for (let seg of segs) {\n                seg.eventRange = eventRange;\n            }\n            return segs;\n        }\n        return [];\n    }\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n    sliceEventRanges(eventRanges, extraArgs) {\n        let segs = [];\n        for (let eventRange of eventRanges) {\n            segs.push(...this.sliceEventRange(eventRange, extraArgs));\n        }\n        return segs;\n    }\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n    sliceEventRange(eventRange, extraArgs) {\n        let dateRange = eventRange.range;\n        // hack to make multi-day events that are being force-displayed as list-items to take up only one day\n        if (this.forceDayIfListItem && eventRange.ui.display === 'list-item') {\n            dateRange = {\n                start: dateRange.start,\n                end: addDays(dateRange.start, 1),\n            };\n        }\n        let segs = this.sliceRange(dateRange, ...extraArgs);\n        for (let seg of segs) {\n            seg.eventRange = eventRange;\n            seg.isStart = eventRange.isStart && seg.isStart;\n            seg.isEnd = eventRange.isEnd && seg.isEnd;\n        }\n        return segs;\n    }\n}\n/*\nfor incorporating slotMinTime/slotMaxTime if appropriate\nTODO: should be part of DateProfile!\nTimelineDateProfile already does this btw\n*/\nfunction computeActiveRange(dateProfile, isComponentAllDay) {\n    let range = dateProfile.activeRange;\n    if (isComponentAllDay) {\n        return range;\n    }\n    return {\n        start: addMs(range.start, dateProfile.slotMinTime.milliseconds),\n        end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5), // 864e5 = ms in a day\n    };\n}\n\n// high-level segmenting-aware tester functions\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isInteractionValid(interaction, dateProfile, context) {\n    let { instances } = interaction.mutatedEvents;\n    for (let instanceId in instances) {\n        if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {\n            return false;\n        }\n    }\n    return isNewPropsValid({ eventDrag: interaction }, context); // HACK: the eventDrag props is used for ALL interactions\n}\nfunction isDateSelectionValid(dateSelection, dateProfile, context) {\n    if (!rangeContainsRange(dateProfile.validRange, dateSelection.range)) {\n        return false;\n    }\n    return isNewPropsValid({ dateSelection }, context);\n}\nfunction isNewPropsValid(newProps, context) {\n    let calendarState = context.getCurrentData();\n    let props = Object.assign({ businessHours: calendarState.businessHours, dateSelection: '', eventStore: calendarState.eventStore, eventUiBases: calendarState.eventUiBases, eventSelection: '', eventDrag: null, eventResize: null }, newProps);\n    return (context.pluginHooks.isPropsValid || isPropsValid)(props, context);\n}\nfunction isPropsValid(state, context, dateSpanMeta = {}, filterConfig) {\n    if (state.eventDrag && !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n        return false;\n    }\n    if (state.dateSelection && !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)) {\n        return false;\n    }\n    return true;\n}\n// Moving Event Validation\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isInteractionPropsValid(state, context, dateSpanMeta, filterConfig) {\n    let currentState = context.getCurrentData();\n    let interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions\n    let subjectEventStore = interaction.mutatedEvents;\n    let subjectDefs = subjectEventStore.defs;\n    let subjectInstances = subjectEventStore.instances;\n    let subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ?\n        state.eventUiBases :\n        { '': currentState.selectionConfig });\n    if (filterConfig) {\n        subjectConfigs = mapHash(subjectConfigs, filterConfig);\n    }\n    // exclude the subject events. TODO: exclude defs too?\n    let otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances);\n    let otherDefs = otherEventStore.defs;\n    let otherInstances = otherEventStore.instances;\n    let otherConfigs = compileEventUis(otherDefs, state.eventUiBases);\n    for (let subjectInstanceId in subjectInstances) {\n        let subjectInstance = subjectInstances[subjectInstanceId];\n        let subjectRange = subjectInstance.range;\n        let subjectConfig = subjectConfigs[subjectInstance.defId];\n        let subjectDef = subjectDefs[subjectInstance.defId];\n        // constraint\n        if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, context)) {\n            return false;\n        }\n        // overlap\n        let { eventOverlap } = context.options;\n        let eventOverlapFunc = typeof eventOverlap === 'function' ? eventOverlap : null;\n        for (let otherInstanceId in otherInstances) {\n            let otherInstance = otherInstances[otherInstanceId];\n            // intersect! evaluate\n            if (rangesIntersect(subjectRange, otherInstance.range)) {\n                let otherOverlap = otherConfigs[otherInstance.defId].overlap;\n                // consider the other event's overlap. only do this if the subject event is a \"real\" event\n                if (otherOverlap === false && interaction.isEvent) {\n                    return false;\n                }\n                if (subjectConfig.overlap === false) {\n                    return false;\n                }\n                if (eventOverlapFunc && !eventOverlapFunc(new EventImpl(context, otherDefs[otherInstance.defId], otherInstance), // still event\n                new EventImpl(context, subjectDef, subjectInstance))) {\n                    return false;\n                }\n            }\n        }\n        // allow (a function)\n        let calendarEventStore = currentState.eventStore; // need global-to-calendar, not local to component (splittable)state\n        for (let subjectAllow of subjectConfig.allows) {\n            let subjectDateSpan = Object.assign(Object.assign({}, dateSpanMeta), { range: subjectInstance.range, allDay: subjectDef.allDay });\n            let origDef = calendarEventStore.defs[subjectDef.defId];\n            let origInstance = calendarEventStore.instances[subjectInstanceId];\n            let eventApi;\n            if (origDef) { // was previously in the calendar\n                eventApi = new EventImpl(context, origDef, origInstance);\n            }\n            else { // was an external event\n                eventApi = new EventImpl(context, subjectDef); // no instance, because had no dates\n            }\n            if (!subjectAllow(buildDateSpanApiWithContext(subjectDateSpan, context), eventApi)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n// Date Selection Validation\n// ------------------------------------------------------------------------------------------------------------------------\nfunction isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig) {\n    let relevantEventStore = state.eventStore;\n    let relevantDefs = relevantEventStore.defs;\n    let relevantInstances = relevantEventStore.instances;\n    let selection = state.dateSelection;\n    let selectionRange = selection.range;\n    let { selectionConfig } = context.getCurrentData();\n    if (filterConfig) {\n        selectionConfig = filterConfig(selectionConfig);\n    }\n    // constraint\n    if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, context)) {\n        return false;\n    }\n    // overlap\n    let { selectOverlap } = context.options;\n    let selectOverlapFunc = typeof selectOverlap === 'function' ? selectOverlap : null;\n    for (let relevantInstanceId in relevantInstances) {\n        let relevantInstance = relevantInstances[relevantInstanceId];\n        // intersect! evaluate\n        if (rangesIntersect(selectionRange, relevantInstance.range)) {\n            if (selectionConfig.overlap === false) {\n                return false;\n            }\n            if (selectOverlapFunc && !selectOverlapFunc(new EventImpl(context, relevantDefs[relevantInstance.defId], relevantInstance), null)) {\n                return false;\n            }\n        }\n    }\n    // allow (a function)\n    for (let selectionAllow of selectionConfig.allows) {\n        let fullDateSpan = Object.assign(Object.assign({}, dateSpanMeta), selection);\n        if (!selectionAllow(buildDateSpanApiWithContext(fullDateSpan, context), null)) {\n            return false;\n        }\n    }\n    return true;\n}\n// Constraint Utils\n// ------------------------------------------------------------------------------------------------------------------------\nfunction allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, context) {\n    for (let constraint of constraints) {\n        if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, context), subjectRange)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction constraintToRanges(constraint, subjectRange, // for expanding a recurring constraint, or expanding business hours\notherEventStore, // for if constraint is an even group ID\nbusinessHoursUnexpanded, // for if constraint is 'businessHours'\ncontext) {\n    if (constraint === 'businessHours') {\n        return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, context));\n    }\n    if (typeof constraint === 'string') { // an group ID\n        return eventStoreToRanges(filterEventStoreDefs(otherEventStore, (eventDef) => eventDef.groupId === constraint));\n    }\n    if (typeof constraint === 'object' && constraint) { // non-null object\n        return eventStoreToRanges(expandRecurring(constraint, subjectRange, context));\n    }\n    return []; // if it's false\n}\n// TODO: move to event-store file?\nfunction eventStoreToRanges(eventStore) {\n    let { instances } = eventStore;\n    let ranges = [];\n    for (let instanceId in instances) {\n        ranges.push(instances[instanceId].range);\n    }\n    return ranges;\n}\n// TODO: move to geom file?\nfunction anyRangesContainRange(outerRanges, innerRange) {\n    for (let outerRange of outerRanges) {\n        if (rangeContainsRange(outerRange, innerRange)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst VISIBLE_HIDDEN_RE = /^(visible|hidden)$/;\nclass Scroller extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleEl = (el) => {\n            this.el = el;\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { props } = this;\n        let { liquid, liquidIsAbsolute } = props;\n        let isAbsolute = liquid && liquidIsAbsolute;\n        let className = ['fc-scroller'];\n        if (liquid) {\n            if (liquidIsAbsolute) {\n                className.push('fc-scroller-liquid-absolute');\n            }\n            else {\n                className.push('fc-scroller-liquid');\n            }\n        }\n        return (createElement(\"div\", { ref: this.handleEl, className: className.join(' '), style: {\n                overflowX: props.overflowX,\n                overflowY: props.overflowY,\n                left: (isAbsolute && -(props.overcomeLeft || 0)) || '',\n                right: (isAbsolute && -(props.overcomeRight || 0)) || '',\n                bottom: (isAbsolute && -(props.overcomeBottom || 0)) || '',\n                marginLeft: (!isAbsolute && -(props.overcomeLeft || 0)) || '',\n                marginRight: (!isAbsolute && -(props.overcomeRight || 0)) || '',\n                marginBottom: (!isAbsolute && -(props.overcomeBottom || 0)) || '',\n                maxHeight: props.maxHeight || '',\n            } }, props.children));\n    }\n    needsXScrolling() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n            return false;\n        }\n        // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.\n        // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n        // inner-child margins and absolute positioning\n        let { el } = this;\n        let realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth();\n        let { children } = el;\n        for (let i = 0; i < children.length; i += 1) {\n            let childEl = children[i];\n            if (childEl.getBoundingClientRect().width > realClientWidth) {\n                return true;\n            }\n        }\n        return false;\n    }\n    needsYScrolling() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n            return false;\n        }\n        // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.\n        // much more reliable to see if children are taller than the scroller, even tho doesn't account for\n        // inner-child margins and absolute positioning\n        let { el } = this;\n        let realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth();\n        let { children } = el;\n        for (let i = 0; i < children.length; i += 1) {\n            let childEl = children[i];\n            if (childEl.getBoundingClientRect().height > realClientHeight) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getXScrollbarWidth() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {\n            return 0;\n        }\n        return this.el.offsetHeight - this.el.clientHeight; // only works because we guarantee no borders. TODO: add to CSS with important?\n    }\n    getYScrollbarWidth() {\n        if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {\n            return 0;\n        }\n        return this.el.offsetWidth - this.el.clientWidth; // only works because we guarantee no borders. TODO: add to CSS with important?\n    }\n}\n\n/*\nTODO: somehow infer OtherArgs from masterCallback?\nTODO: infer RefType from masterCallback if provided\n*/\nclass RefMap {\n    constructor(masterCallback) {\n        this.masterCallback = masterCallback;\n        this.currentMap = {};\n        this.depths = {};\n        this.callbackMap = {};\n        this.handleValue = (val, key) => {\n            let { depths, currentMap } = this;\n            let removed = false;\n            let added = false;\n            if (val !== null) {\n                // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore\n                removed = (key in currentMap);\n                currentMap[key] = val;\n                depths[key] = (depths[key] || 0) + 1;\n                added = true;\n            }\n            else {\n                depths[key] -= 1;\n                if (!depths[key]) {\n                    delete currentMap[key];\n                    delete this.callbackMap[key];\n                    removed = true;\n                }\n            }\n            if (this.masterCallback) {\n                if (removed) {\n                    this.masterCallback(null, String(key));\n                }\n                if (added) {\n                    this.masterCallback(val, String(key));\n                }\n            }\n        };\n    }\n    createRef(key) {\n        let refCallback = this.callbackMap[key];\n        if (!refCallback) {\n            refCallback = this.callbackMap[key] = (val) => {\n                this.handleValue(val, String(key));\n            };\n        }\n        return refCallback;\n    }\n    // TODO: check callers that don't care about order. should use getAll instead\n    // NOTE: this method has become less valuable now that we are encouraged to map order by some other index\n    // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and \"collect\"\n    collect(startIndex, endIndex, step) {\n        return collectFromHash(this.currentMap, startIndex, endIndex, step);\n    }\n    getAll() {\n        return hashValuesToArray(this.currentMap);\n    }\n}\n\nfunction computeShrinkWidth(chunkEls) {\n    let shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink');\n    let largestWidth = 0;\n    for (let shrinkCell of shrinkCells) {\n        largestWidth = Math.max(largestWidth, computeSmallestCellWidth(shrinkCell));\n    }\n    return Math.ceil(largestWidth); // <table> elements work best with integers. round up to ensure contents fits\n}\nfunction getSectionHasLiquidHeight(props, sectionConfig) {\n    return props.liquid && sectionConfig.liquid; // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)\n}\nfunction getAllowYScrolling(props, sectionConfig) {\n    return sectionConfig.maxHeight != null || // if its possible for the height to max out, we might need scrollbars\n        getSectionHasLiquidHeight(props, sectionConfig); // if the section is liquid height, it might condense enough to require scrollbars\n}\n// TODO: ONLY use `arg`. force out internal function to use same API\nfunction renderChunkContent(sectionConfig, chunkConfig, arg, isHeader) {\n    let { expandRows } = arg;\n    let content = typeof chunkConfig.content === 'function' ?\n        chunkConfig.content(arg) :\n        createElement('table', {\n            role: 'presentation',\n            className: [\n                chunkConfig.tableClassName,\n                sectionConfig.syncRowHeights ? 'fc-scrollgrid-sync-table' : '',\n            ].join(' '),\n            style: {\n                minWidth: arg.tableMinWidth,\n                width: arg.clientWidth,\n                height: expandRows ? arg.clientHeight : '', // css `height` on a <table> serves as a min-height\n            },\n        }, arg.tableColGroupNode, createElement(isHeader ? 'thead' : 'tbody', {\n            role: 'presentation',\n        }, typeof chunkConfig.rowContent === 'function'\n            ? chunkConfig.rowContent(arg)\n            : chunkConfig.rowContent));\n    return content;\n}\nfunction isColPropsEqual(cols0, cols1) {\n    return isArraysEqual(cols0, cols1, isPropsEqual);\n}\nfunction renderMicroColGroup(cols, shrinkWidth) {\n    let colNodes = [];\n    /*\n    for ColProps with spans, it would have been great to make a single <col span=\"\">\n    HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.\n    SOLUTION: making individual <col> elements makes Chrome behave.\n    */\n    for (let colProps of cols) {\n        let span = colProps.span || 1;\n        for (let i = 0; i < span; i += 1) {\n            colNodes.push(createElement(\"col\", { style: {\n                    width: colProps.width === 'shrink' ? sanitizeShrinkWidth(shrinkWidth) : (colProps.width || ''),\n                    minWidth: colProps.minWidth || '',\n                } }));\n        }\n    }\n    return createElement('colgroup', {}, ...colNodes);\n}\nfunction sanitizeShrinkWidth(shrinkWidth) {\n    /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth\n    4 accounts for 2 2-pixel borders. TODO: better solution? */\n    return shrinkWidth == null ? 4 : shrinkWidth;\n}\nfunction hasShrinkWidth(cols) {\n    for (let col of cols) {\n        if (col.width === 'shrink') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getScrollGridClassNames(liquid, context) {\n    let classNames = [\n        'fc-scrollgrid',\n        context.theme.getClass('table'),\n    ];\n    if (liquid) {\n        classNames.push('fc-scrollgrid-liquid');\n    }\n    return classNames;\n}\nfunction getSectionClassNames(sectionConfig, wholeTableVGrow) {\n    let classNames = [\n        'fc-scrollgrid-section',\n        `fc-scrollgrid-section-${sectionConfig.type}`,\n        sectionConfig.className, // used?\n    ];\n    if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {\n        classNames.push('fc-scrollgrid-section-liquid');\n    }\n    if (sectionConfig.isSticky) {\n        classNames.push('fc-scrollgrid-section-sticky');\n    }\n    return classNames;\n}\nfunction renderScrollShim(arg) {\n    return (createElement(\"div\", { className: \"fc-scrollgrid-sticky-shim\", style: {\n            width: arg.clientWidth,\n            minWidth: arg.tableMinWidth,\n        } }));\n}\nfunction getStickyHeaderDates(options) {\n    let { stickyHeaderDates } = options;\n    if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {\n        stickyHeaderDates = options.height === 'auto' || options.viewHeight === 'auto';\n    }\n    return stickyHeaderDates;\n}\nfunction getStickyFooterScrollbar(options) {\n    let { stickyFooterScrollbar } = options;\n    if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {\n        stickyFooterScrollbar = options.height === 'auto' || options.viewHeight === 'auto';\n    }\n    return stickyFooterScrollbar;\n}\n\nclass SimpleScrollGrid extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.processCols = memoize((a) => a, isColPropsEqual); // so we get same `cols` props every time\n        // yucky to memoize VNodes, but much more efficient for consumers\n        this.renderMicroColGroup = memoize(renderMicroColGroup);\n        this.scrollerRefs = new RefMap();\n        this.scrollerElRefs = new RefMap(this._handleScrollerEl.bind(this));\n        this.state = {\n            shrinkWidth: null,\n            forceYScrollbars: false,\n            scrollerClientWidths: {},\n            scrollerClientHeights: {},\n        };\n        // TODO: can do a really simple print-view. dont need to join rows\n        this.handleSizing = () => {\n            this.safeSetState(Object.assign({ shrinkWidth: this.computeShrinkWidth() }, this.computeScrollerDims()));\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let sectionConfigs = props.sections || [];\n        let cols = this.processCols(props.cols);\n        let microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth);\n        let classNames = getScrollGridClassNames(props.liquid, context);\n        if (props.collapsibleWidth) {\n            classNames.push('fc-scrollgrid-collapsible');\n        }\n        // TODO: make DRY\n        let configCnt = sectionConfigs.length;\n        let configI = 0;\n        let currentConfig;\n        let headSectionNodes = [];\n        let bodySectionNodes = [];\n        let footSectionNodes = [];\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {\n            headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));\n            configI += 1;\n        }\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {\n            bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode, false));\n            configI += 1;\n        }\n        while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {\n            footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));\n            configI += 1;\n        }\n        // firefox bug: when setting height on table and there is a thead or tfoot,\n        // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)\n        // use getCanVGrowWithinCell as a way to detect table-stupid firefox.\n        // if so, use a simpler dom structure, jam everything into a lone tbody.\n        let isBuggy = !getCanVGrowWithinCell();\n        const roleAttrs = { role: 'rowgroup' };\n        return createElement('table', {\n            role: 'grid',\n            className: classNames.join(' '),\n            style: { height: props.height },\n        }, Boolean(!isBuggy && headSectionNodes.length) && createElement('thead', roleAttrs, ...headSectionNodes), Boolean(!isBuggy && bodySectionNodes.length) && createElement('tbody', roleAttrs, ...bodySectionNodes), Boolean(!isBuggy && footSectionNodes.length) && createElement('tfoot', roleAttrs, ...footSectionNodes), isBuggy && createElement('tbody', roleAttrs, ...headSectionNodes, ...bodySectionNodes, ...footSectionNodes));\n    }\n    renderSection(sectionConfig, microColGroupNode, isHeader) {\n        if ('outerContent' in sectionConfig) {\n            return (createElement(Fragment, { key: sectionConfig.key }, sectionConfig.outerContent));\n        }\n        return (createElement(\"tr\", { key: sectionConfig.key, role: \"presentation\", className: getSectionClassNames(sectionConfig, this.props.liquid).join(' ') }, this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk, isHeader)));\n    }\n    renderChunkTd(sectionConfig, microColGroupNode, chunkConfig, isHeader) {\n        if ('outerContent' in chunkConfig) {\n            return chunkConfig.outerContent;\n        }\n        let { props } = this;\n        let { forceYScrollbars, scrollerClientWidths, scrollerClientHeights } = this.state;\n        let needsYScrolling = getAllowYScrolling(props, sectionConfig); // TODO: do lazily. do in section config?\n        let isLiquid = getSectionHasLiquidHeight(props, sectionConfig);\n        // for `!props.liquid` - is WHOLE scrollgrid natural height?\n        // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars\n        let overflowY = !props.liquid ? 'visible' :\n            forceYScrollbars ? 'scroll' :\n                !needsYScrolling ? 'hidden' :\n                    'auto';\n        let sectionKey = sectionConfig.key;\n        let content = renderChunkContent(sectionConfig, chunkConfig, {\n            tableColGroupNode: microColGroupNode,\n            tableMinWidth: '',\n            clientWidth: (!props.collapsibleWidth && scrollerClientWidths[sectionKey] !== undefined) ? scrollerClientWidths[sectionKey] : null,\n            clientHeight: scrollerClientHeights[sectionKey] !== undefined ? scrollerClientHeights[sectionKey] : null,\n            expandRows: sectionConfig.expandRows,\n            syncRowHeights: false,\n            rowSyncHeights: [],\n            reportRowHeightChange: () => { },\n        }, isHeader);\n        return createElement(isHeader ? 'th' : 'td', {\n            ref: chunkConfig.elRef,\n            role: 'presentation',\n        }, createElement(\"div\", { className: `fc-scroller-harness${isLiquid ? ' fc-scroller-harness-liquid' : ''}` },\n            createElement(Scroller, { ref: this.scrollerRefs.createRef(sectionKey), elRef: this.scrollerElRefs.createRef(sectionKey), overflowY: overflowY, overflowX: !props.liquid ? 'visible' : 'hidden' /* natural height? */, maxHeight: sectionConfig.maxHeight, liquid: isLiquid, liquidIsAbsolute // because its within a harness\n                : true }, content)));\n    }\n    _handleScrollerEl(scrollerEl, key) {\n        let section = getSectionByKey(this.props.sections, key);\n        if (section) {\n            setRef(section.chunk.scrollerElRef, scrollerEl);\n        }\n    }\n    componentDidMount() {\n        this.handleSizing();\n        this.context.addResizeHandler(this.handleSizing);\n    }\n    componentDidUpdate() {\n        // TODO: need better solution when state contains non-sizing things\n        this.handleSizing();\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleSizing);\n    }\n    computeShrinkWidth() {\n        return hasShrinkWidth(this.props.cols)\n            ? computeShrinkWidth(this.scrollerElRefs.getAll())\n            : 0;\n    }\n    computeScrollerDims() {\n        let scrollbarWidth = getScrollbarWidths();\n        let { scrollerRefs, scrollerElRefs } = this;\n        let forceYScrollbars = false;\n        let scrollerClientWidths = {};\n        let scrollerClientHeights = {};\n        for (let sectionKey in scrollerRefs.currentMap) {\n            let scroller = scrollerRefs.currentMap[sectionKey];\n            if (scroller && scroller.needsYScrolling()) {\n                forceYScrollbars = true;\n                break;\n            }\n        }\n        for (let section of this.props.sections) {\n            let sectionKey = section.key;\n            let scrollerEl = scrollerElRefs.currentMap[sectionKey];\n            if (scrollerEl) {\n                let harnessEl = scrollerEl.parentNode; // TODO: weird way to get this. need harness b/c doesn't include table borders\n                scrollerClientWidths[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().width - (forceYScrollbars\n                    ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future\n                    : 0));\n                scrollerClientHeights[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().height);\n            }\n        }\n        return { forceYScrollbars, scrollerClientWidths, scrollerClientHeights };\n    }\n}\nSimpleScrollGrid.addStateEquality({\n    scrollerClientWidths: isPropsEqual,\n    scrollerClientHeights: isPropsEqual,\n});\nfunction getSectionByKey(sections, key) {\n    for (let section of sections) {\n        if (section.key === key) {\n            return section;\n        }\n    }\n    return null;\n}\n\nclass EventContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.handleEl = (el) => {\n            this.el = el;\n            if (el) {\n                setElSeg(el, this.props.seg);\n            }\n        };\n    }\n    render() {\n        const { props, context } = this;\n        const { options } = context;\n        const { seg } = props;\n        const { eventRange } = seg;\n        const { ui } = eventRange;\n        const renderProps = {\n            event: new EventImpl(context, eventRange.def, eventRange.instance),\n            view: context.viewApi,\n            timeText: props.timeText,\n            textColor: ui.textColor,\n            backgroundColor: ui.backgroundColor,\n            borderColor: ui.borderColor,\n            isDraggable: !props.disableDragging && computeSegDraggable(seg, context),\n            isStartResizable: !props.disableResizing && computeSegStartResizable(seg, context),\n            isEndResizable: !props.disableResizing && computeSegEndResizable(seg),\n            isMirror: Boolean(props.isDragging || props.isResizing || props.isDateSelecting),\n            isStart: Boolean(seg.isStart),\n            isEnd: Boolean(seg.isEnd),\n            isPast: Boolean(props.isPast),\n            isFuture: Boolean(props.isFuture),\n            isToday: Boolean(props.isToday),\n            isSelected: Boolean(props.isSelected),\n            isDragging: Boolean(props.isDragging),\n            isResizing: Boolean(props.isResizing),\n        };\n        return (createElement(ContentContainer, Object.assign({}, props /* contains children */, { elRef: this.handleEl, elClasses: [\n                ...getEventClassNames(renderProps),\n                ...seg.eventRange.ui.classNames,\n                ...(props.elClasses || []),\n            ], renderProps: renderProps, generatorName: \"eventContent\", customGenerator: options.eventContent, defaultGenerator: props.defaultGenerator, classNameGenerator: options.eventClassNames, didMount: options.eventDidMount, willUnmount: options.eventWillUnmount })));\n    }\n    componentDidUpdate(prevProps) {\n        if (this.el && this.props.seg !== prevProps.seg) {\n            setElSeg(this.el, this.props.seg);\n        }\n    }\n}\n\n// should not be a purecomponent\nclass StandardEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let { ui } = seg.eventRange;\n        let timeFormat = options.eventTimeFormat || props.defaultTimeFormat;\n        let timeText = buildSegTimeText(seg, timeFormat, context, props.defaultDisplayEventTime, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props /* includes elRef */, { elTag: \"a\", elStyle: {\n                borderColor: ui.borderColor,\n                backgroundColor: ui.backgroundColor,\n            }, elAttrs: getSegAnchorAttrs(seg, context), defaultGenerator: renderInnerContent$1, timeText: timeText }), (InnerContent, eventContentArg) => (createElement(Fragment, null,\n            createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-event-main'], elStyle: { color: eventContentArg.textColor } }),\n            Boolean(eventContentArg.isStartResizable) && (createElement(\"div\", { className: \"fc-event-resizer fc-event-resizer-start\" })),\n            Boolean(eventContentArg.isEndResizable) && (createElement(\"div\", { className: \"fc-event-resizer fc-event-resizer-end\" }))))));\n    }\n}\nfunction renderInnerContent$1(innerProps) {\n    return (createElement(\"div\", { className: \"fc-event-main-frame\" },\n        innerProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, innerProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title-container\" },\n            createElement(\"div\", { className: \"fc-event-title fc-sticky\" }, innerProps.event.title || createElement(Fragment, null, \"\\u00A0\")))));\n}\n\nconst NowIndicatorContainer = (props) => (createElement(ViewContextType.Consumer, null, (context) => {\n    let { options } = context;\n    let renderProps = {\n        isAxis: props.isAxis,\n        date: context.dateEnv.toDate(props.date),\n        view: context.viewApi,\n    };\n    return (createElement(ContentContainer, Object.assign({}, props /* includes children */, { elTag: props.elTag || 'div', renderProps: renderProps, generatorName: \"nowIndicatorContent\", customGenerator: options.nowIndicatorContent, classNameGenerator: options.nowIndicatorClassNames, didMount: options.nowIndicatorDidMount, willUnmount: options.nowIndicatorWillUnmount })));\n}));\n\nconst DAY_NUM_FORMAT = createFormatter({ day: 'numeric' });\nclass DayCellContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    }\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let renderProps = this.refineRenderProps({\n            date: props.date,\n            dateProfile: props.dateProfile,\n            todayRange: props.todayRange,\n            isMonthStart: props.isMonthStart || false,\n            showDayNumber: props.showDayNumber,\n            extraRenderProps: props.extraRenderProps,\n            viewApi: context.viewApi,\n            dateEnv: context.dateEnv,\n            monthStartFormat: options.monthStartFormat,\n        });\n        return (createElement(ContentContainer, Object.assign({}, props /* includes children */, { elClasses: [\n                ...getDayClassNames(renderProps, context.theme),\n                ...(props.elClasses || []),\n            ], elAttrs: Object.assign(Object.assign({}, props.elAttrs), (renderProps.isDisabled ? {} : { 'data-date': formatDayString(props.date) })), renderProps: renderProps, generatorName: \"dayCellContent\", customGenerator: options.dayCellContent, defaultGenerator: props.defaultGenerator, classNameGenerator: \n            // don't use custom classNames if disabled\n            renderProps.isDisabled ? undefined : options.dayCellClassNames, didMount: options.dayCellDidMount, willUnmount: options.dayCellWillUnmount })));\n    }\n}\nfunction hasCustomDayCellContent(options) {\n    return Boolean(options.dayCellContent || hasCustomRenderingHandler('dayCellContent', options));\n}\nfunction refineRenderProps(raw) {\n    let { date, dateEnv, dateProfile, isMonthStart } = raw;\n    let dayMeta = getDateMeta(date, raw.todayRange, null, dateProfile);\n    let dayNumberText = raw.showDayNumber ? (dateEnv.format(date, isMonthStart ? raw.monthStartFormat : DAY_NUM_FORMAT)) : '';\n    return Object.assign(Object.assign(Object.assign({ date: dateEnv.toDate(date), view: raw.viewApi }, dayMeta), { isMonthStart,\n        dayNumberText }), raw.extraRenderProps);\n}\n\nclass BgEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        let { seg } = props;\n        return (createElement(EventContainer, { elTag: \"div\", elClasses: ['fc-bg-event'], elStyle: { backgroundColor: seg.eventRange.ui.backgroundColor }, defaultGenerator: renderInnerContent, seg: seg, timeText: \"\", isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday, disableDragging: true, disableResizing: true }));\n    }\n}\nfunction renderInnerContent(props) {\n    let { title } = props.event;\n    return title && (createElement(\"div\", { className: \"fc-event-title\" }, props.event.title));\n}\nfunction renderFill(fillType) {\n    return (createElement(\"div\", { className: `fc-${fillType}` }));\n}\n\nconst WeekNumberContainer = (props) => (createElement(ViewContextType.Consumer, null, (context) => {\n    let { dateEnv, options } = context;\n    let { date } = props;\n    let format = options.weekNumberFormat || props.defaultFormat;\n    let num = dateEnv.computeWeekNumber(date); // TODO: somehow use for formatting as well?\n    let text = dateEnv.format(date, format);\n    let renderProps = { num, text, date };\n    return (createElement(ContentContainer // why isn't WeekNumberContentArg being auto-detected?\n    , Object.assign({}, props /* includes children */, { renderProps: renderProps, generatorName: \"weekNumberContent\", customGenerator: options.weekNumberContent, defaultGenerator: renderInner, classNameGenerator: options.weekNumberClassNames, didMount: options.weekNumberDidMount, willUnmount: options.weekNumberWillUnmount })));\n}));\nfunction renderInner(innerProps) {\n    return innerProps.text;\n}\n\nconst PADDING_FROM_VIEWPORT = 10;\nclass Popover extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            titleId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            this.rootEl = el;\n            if (this.props.elRef) {\n                setRef(this.props.elRef, el);\n            }\n        };\n        // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n        this.handleDocumentMouseDown = (ev) => {\n            // only hide the popover if the click happened outside the popover\n            const target = getEventTargetViaRoot(ev);\n            if (!this.rootEl.contains(target)) {\n                this.handleCloseClick();\n            }\n        };\n        this.handleDocumentKeyDown = (ev) => {\n            if (ev.key === 'Escape') {\n                this.handleCloseClick();\n            }\n        };\n        this.handleCloseClick = () => {\n            let { onClose } = this.props;\n            if (onClose) {\n                onClose();\n            }\n        };\n    }\n    render() {\n        let { theme, options } = this.context;\n        let { props, state } = this;\n        let classNames = [\n            'fc-popover',\n            theme.getClass('popover'),\n        ].concat(props.extraClassNames || []);\n        return createPortal(createElement(\"div\", Object.assign({}, props.extraAttrs, { id: props.id, className: classNames.join(' '), \"aria-labelledby\": state.titleId, ref: this.handleRootEl }),\n            createElement(\"div\", { className: 'fc-popover-header ' + theme.getClass('popoverHeader') },\n                createElement(\"span\", { className: \"fc-popover-title\", id: state.titleId }, props.title),\n                createElement(\"span\", { className: 'fc-popover-close ' + theme.getIconClass('close'), title: options.closeHint, onClick: this.handleCloseClick })),\n            createElement(\"div\", { className: 'fc-popover-body ' + theme.getClass('popoverContent') }, props.children)), props.parentEl);\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleDocumentMouseDown);\n        document.addEventListener('keydown', this.handleDocumentKeyDown);\n        this.updateSize();\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleDocumentMouseDown);\n        document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    }\n    updateSize() {\n        let { isRtl } = this.context;\n        let { alignmentEl, alignGridTop } = this.props;\n        let { rootEl } = this;\n        let alignmentRect = computeClippedClientRect(alignmentEl);\n        if (alignmentRect) {\n            let popoverDims = rootEl.getBoundingClientRect();\n            // position relative to viewport\n            let popoverTop = alignGridTop\n                ? elementClosest(alignmentEl, '.fc-scrollgrid').getBoundingClientRect().top\n                : alignmentRect.top;\n            let popoverLeft = isRtl ? alignmentRect.right - popoverDims.width : alignmentRect.left;\n            // constrain\n            popoverTop = Math.max(popoverTop, PADDING_FROM_VIEWPORT);\n            popoverLeft = Math.min(popoverLeft, document.documentElement.clientWidth - PADDING_FROM_VIEWPORT - popoverDims.width);\n            popoverLeft = Math.max(popoverLeft, PADDING_FROM_VIEWPORT);\n            let origin = rootEl.offsetParent.getBoundingClientRect();\n            applyStyle(rootEl, {\n                top: popoverTop - origin.top,\n                left: popoverLeft - origin.left,\n            });\n        }\n    }\n}\n\nclass MorePopover extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.handleRootEl = (rootEl) => {\n            this.rootEl = rootEl;\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    useEventCenter: false,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { options, dateEnv } = this.context;\n        let { props } = this;\n        let { startDate, todayRange, dateProfile } = props;\n        let title = dateEnv.format(startDate, options.dayPopoverFormat);\n        return (createElement(DayCellContainer, { elRef: this.handleRootEl, date: startDate, dateProfile: dateProfile, todayRange: todayRange }, (InnerContent, renderProps, elAttrs) => (createElement(Popover, { elRef: elAttrs.ref, id: props.id, title: title, extraClassNames: ['fc-more-popover'].concat(elAttrs.className || []), extraAttrs: elAttrs /* TODO: make these time-based when not whole-day? */, parentEl: props.parentEl, alignmentEl: props.alignmentEl, alignGridTop: props.alignGridTop, onClose: props.onClose },\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-more-popover-misc'] })),\n            props.children))));\n    }\n    queryHit(positionLeft, positionTop, elWidth, elHeight) {\n        let { rootEl, props } = this;\n        if (positionLeft >= 0 && positionLeft < elWidth &&\n            positionTop >= 0 && positionTop < elHeight) {\n            return {\n                dateProfile: props.dateProfile,\n                dateSpan: Object.assign({ allDay: !props.forceTimed, range: {\n                        start: props.startDate,\n                        end: props.endDate,\n                    } }, props.extraDateSpan),\n                dayEl: rootEl,\n                rect: {\n                    left: 0,\n                    top: 0,\n                    right: elWidth,\n                    bottom: elHeight,\n                },\n                layer: 1, // important when comparing with hits from other components\n            };\n        }\n        return null;\n    }\n}\n\nclass MoreLinkContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isPopoverOpen: false,\n            popoverId: getUniqueDomId(),\n        };\n        this.handleLinkEl = (linkEl) => {\n            this.linkEl = linkEl;\n            if (this.props.elRef) {\n                setRef(this.props.elRef, linkEl);\n            }\n        };\n        this.handleClick = (ev) => {\n            let { props, context } = this;\n            let { moreLinkClick } = context.options;\n            let date = computeRange(props).start;\n            function buildPublicSeg(seg) {\n                let { def, instance, range } = seg.eventRange;\n                return {\n                    event: new EventImpl(context, def, instance),\n                    start: context.dateEnv.toDate(range.start),\n                    end: context.dateEnv.toDate(range.end),\n                    isStart: seg.isStart,\n                    isEnd: seg.isEnd,\n                };\n            }\n            if (typeof moreLinkClick === 'function') {\n                moreLinkClick = moreLinkClick({\n                    date,\n                    allDay: Boolean(props.allDayDate),\n                    allSegs: props.allSegs.map(buildPublicSeg),\n                    hiddenSegs: props.hiddenSegs.map(buildPublicSeg),\n                    jsEvent: ev,\n                    view: context.viewApi,\n                });\n            }\n            if (!moreLinkClick || moreLinkClick === 'popover') {\n                this.setState({ isPopoverOpen: true });\n            }\n            else if (typeof moreLinkClick === 'string') { // a view name\n                context.calendarApi.zoomTo(date, moreLinkClick);\n            }\n        };\n        this.handlePopoverClose = () => {\n            this.setState({ isPopoverOpen: false });\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(ViewContextType.Consumer, null, (context) => {\n            let { viewApi, options, calendarApi } = context;\n            let { moreLinkText } = options;\n            let { moreCnt } = props;\n            let range = computeRange(props);\n            let text = typeof moreLinkText === 'function' // TODO: eventually use formatWithOrdinals\n                ? moreLinkText.call(calendarApi, moreCnt)\n                : `+${moreCnt} ${moreLinkText}`;\n            let hint = formatWithOrdinals(options.moreLinkHint, [moreCnt], text);\n            let renderProps = {\n                num: moreCnt,\n                shortText: `+${moreCnt}`,\n                text,\n                view: viewApi,\n            };\n            return (createElement(Fragment, null,\n                Boolean(props.moreCnt) && (createElement(ContentContainer, { elTag: props.elTag || 'a', elRef: this.handleLinkEl, elClasses: [\n                        ...(props.elClasses || []),\n                        'fc-more-link',\n                    ], elStyle: props.elStyle, elAttrs: Object.assign(Object.assign(Object.assign({}, props.elAttrs), createAriaClickAttrs(this.handleClick)), { title: hint, 'aria-expanded': state.isPopoverOpen, 'aria-controls': state.isPopoverOpen ? state.popoverId : '' }), renderProps: renderProps, generatorName: \"moreLinkContent\", customGenerator: options.moreLinkContent, defaultGenerator: props.defaultGenerator || renderMoreLinkInner, classNameGenerator: options.moreLinkClassNames, didMount: options.moreLinkDidMount, willUnmount: options.moreLinkWillUnmount }, props.children)),\n                state.isPopoverOpen && (createElement(MorePopover, { id: state.popoverId, startDate: range.start, endDate: range.end, dateProfile: props.dateProfile, todayRange: props.todayRange, extraDateSpan: props.extraDateSpan, parentEl: this.parentEl, alignmentEl: props.alignmentElRef ?\n                        props.alignmentElRef.current :\n                        this.linkEl, alignGridTop: props.alignGridTop, forceTimed: props.forceTimed, onClose: this.handlePopoverClose }, props.popoverContent()))));\n        }));\n    }\n    componentDidMount() {\n        this.updateParentEl();\n    }\n    componentDidUpdate() {\n        this.updateParentEl();\n    }\n    updateParentEl() {\n        if (this.linkEl) {\n            this.parentEl = elementClosest(this.linkEl, '.fc-view-harness');\n        }\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.text;\n}\nfunction computeRange(props) {\n    if (props.allDayDate) {\n        return {\n            start: props.allDayDate,\n            end: addDays(props.allDayDate, 1),\n        };\n    }\n    let { hiddenSegs } = props;\n    return {\n        start: computeEarliestSegStart(hiddenSegs),\n        end: computeLatestSegEnd(hiddenSegs),\n    };\n}\nfunction computeEarliestSegStart(segs) {\n    return segs.reduce(pickEarliestStart).eventRange.range.start;\n}\nfunction pickEarliestStart(seg0, seg1) {\n    return seg0.eventRange.range.start < seg1.eventRange.range.start ? seg0 : seg1;\n}\nfunction computeLatestSegEnd(segs) {\n    return segs.reduce(pickLatestEnd).eventRange.range.end;\n}\nfunction pickLatestEnd(seg0, seg1) {\n    return seg0.eventRange.range.end > seg1.eventRange.range.end ? seg0 : seg1;\n}\n\nclass Store {\n    constructor() {\n        this.handlers = [];\n    }\n    set(value) {\n        this.currentValue = value;\n        for (let handler of this.handlers) {\n            handler(value);\n        }\n    }\n    subscribe(handler) {\n        this.handlers.push(handler);\n        if (this.currentValue !== undefined) {\n            handler(this.currentValue);\n        }\n    }\n}\n\n/*\nSubscribers will get a LIST of CustomRenderings\n*/\nclass CustomRenderingStore extends Store {\n    constructor() {\n        super(...arguments);\n        this.map = new Map();\n    }\n    // for consistent order\n    handle(customRendering) {\n        const { map } = this;\n        let updated = false;\n        if (customRendering.isActive) {\n            map.set(customRendering.id, customRendering);\n            updated = true;\n        }\n        else if (map.has(customRendering.id)) {\n            map.delete(customRendering.id);\n            updated = true;\n        }\n        if (updated) {\n            this.set(map);\n        }\n    }\n}\n\nexport { listenBySelector as $, memoizeObjArg as A, BaseComponent as B, ContentContainer as C, DelayedRunner as D, isPropsEqual as E, Emitter as F, rangeContainsMarker as G, createEmptyEventStore as H, reduceEventStore as I, rezoneEventStoreDates as J, mergeRawOptions as K, BASE_OPTION_REFINERS as L, CALENDAR_LISTENER_REFINERS as M, CALENDAR_OPTION_REFINERS as N, COMPLEX_OPTION_COMPARATORS as O, VIEW_OPTION_REFINERS as P, DateEnv as Q, DateProfileGenerator as R, createEventUi as S, Theme as T, parseBusinessHours as U, ViewContextType as V, setRef as W, Interaction as X, getElSeg as Y, elementClosest as Z, EventImpl as _, mapHash as a, preventDefault as a$, listenToHoverBySelector as a0, PureComponent as a1, buildViewContext as a2, getUniqueDomId as a3, parseInteractionSettings as a4, interactionSettingsStore as a5, NowTimer as a6, CalendarImpl as a7, flushSync as a8, CalendarRoot as a9, memoizeArraylike as aA, memoizeHashlike as aB, intersectRects as aC, pointInsideRect as aD, constrainPoint as aE, getRectCenter as aF, diffPoints as aG, translateRect as aH, compareObjs as aI, collectFromHash as aJ, findElements as aK, findDirectChildren as aL, removeElement as aM, applyStyle as aN, elementMatches as aO, getEventTargetViaRoot as aP, parseClassNames as aQ, getCanVGrowWithinCell as aR, mergeEventStores as aS, getRelevantEvents as aT, eventTupleToStore as aU, combineEventUis as aV, Splitter as aW, getDayClassNames as aX, getDateMeta as aY, getSlotClassNames as aZ, buildNavLinkAttrs as a_, RenderId as aa, ensureElHasStyles as ab, applyStyleProp as ac, sliceEventStore as ad, JsonRequestError as ae, createContext as af, refineProps as ag, createEventInstance as ah, parseEventDef as ai, refineEventDef as aj, padStart as ak, isInt as al, parseFieldSpecs as am, compareByFieldSpecs as an, flexibleCompare as ao, preventSelection as ap, allowSelection as aq, preventContextMenu as ar, allowContextMenu as as, compareNumbers as at, enableCursor as au, disableCursor as av, computeVisibleDayRange as aw, isMultiDayRange as ax, diffDates as ay, removeExact as az, buildViewClassNames as b, renderMicroColGroup as b$, whenTransitionDone as b0, computeInnerRect as b1, computeEdges as b2, getClippingParents as b3, computeRect as b4, rangesEqual as b5, rangesIntersect as b6, rangeContainsRange as b7, PositionCache as b8, ScrollController as b9, getEntrySpanEnd as bA, binarySearch as bB, groupIntersectingEntries as bC, intersectSpans as bD, interactionSettingsToStore as bE, ElementDragging as bF, config as bG, parseDragMeta as bH, DayHeader as bI, computeFallbackHeaderFormat as bJ, TableDateCell as bK, TableDowCell as bL, DaySeriesModel as bM, hasBgRendering as bN, buildSegTimeText as bO, sortEventSegs as bP, getSegMeta as bQ, buildEventRangeKey as bR, getSegAnchorAttrs as bS, DayTableModel as bT, Slicer as bU, applyMutationToEventStore as bV, isPropsValid as bW, isInteractionValid as bX, isDateSelectionValid as bY, SimpleScrollGrid as bZ, hasShrinkWidth as b_, ElementScrollController as ba, WindowScrollController as bb, DateComponent as bc, isDateSpansEqual as bd, addMs as be, addWeeks as bf, diffWeeks as bg, diffWholeWeeks as bh, diffDayAndTime as bi, diffDays as bj, isValidDate as bk, asCleanDays as bl, multiplyDuration as bm, addDurations as bn, asRoughMinutes as bo, asRoughSeconds as bp, asRoughMs as bq, wholeDivideDurations as br, formatIsoTimeString as bs, formatDayString as bt, buildIsoString as bu, formatIsoMonthStr as bv, NamedTimeZoneImpl as bw, parse as bx, SegHierarchy as by, buildEntryKey as bz, greatestDurationDenominator as c, getScrollGridClassNames as c0, getSectionClassNames as c1, getSectionHasLiquidHeight as c2, getAllowYScrolling as c3, renderChunkContent as c4, computeShrinkWidth as c5, sanitizeShrinkWidth as c6, isColPropsEqual as c7, renderScrollShim as c8, getStickyFooterScrollbar as c9, getStickyHeaderDates as ca, Scroller as cb, getScrollbarWidths as cc, RefMap as cd, getIsRtlScrollbarOnLeft as ce, ScrollResponder as cf, StandardEvent as cg, NowIndicatorContainer as ch, DayCellContainer as ci, hasCustomDayCellContent as cj, EventContainer as ck, renderFill as cl, BgEvent as cm, WeekNumberContainer as cn, MoreLinkContainer as co, computeEarliestSegStart as cp, ViewContainer as cq, triggerDateSelect as cr, getDefaultEventEnd as cs, injectStyles as ct, buildElAttrs as cu, CustomRenderingStore as cv, createDuration as d, BASE_OPTION_DEFAULTS as e, arrayToHash as f, guid as g, filterHash as h, isArraysEqual as i, buildEventSourceRefiners as j, formatWithOrdinals as k, buildRangeApiWithTimeZone as l, mergeProps as m, identity as n, intersectRanges as o, parseEventSource as p, startOfDay as q, requestJson as r, subtractDurations as s, addDays as t, unpromisify as u, hashValuesToArray as v, buildEventApis as w, createFormatter as x, diffWholeDays as y, memoize as z };\n","import { m as mergeProps, g as guid, i as isArraysEqual, T as Theme, a as mapHash, B as BaseComponent, V as ViewContextType, C as ContentContainer, b as buildViewClassNames, c as greatestDurationDenominator, d as createDuration, e as BASE_OPTION_DEFAULTS, f as arrayToHash, h as filterHash, j as buildEventSourceRefiners, p as parseEventSource, k as formatWithOrdinals, u as unpromisify, l as buildRangeApiWithTimeZone, n as identity, r as requestJson, s as subtractDurations, o as intersectRanges, q as startOfDay, t as addDays, v as hashValuesToArray, w as buildEventApis, D as DelayedRunner, x as createFormatter, y as diffWholeDays, z as memoize, A as memoizeObjArg, E as isPropsEqual, F as Emitter, G as rangeContainsMarker, H as createEmptyEventStore, I as reduceEventStore, J as rezoneEventStoreDates, K as mergeRawOptions, L as BASE_OPTION_REFINERS, M as CALENDAR_LISTENER_REFINERS, N as CALENDAR_OPTION_REFINERS, O as COMPLEX_OPTION_COMPARATORS, P as VIEW_OPTION_REFINERS, Q as DateEnv, R as DateProfileGenerator, S as createEventUi, U as parseBusinessHours, W as setRef, X as Interaction, Y as getElSeg, Z as elementClosest, _ as EventImpl, $ as listenBySelector, a0 as listenToHoverBySelector, a1 as PureComponent, a2 as buildViewContext, a3 as getUniqueDomId, a4 as parseInteractionSettings, a5 as interactionSettingsStore, a6 as NowTimer, a7 as CalendarImpl, a8 as flushSync, a9 as CalendarRoot, aa as RenderId, ab as ensureElHasStyles, ac as applyStyleProp, ad as sliceEventStore } from './internal-common.js';\nexport { ae as JsonRequestError } from './internal-common.js';\nimport { createElement, createRef, Fragment, render } from 'preact';\nimport 'preact/compat';\n\nconst globalLocales = [];\n\nconst MINIMAL_RAW_EN_LOCALE = {\n    code: 'en',\n    week: {\n        dow: 0,\n        doy: 4, // 4 days need to be within the year to be considered the first week\n    },\n    direction: 'ltr',\n    buttonText: {\n        prev: 'prev',\n        next: 'next',\n        prevYear: 'prev year',\n        nextYear: 'next year',\n        year: 'year',\n        today: 'today',\n        month: 'month',\n        week: 'week',\n        day: 'day',\n        list: 'list',\n    },\n    weekText: 'W',\n    weekTextLong: 'Week',\n    closeHint: 'Close',\n    timeHint: 'Time',\n    eventHint: 'Event',\n    allDayText: 'all-day',\n    moreLinkText: 'more',\n    noEventsText: 'No events to display',\n};\nconst RAW_EN_LOCALE = Object.assign(Object.assign({}, MINIMAL_RAW_EN_LOCALE), { \n    // Includes things we don't want other locales to inherit,\n    // things that derive from other translatable strings.\n    buttonHints: {\n        prev: 'Previous $0',\n        next: 'Next $0',\n        today(buttonText, unit) {\n            return (unit === 'day')\n                ? 'Today'\n                : `This ${buttonText}`;\n        },\n    }, viewHint: '$0 view', navLinkHint: 'Go to $0', moreLinkHint(eventCnt) {\n        return `Show ${eventCnt} more event${eventCnt === 1 ? '' : 's'}`;\n    } });\nfunction organizeRawLocales(explicitRawLocales) {\n    let defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';\n    let allRawLocales = globalLocales.concat(explicitRawLocales);\n    let rawLocaleMap = {\n        en: RAW_EN_LOCALE,\n    };\n    for (let rawLocale of allRawLocales) {\n        rawLocaleMap[rawLocale.code] = rawLocale;\n    }\n    return {\n        map: rawLocaleMap,\n        defaultCode,\n    };\n}\nfunction buildLocale(inputSingular, available) {\n    if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {\n        return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);\n    }\n    return queryLocale(inputSingular, available);\n}\nfunction queryLocale(codeArg, available) {\n    let codes = [].concat(codeArg || []); // will convert to array\n    let raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;\n    return parseLocale(codeArg, codes, raw);\n}\nfunction queryRawLocale(codes, available) {\n    for (let i = 0; i < codes.length; i += 1) {\n        let parts = codes[i].toLocaleLowerCase().split('-');\n        for (let j = parts.length; j > 0; j -= 1) {\n            let simpleId = parts.slice(0, j).join('-');\n            if (available[simpleId]) {\n                return available[simpleId];\n            }\n        }\n    }\n    return null;\n}\nfunction parseLocale(codeArg, codes, raw) {\n    let merged = mergeProps([MINIMAL_RAW_EN_LOCALE, raw], ['buttonText']);\n    delete merged.code; // don't want this part of the options\n    let { week } = merged;\n    delete merged.week;\n    return {\n        codeArg,\n        codes,\n        week,\n        simpleNumberFormat: new Intl.NumberFormat(codeArg),\n        options: merged,\n    };\n}\n\n// TODO: easier way to add new hooks? need to update a million things\nfunction createPlugin(input) {\n    return {\n        id: guid(),\n        name: input.name,\n        premiumReleaseDate: input.premiumReleaseDate ? new Date(input.premiumReleaseDate) : undefined,\n        deps: input.deps || [],\n        reducers: input.reducers || [],\n        isLoadingFuncs: input.isLoadingFuncs || [],\n        contextInit: [].concat(input.contextInit || []),\n        eventRefiners: input.eventRefiners || {},\n        eventDefMemberAdders: input.eventDefMemberAdders || [],\n        eventSourceRefiners: input.eventSourceRefiners || {},\n        isDraggableTransformers: input.isDraggableTransformers || [],\n        eventDragMutationMassagers: input.eventDragMutationMassagers || [],\n        eventDefMutationAppliers: input.eventDefMutationAppliers || [],\n        dateSelectionTransformers: input.dateSelectionTransformers || [],\n        datePointTransforms: input.datePointTransforms || [],\n        dateSpanTransforms: input.dateSpanTransforms || [],\n        views: input.views || {},\n        viewPropsTransformers: input.viewPropsTransformers || [],\n        isPropsValid: input.isPropsValid || null,\n        externalDefTransforms: input.externalDefTransforms || [],\n        viewContainerAppends: input.viewContainerAppends || [],\n        eventDropTransformers: input.eventDropTransformers || [],\n        componentInteractions: input.componentInteractions || [],\n        calendarInteractions: input.calendarInteractions || [],\n        themeClasses: input.themeClasses || {},\n        eventSourceDefs: input.eventSourceDefs || [],\n        cmdFormatter: input.cmdFormatter,\n        recurringTypes: input.recurringTypes || [],\n        namedTimeZonedImpl: input.namedTimeZonedImpl,\n        initialView: input.initialView || '',\n        elementDraggingImpl: input.elementDraggingImpl,\n        optionChangeHandlers: input.optionChangeHandlers || {},\n        scrollGridImpl: input.scrollGridImpl || null,\n        listenerRefiners: input.listenerRefiners || {},\n        optionRefiners: input.optionRefiners || {},\n        propSetHandlers: input.propSetHandlers || {},\n    };\n}\nfunction buildPluginHooks(pluginDefs, globalDefs) {\n    let currentPluginIds = {};\n    let hooks = {\n        premiumReleaseDate: undefined,\n        reducers: [],\n        isLoadingFuncs: [],\n        contextInit: [],\n        eventRefiners: {},\n        eventDefMemberAdders: [],\n        eventSourceRefiners: {},\n        isDraggableTransformers: [],\n        eventDragMutationMassagers: [],\n        eventDefMutationAppliers: [],\n        dateSelectionTransformers: [],\n        datePointTransforms: [],\n        dateSpanTransforms: [],\n        views: {},\n        viewPropsTransformers: [],\n        isPropsValid: null,\n        externalDefTransforms: [],\n        viewContainerAppends: [],\n        eventDropTransformers: [],\n        componentInteractions: [],\n        calendarInteractions: [],\n        themeClasses: {},\n        eventSourceDefs: [],\n        cmdFormatter: null,\n        recurringTypes: [],\n        namedTimeZonedImpl: null,\n        initialView: '',\n        elementDraggingImpl: null,\n        optionChangeHandlers: {},\n        scrollGridImpl: null,\n        listenerRefiners: {},\n        optionRefiners: {},\n        propSetHandlers: {},\n    };\n    function addDefs(defs) {\n        for (let def of defs) {\n            const pluginName = def.name;\n            const currentId = currentPluginIds[pluginName];\n            if (currentId === undefined) {\n                currentPluginIds[pluginName] = def.id;\n                addDefs(def.deps);\n                hooks = combineHooks(hooks, def);\n            }\n            else if (currentId !== def.id) {\n                // different ID than the one already added\n                console.warn(`Duplicate plugin '${pluginName}'`);\n            }\n        }\n    }\n    if (pluginDefs) {\n        addDefs(pluginDefs);\n    }\n    addDefs(globalDefs);\n    return hooks;\n}\nfunction buildBuildPluginHooks() {\n    let currentOverrideDefs = [];\n    let currentGlobalDefs = [];\n    let currentHooks;\n    return (overrideDefs, globalDefs) => {\n        if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {\n            currentHooks = buildPluginHooks(overrideDefs, globalDefs);\n        }\n        currentOverrideDefs = overrideDefs;\n        currentGlobalDefs = globalDefs;\n        return currentHooks;\n    };\n}\nfunction combineHooks(hooks0, hooks1) {\n    return {\n        premiumReleaseDate: compareOptionalDates(hooks0.premiumReleaseDate, hooks1.premiumReleaseDate),\n        reducers: hooks0.reducers.concat(hooks1.reducers),\n        isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),\n        contextInit: hooks0.contextInit.concat(hooks1.contextInit),\n        eventRefiners: Object.assign(Object.assign({}, hooks0.eventRefiners), hooks1.eventRefiners),\n        eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),\n        eventSourceRefiners: Object.assign(Object.assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),\n        isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),\n        eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),\n        eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),\n        dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),\n        datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),\n        dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),\n        views: Object.assign(Object.assign({}, hooks0.views), hooks1.views),\n        viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),\n        isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,\n        externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),\n        viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),\n        eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),\n        calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),\n        componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),\n        themeClasses: Object.assign(Object.assign({}, hooks0.themeClasses), hooks1.themeClasses),\n        eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),\n        cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,\n        recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),\n        namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,\n        initialView: hooks0.initialView || hooks1.initialView,\n        elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,\n        optionChangeHandlers: Object.assign(Object.assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),\n        scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,\n        listenerRefiners: Object.assign(Object.assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),\n        optionRefiners: Object.assign(Object.assign({}, hooks0.optionRefiners), hooks1.optionRefiners),\n        propSetHandlers: Object.assign(Object.assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers),\n    };\n}\nfunction compareOptionalDates(date0, date1) {\n    if (date0 === undefined) {\n        return date1;\n    }\n    if (date1 === undefined) {\n        return date0;\n    }\n    return new Date(Math.max(date0.valueOf(), date1.valueOf()));\n}\n\nclass StandardTheme extends Theme {\n}\nStandardTheme.prototype.classes = {\n    root: 'fc-theme-standard',\n    tableCellShaded: 'fc-cell-shaded',\n    buttonGroup: 'fc-button-group',\n    button: 'fc-button fc-button-primary',\n    buttonActive: 'fc-button-active',\n};\nStandardTheme.prototype.baseIconClass = 'fc-icon';\nStandardTheme.prototype.iconClasses = {\n    close: 'fc-icon-x',\n    prev: 'fc-icon-chevron-left',\n    next: 'fc-icon-chevron-right',\n    prevYear: 'fc-icon-chevrons-left',\n    nextYear: 'fc-icon-chevrons-right',\n};\nStandardTheme.prototype.rtlIconClasses = {\n    prev: 'fc-icon-chevron-right',\n    next: 'fc-icon-chevron-left',\n    prevYear: 'fc-icon-chevrons-right',\n    nextYear: 'fc-icon-chevrons-left',\n};\nStandardTheme.prototype.iconOverrideOption = 'buttonIcons'; // TODO: make TS-friendly\nStandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';\nStandardTheme.prototype.iconOverridePrefix = 'fc-icon-';\n\nfunction compileViewDefs(defaultConfigs, overrideConfigs) {\n    let hash = {};\n    let viewType;\n    for (viewType in defaultConfigs) {\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n    for (viewType in overrideConfigs) {\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n    return hash;\n}\nfunction ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    if (hash[viewType]) {\n        return hash[viewType];\n    }\n    let viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    if (viewDef) {\n        hash[viewType] = viewDef;\n    }\n    return viewDef;\n}\nfunction buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    let defaultConfig = defaultConfigs[viewType];\n    let overrideConfig = overrideConfigs[viewType];\n    let queryProp = (name) => ((defaultConfig && defaultConfig[name] !== null) ? defaultConfig[name] :\n        ((overrideConfig && overrideConfig[name] !== null) ? overrideConfig[name] : null));\n    let theComponent = queryProp('component');\n    let superType = queryProp('superType');\n    let superDef = null;\n    if (superType) {\n        if (superType === viewType) {\n            throw new Error('Can\\'t have a custom view type that references itself');\n        }\n        superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);\n    }\n    if (!theComponent && superDef) {\n        theComponent = superDef.component;\n    }\n    if (!theComponent) {\n        return null; // don't throw a warning, might be settings for a single-unit view\n    }\n    return {\n        type: viewType,\n        component: theComponent,\n        defaults: Object.assign(Object.assign({}, (superDef ? superDef.defaults : {})), (defaultConfig ? defaultConfig.rawOptions : {})),\n        overrides: Object.assign(Object.assign({}, (superDef ? superDef.overrides : {})), (overrideConfig ? overrideConfig.rawOptions : {})),\n    };\n}\n\nfunction parseViewConfigs(inputs) {\n    return mapHash(inputs, parseViewConfig);\n}\nfunction parseViewConfig(input) {\n    let rawOptions = typeof input === 'function' ?\n        { component: input } :\n        input;\n    let { component } = rawOptions;\n    if (rawOptions.content) {\n        // TODO: remove content/classNames/didMount/etc from options?\n        component = createViewHookComponent(rawOptions);\n    }\n    else if (component && !(component.prototype instanceof BaseComponent)) {\n        // WHY?: people were using `component` property for `content`\n        // TODO: converge on one setting name\n        component = createViewHookComponent(Object.assign(Object.assign({}, rawOptions), { content: component }));\n    }\n    return {\n        superType: rawOptions.type,\n        component: component,\n        rawOptions, // includes type and component too :(\n    };\n}\nfunction createViewHookComponent(options) {\n    return (viewProps) => (createElement(ViewContextType.Consumer, null, (context) => (createElement(ContentContainer, { elTag: \"div\", elClasses: buildViewClassNames(context.viewSpec), renderProps: Object.assign(Object.assign({}, viewProps), { nextDayThreshold: context.options.nextDayThreshold }), generatorName: undefined, customGenerator: options.content, classNameGenerator: options.classNames, didMount: options.didMount, willUnmount: options.willUnmount }))));\n}\n\nfunction buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\n    let defaultConfigs = parseViewConfigs(defaultInputs);\n    let overrideConfigs = parseViewConfigs(optionOverrides.views);\n    let viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);\n    return mapHash(viewDefs, (viewDef) => buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults));\n}\nfunction buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\n    let durationInput = viewDef.overrides.duration ||\n        viewDef.defaults.duration ||\n        dynamicOptionOverrides.duration ||\n        optionOverrides.duration;\n    let duration = null;\n    let durationUnit = '';\n    let singleUnit = '';\n    let singleUnitOverrides = {};\n    if (durationInput) {\n        duration = createDurationCached(durationInput);\n        if (duration) { // valid?\n            let denom = greatestDurationDenominator(duration);\n            durationUnit = denom.unit;\n            if (denom.value === 1) {\n                singleUnit = durationUnit;\n                singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};\n            }\n        }\n    }\n    let queryButtonText = (optionsSubset) => {\n        let buttonTextMap = optionsSubset.buttonText || {};\n        let buttonTextKey = viewDef.defaults.buttonTextKey;\n        if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {\n            return buttonTextMap[buttonTextKey];\n        }\n        if (buttonTextMap[viewDef.type] != null) {\n            return buttonTextMap[viewDef.type];\n        }\n        if (buttonTextMap[singleUnit] != null) {\n            return buttonTextMap[singleUnit];\n        }\n        return null;\n    };\n    let queryButtonTitle = (optionsSubset) => {\n        let buttonHints = optionsSubset.buttonHints || {};\n        let buttonKey = viewDef.defaults.buttonTextKey; // use same key as text\n        if (buttonKey != null && buttonHints[buttonKey] != null) {\n            return buttonHints[buttonKey];\n        }\n        if (buttonHints[viewDef.type] != null) {\n            return buttonHints[viewDef.type];\n        }\n        if (buttonHints[singleUnit] != null) {\n            return buttonHints[singleUnit];\n        }\n        return null;\n    };\n    return {\n        type: viewDef.type,\n        component: viewDef.component,\n        duration,\n        durationUnit,\n        singleUnit,\n        optionDefaults: viewDef.defaults,\n        optionOverrides: Object.assign(Object.assign({}, singleUnitOverrides), viewDef.overrides),\n        buttonTextOverride: queryButtonText(dynamicOptionOverrides) ||\n            queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence\n            viewDef.overrides.buttonText,\n        buttonTextDefault: queryButtonText(localeDefaults) ||\n            viewDef.defaults.buttonText ||\n            queryButtonText(BASE_OPTION_DEFAULTS) ||\n            viewDef.type,\n        // not DRY\n        buttonTitleOverride: queryButtonTitle(dynamicOptionOverrides) ||\n            queryButtonTitle(optionOverrides) ||\n            viewDef.overrides.buttonHint,\n        buttonTitleDefault: queryButtonTitle(localeDefaults) ||\n            viewDef.defaults.buttonHint ||\n            queryButtonTitle(BASE_OPTION_DEFAULTS),\n        // will eventually fall back to buttonText\n    };\n}\n// hack to get memoization working\nlet durationInputMap = {};\nfunction createDurationCached(durationInput) {\n    let json = JSON.stringify(durationInput);\n    let res = durationInputMap[json];\n    if (res === undefined) {\n        res = createDuration(durationInput);\n        durationInputMap[json] = res;\n    }\n    return res;\n}\n\nfunction reduceViewType(viewType, action) {\n    switch (action.type) {\n        case 'CHANGE_VIEW_TYPE':\n            viewType = action.viewType;\n    }\n    return viewType;\n}\n\nfunction reduceCurrentDate(currentDate, action) {\n    switch (action.type) {\n        case 'CHANGE_DATE':\n            return action.dateMarker;\n        default:\n            return currentDate;\n    }\n}\n// should be initialized once and stay constant\n// this will change too\nfunction getInitialDate(options, dateEnv, nowManager) {\n    let initialDateInput = options.initialDate;\n    // compute the initial ambig-timezone date\n    if (initialDateInput != null) {\n        return dateEnv.createMarker(initialDateInput);\n    }\n    return nowManager.getDateMarker();\n}\n\nfunction reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {\n    switch (action.type) {\n        case 'SET_OPTION':\n            return Object.assign(Object.assign({}, dynamicOptionOverrides), { [action.optionName]: action.rawOptionValue });\n        default:\n            return dynamicOptionOverrides;\n    }\n}\n\nfunction reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {\n    let dp;\n    switch (action.type) {\n        case 'CHANGE_VIEW_TYPE':\n            return dateProfileGenerator.build(action.dateMarker || currentDate);\n        case 'CHANGE_DATE':\n            return dateProfileGenerator.build(action.dateMarker);\n        case 'PREV':\n            dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);\n            if (dp.isValid) {\n                return dp;\n            }\n            break;\n        case 'NEXT':\n            dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);\n            if (dp.isValid) {\n                return dp;\n            }\n            break;\n    }\n    return currentDateProfile;\n}\n\nfunction initEventSources(calendarOptions, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null;\n    return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);\n}\nfunction reduceEventSources(eventSources, action, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    switch (action.type) {\n        case 'ADD_EVENT_SOURCES': // already parsed\n            return addSources(eventSources, action.sources, activeRange, context);\n        case 'REMOVE_EVENT_SOURCE':\n            return removeSource(eventSources, action.sourceId);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            if (dateProfile) {\n                return fetchDirtySources(eventSources, activeRange, context);\n            }\n            return eventSources;\n        case 'FETCH_EVENT_SOURCES':\n            return fetchSourcesByIds(eventSources, action.sourceIds ? // why no type?\n                arrayToHash(action.sourceIds) :\n                excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);\n        case 'RECEIVE_EVENTS':\n        case 'RECEIVE_EVENT_ERROR':\n            return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);\n        case 'REMOVE_ALL_EVENT_SOURCES':\n            return {};\n        default:\n            return eventSources;\n    }\n}\nfunction reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);\n}\nfunction computeEventSourcesLoading(eventSources) {\n    for (let sourceId in eventSources) {\n        if (eventSources[sourceId].isFetching) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction addSources(eventSourceHash, sources, fetchRange, context) {\n    let hash = {};\n    for (let source of sources) {\n        hash[source.sourceId] = source;\n    }\n    if (fetchRange) {\n        hash = fetchDirtySources(hash, fetchRange, context);\n    }\n    return Object.assign(Object.assign({}, eventSourceHash), hash);\n}\nfunction removeSource(eventSourceHash, sourceId) {\n    return filterHash(eventSourceHash, (eventSource) => eventSource.sourceId !== sourceId);\n}\nfunction fetchDirtySources(sourceHash, fetchRange, context) {\n    return fetchSourcesByIds(sourceHash, filterHash(sourceHash, (eventSource) => isSourceDirty(eventSource, fetchRange, context)), fetchRange, false, context);\n}\nfunction isSourceDirty(eventSource, fetchRange, context) {\n    if (!doesSourceNeedRange(eventSource, context)) {\n        return !eventSource.latestFetchId;\n    }\n    return !context.options.lazyFetching ||\n        !eventSource.fetchRange ||\n        eventSource.isFetching || // always cancel outdated in-progress fetches\n        fetchRange.start < eventSource.fetchRange.start ||\n        fetchRange.end > eventSource.fetchRange.end;\n}\nfunction fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {\n    let nextSources = {};\n    for (let sourceId in prevSources) {\n        let source = prevSources[sourceId];\n        if (sourceIdHash[sourceId]) {\n            nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);\n        }\n        else {\n            nextSources[sourceId] = source;\n        }\n    }\n    return nextSources;\n}\nfunction fetchSource(eventSource, fetchRange, isRefetch, context) {\n    let { options, calendarApi } = context;\n    let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];\n    let fetchId = guid();\n    sourceDef.fetch({\n        eventSource,\n        range: fetchRange,\n        isRefetch,\n        context,\n    }, (res) => {\n        let { rawEvents } = res;\n        if (options.eventSourceSuccess) {\n            rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        if (eventSource.success) {\n            rawEvents = eventSource.success.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENTS',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            rawEvents,\n        });\n    }, (error) => {\n        let errorHandled = false;\n        if (options.eventSourceFailure) {\n            options.eventSourceFailure.call(calendarApi, error);\n            errorHandled = true;\n        }\n        if (eventSource.failure) {\n            eventSource.failure(error);\n            errorHandled = true;\n        }\n        if (!errorHandled) {\n            console.warn(error.message, error);\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENT_ERROR',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            error,\n        });\n    });\n    return Object.assign(Object.assign({}, eventSource), { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {\n    let eventSource = sourceHash[sourceId];\n    if (eventSource && // not already removed\n        fetchId === eventSource.latestFetchId) {\n        return Object.assign(Object.assign({}, sourceHash), { [sourceId]: Object.assign(Object.assign({}, eventSource), { isFetching: false, fetchRange }) });\n    }\n    return sourceHash;\n}\nfunction excludeStaticSources(eventSources, context) {\n    return filterHash(eventSources, (eventSource) => doesSourceNeedRange(eventSource, context));\n}\nfunction parseInitialSources(rawOptions, context) {\n    let refiners = buildEventSourceRefiners(context);\n    let rawSources = [].concat(rawOptions.eventSources || []);\n    let sources = []; // parsed\n    if (rawOptions.initialEvents) {\n        rawSources.unshift(rawOptions.initialEvents);\n    }\n    if (rawOptions.events) {\n        rawSources.unshift(rawOptions.events);\n    }\n    for (let rawSource of rawSources) {\n        let source = parseEventSource(rawSource, context, refiners);\n        if (source) {\n            sources.push(source);\n        }\n    }\n    return sources;\n}\nfunction doesSourceNeedRange(eventSource, context) {\n    let defs = context.pluginHooks.eventSourceDefs;\n    return !defs[eventSource.sourceDefId].ignoreRange;\n}\n\nfunction reduceDateSelection(currentSelection, action) {\n    switch (action.type) {\n        case 'UNSELECT_DATES':\n            return null;\n        case 'SELECT_DATES':\n            return action.selection;\n        default:\n            return currentSelection;\n    }\n}\n\nfunction reduceSelectedEvent(currentInstanceId, action) {\n    switch (action.type) {\n        case 'UNSELECT_EVENT':\n            return '';\n        case 'SELECT_EVENT':\n            return action.eventInstanceId;\n        default:\n            return currentInstanceId;\n    }\n}\n\nfunction reduceEventDrag(currentDrag, action) {\n    let newDrag;\n    switch (action.type) {\n        case 'UNSET_EVENT_DRAG':\n            return null;\n        case 'SET_EVENT_DRAG':\n            newDrag = action.state;\n            return {\n                affectedEvents: newDrag.affectedEvents,\n                mutatedEvents: newDrag.mutatedEvents,\n                isEvent: newDrag.isEvent,\n            };\n        default:\n            return currentDrag;\n    }\n}\n\nfunction reduceEventResize(currentResize, action) {\n    let newResize;\n    switch (action.type) {\n        case 'UNSET_EVENT_RESIZE':\n            return null;\n        case 'SET_EVENT_RESIZE':\n            newResize = action.state;\n            return {\n                affectedEvents: newResize.affectedEvents,\n                mutatedEvents: newResize.mutatedEvents,\n                isEvent: newResize.isEvent,\n            };\n        default:\n            return currentResize;\n    }\n}\n\nfunction parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\n    let header = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\n    let footer = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\n    return { header, footer };\n}\nfunction parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\n    let sectionWidgets = {};\n    let viewsWithButtons = [];\n    let hasTitle = false;\n    for (let sectionName in sectionStrHash) {\n        let sectionStr = sectionStrHash[sectionName];\n        let sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi);\n        sectionWidgets[sectionName] = sectionRes.widgets;\n        viewsWithButtons.push(...sectionRes.viewsWithButtons);\n        hasTitle = hasTitle || sectionRes.hasTitle;\n    }\n    return { sectionWidgets, viewsWithButtons, hasTitle };\n}\n/*\nBAD: querying icons and text here. should be done at render time\n*/\nfunction parseSection(sectionStr, calendarOptions, // defaults+overrides, then refined\ncalendarOptionOverrides, // overrides only!, unrefined :(\ntheme, viewSpecs, calendarApi) {\n    let isRtl = calendarOptions.direction === 'rtl';\n    let calendarCustomButtons = calendarOptions.customButtons || {};\n    let calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};\n    let calendarButtonText = calendarOptions.buttonText || {};\n    let calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {};\n    let calendarButtonHints = calendarOptions.buttonHints || {};\n    let sectionSubstrs = sectionStr ? sectionStr.split(' ') : [];\n    let viewsWithButtons = [];\n    let hasTitle = false;\n    let widgets = sectionSubstrs.map((buttonGroupStr) => (buttonGroupStr.split(',').map((buttonName) => {\n        if (buttonName === 'title') {\n            hasTitle = true;\n            return { buttonName };\n        }\n        let customButtonProps;\n        let viewSpec;\n        let buttonClick;\n        let buttonIcon; // only one of these will be set\n        let buttonText; // \"\n        let buttonHint;\n        // ^ for the title=\"\" attribute, for accessibility\n        if ((customButtonProps = calendarCustomButtons[buttonName])) {\n            buttonClick = (ev) => {\n                if (customButtonProps.click) {\n                    customButtonProps.click.call(ev.target, ev, ev.target); // TODO: use Calendar this context?\n                }\n            };\n            (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = customButtonProps.text);\n            buttonHint = customButtonProps.hint || customButtonProps.text;\n        }\n        else if ((viewSpec = viewSpecs[buttonName])) {\n            viewsWithButtons.push(buttonName);\n            buttonClick = () => {\n                calendarApi.changeView(buttonName);\n            };\n            (buttonText = viewSpec.buttonTextOverride) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = viewSpec.buttonTextDefault);\n            let textFallback = viewSpec.buttonTextOverride ||\n                viewSpec.buttonTextDefault;\n            buttonHint = formatWithOrdinals(viewSpec.buttonTitleOverride ||\n                viewSpec.buttonTitleDefault ||\n                calendarOptions.viewHint, [textFallback, buttonName], // view-name = buttonName\n            textFallback);\n        }\n        else if (calendarApi[buttonName]) { // a calendarApi method\n            buttonClick = () => {\n                calendarApi[buttonName]();\n            };\n            (buttonText = calendarButtonTextOverrides[buttonName]) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = calendarButtonText[buttonName]); // everything else is considered default\n            if (buttonName === 'prevYear' || buttonName === 'nextYear') {\n                let prevOrNext = buttonName === 'prevYear' ? 'prev' : 'next';\n                buttonHint = formatWithOrdinals(calendarButtonHintOverrides[prevOrNext] ||\n                    calendarButtonHints[prevOrNext], [\n                    calendarButtonText.year || 'year',\n                    'year',\n                ], calendarButtonText[buttonName]);\n            }\n            else {\n                buttonHint = (navUnit) => formatWithOrdinals(calendarButtonHintOverrides[buttonName] ||\n                    calendarButtonHints[buttonName], [\n                    calendarButtonText[navUnit] || navUnit,\n                    navUnit,\n                ], calendarButtonText[buttonName]);\n            }\n        }\n        return { buttonName, buttonClick, buttonIcon, buttonText, buttonHint };\n    })));\n    return { widgets, viewsWithButtons, hasTitle };\n}\n\n// always represents the current view. otherwise, it'd need to change value every time date changes\nclass ViewImpl {\n    constructor(type, getCurrentData, dateEnv) {\n        this.type = type;\n        this.getCurrentData = getCurrentData;\n        this.dateEnv = dateEnv;\n    }\n    get calendar() {\n        return this.getCurrentData().calendarApi;\n    }\n    get title() {\n        return this.getCurrentData().viewTitle;\n    }\n    get activeStart() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);\n    }\n    get activeEnd() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);\n    }\n    get currentStart() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);\n    }\n    get currentEnd() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);\n    }\n    getOption(name) {\n        return this.getCurrentData().options[name]; // are the view-specific options\n    }\n}\n\nlet eventSourceDef$2 = {\n    ignoreRange: true,\n    parseMeta(refined) {\n        if (Array.isArray(refined.events)) {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback) {\n        successCallback({\n            rawEvents: arg.eventSource.meta,\n        });\n    },\n};\nconst arrayEventSourcePlugin = createPlugin({\n    name: 'array-event-source',\n    eventSourceDefs: [eventSourceDef$2],\n});\n\nlet eventSourceDef$1 = {\n    parseMeta(refined) {\n        if (typeof refined.events === 'function') {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { dateEnv } = arg.context;\n        const func = arg.eventSource.meta;\n        unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), (rawEvents) => successCallback({ rawEvents }), errorCallback);\n    },\n};\nconst funcEventSourcePlugin = createPlugin({\n    name: 'func-event-source',\n    eventSourceDefs: [eventSourceDef$1],\n});\n\nconst JSON_FEED_EVENT_SOURCE_REFINERS = {\n    method: String,\n    extraParams: identity,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n};\n\nlet eventSourceDef = {\n    parseMeta(refined) {\n        if (refined.url && (refined.format === 'json' || !refined.format)) {\n            return {\n                url: refined.url,\n                format: 'json',\n                method: (refined.method || 'GET').toUpperCase(),\n                extraParams: refined.extraParams,\n                startParam: refined.startParam,\n                endParam: refined.endParam,\n                timeZoneParam: refined.timeZoneParam,\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { meta } = arg.eventSource;\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\n        requestJson(meta.method, meta.url, requestParams).then(([rawEvents, response]) => {\n            successCallback({ rawEvents, response });\n        }, errorCallback);\n    },\n};\nconst jsonFeedEventSourcePlugin = createPlugin({\n    name: 'json-event-source',\n    eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,\n    eventSourceDefs: [eventSourceDef],\n});\nfunction buildRequestParams(meta, range, context) {\n    let { dateEnv, options } = context;\n    let startParam;\n    let endParam;\n    let timeZoneParam;\n    let customRequestParams;\n    let params = {};\n    startParam = meta.startParam;\n    if (startParam == null) {\n        startParam = options.startParam;\n    }\n    endParam = meta.endParam;\n    if (endParam == null) {\n        endParam = options.endParam;\n    }\n    timeZoneParam = meta.timeZoneParam;\n    if (timeZoneParam == null) {\n        timeZoneParam = options.timeZoneParam;\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    Object.assign(params, customRequestParams);\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n    if (dateEnv.timeZone !== 'local') {\n        params[timeZoneParam] = dateEnv.timeZone;\n    }\n    return params;\n}\n\nconst SIMPLE_RECURRING_REFINERS = {\n    daysOfWeek: identity,\n    startTime: createDuration,\n    endTime: createDuration,\n    duration: createDuration,\n    startRecur: identity,\n    endRecur: identity,\n};\n\nlet recurring = {\n    parse(refined, dateEnv) {\n        if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {\n            let recurringData = {\n                daysOfWeek: refined.daysOfWeek || null,\n                startTime: refined.startTime || null,\n                endTime: refined.endTime || null,\n                startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,\n                endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,\n                dateEnv,\n            };\n            let duration;\n            if (refined.duration) {\n                duration = refined.duration;\n            }\n            if (!duration && refined.startTime && refined.endTime) {\n                duration = subtractDurations(refined.endTime, refined.startTime);\n            }\n            return {\n                allDayGuess: Boolean(!refined.startTime && !refined.endTime),\n                duration,\n                typeData: recurringData, // doesn't need endTime anymore but oh well\n            };\n        }\n        return null;\n    },\n    expand(typeData, framingRange, dateEnv) {\n        let clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });\n        if (clippedFramingRange) {\n            return expandRanges(typeData.daysOfWeek, typeData.startTime, typeData.dateEnv, dateEnv, clippedFramingRange);\n        }\n        return [];\n    },\n};\nconst simpleRecurringEventsPlugin = createPlugin({\n    name: 'simple-recurring-event',\n    recurringTypes: [recurring],\n    eventRefiners: SIMPLE_RECURRING_REFINERS,\n});\nfunction expandRanges(daysOfWeek, startTime, eventDateEnv, calendarDateEnv, framingRange) {\n    let dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;\n    let dayMarker = startOfDay(framingRange.start);\n    let endMarker = framingRange.end;\n    let instanceStarts = [];\n    while (dayMarker < endMarker) {\n        let instanceStart;\n        // if everyday, or this particular day-of-week\n        if (!dowHash || dowHash[dayMarker.getUTCDay()]) {\n            if (startTime) {\n                instanceStart = calendarDateEnv.add(dayMarker, startTime);\n            }\n            else {\n                instanceStart = dayMarker;\n            }\n            instanceStarts.push(calendarDateEnv.createMarker(eventDateEnv.toDate(instanceStart)));\n        }\n        dayMarker = addDays(dayMarker, 1);\n    }\n    return instanceStarts;\n}\n\nconst changeHandlerPlugin = createPlugin({\n    name: 'change-handler',\n    optionChangeHandlers: {\n        events(events, context) {\n            handleEventSources([events], context);\n        },\n        eventSources: handleEventSources,\n    },\n});\n/*\nBUG: if `event` was supplied, all previously-given `eventSources` will be wiped out\n*/\nfunction handleEventSources(inputs, context) {\n    let unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);\n    if (unfoundSources.length === 1 &&\n        inputs.length === 1 &&\n        Array.isArray(unfoundSources[0]._raw) &&\n        Array.isArray(inputs[0])) {\n        context.dispatch({\n            type: 'RESET_RAW_EVENTS',\n            sourceId: unfoundSources[0].sourceId,\n            rawEvents: inputs[0],\n        });\n        return;\n    }\n    let newInputs = [];\n    for (let input of inputs) {\n        let inputFound = false;\n        for (let i = 0; i < unfoundSources.length; i += 1) {\n            if (unfoundSources[i]._raw === input) {\n                unfoundSources.splice(i, 1); // delete\n                inputFound = true;\n                break;\n            }\n        }\n        if (!inputFound) {\n            newInputs.push(input);\n        }\n    }\n    for (let unfoundSource of unfoundSources) {\n        context.dispatch({\n            type: 'REMOVE_EVENT_SOURCE',\n            sourceId: unfoundSource.sourceId,\n        });\n    }\n    for (let newInput of newInputs) {\n        context.calendarApi.addEventSource(newInput);\n    }\n}\n\nfunction handleDateProfile(dateProfile, context) {\n    context.emitter.trigger('datesSet', Object.assign(Object.assign({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));\n}\n\nfunction handleEventStore(eventStore, context) {\n    let { emitter } = context;\n    if (emitter.hasHandlers('eventsSet')) {\n        emitter.trigger('eventsSet', buildEventApis(eventStore, context));\n    }\n}\n\n/*\nthis array is exposed on the root namespace so that UMD plugins can add to it.\nsee the rollup-bundles script.\n*/\nconst globalPlugins = [\n    arrayEventSourcePlugin,\n    funcEventSourcePlugin,\n    jsonFeedEventSourcePlugin,\n    simpleRecurringEventsPlugin,\n    changeHandlerPlugin,\n    createPlugin({\n        name: 'misc',\n        isLoadingFuncs: [\n            (state) => computeEventSourcesLoading(state.eventSources),\n        ],\n        propSetHandlers: {\n            dateProfile: handleDateProfile,\n            eventStore: handleEventStore,\n        },\n    }),\n];\n\nclass TaskRunner {\n    constructor(runTaskOption, drainedOption) {\n        this.runTaskOption = runTaskOption;\n        this.drainedOption = drainedOption;\n        this.queue = [];\n        this.delayedRunner = new DelayedRunner(this.drain.bind(this));\n    }\n    request(task, delay) {\n        this.queue.push(task);\n        this.delayedRunner.request(delay);\n    }\n    pause(scope) {\n        this.delayedRunner.pause(scope);\n    }\n    resume(scope, force) {\n        this.delayedRunner.resume(scope, force);\n    }\n    drain() {\n        let { queue } = this;\n        while (queue.length) {\n            let completedTasks = [];\n            let task;\n            while ((task = queue.shift())) {\n                this.runTask(task);\n                completedTasks.push(task);\n            }\n            this.drained(completedTasks);\n        } // keep going, in case new tasks were added in the drained handler\n    }\n    runTask(task) {\n        if (this.runTaskOption) {\n            this.runTaskOption(task);\n        }\n    }\n    drained(completedTasks) {\n        if (this.drainedOption) {\n            this.drainedOption(completedTasks);\n        }\n    }\n}\n\n// Computes what the title at the top of the calendarApi should be for this view\nfunction buildTitle(dateProfile, viewOptions, dateEnv) {\n    let range;\n    // for views that span a large unit of time, show the proper interval, ignoring stray days before and after\n    if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {\n        range = dateProfile.currentRange;\n    }\n    else { // for day units or smaller, use the actual day range\n        range = dateProfile.activeRange;\n    }\n    return dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {\n        isEndExclusive: dateProfile.isRangeAllDay,\n        defaultSeparator: viewOptions.titleRangeSeparator,\n    });\n}\n// Generates the format string that should be used to generate the title for the current date range.\n// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\nfunction buildTitleFormat(dateProfile) {\n    let { currentRangeUnit } = dateProfile;\n    if (currentRangeUnit === 'year') {\n        return { year: 'numeric' };\n    }\n    if (currentRangeUnit === 'month') {\n        return { year: 'numeric', month: 'long' }; // like \"September 2014\"\n    }\n    let days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);\n    if (days !== null && days > 1) {\n        // multi-day range. shorter, like \"Sep 9 - 10 2014\"\n        return { year: 'numeric', month: 'short', day: 'numeric' };\n    }\n    // one day. longer, like \"September 9 2014\"\n    return { year: 'numeric', month: 'long', day: 'numeric' };\n}\n\n/*\nTODO: test switching timezones when NO timezone plugin\n*/\nclass CalendarNowManager {\n    constructor() {\n        this.resetListeners = new Set();\n    }\n    handleInput(dateEnv, // will change if timezone setup changed\n    nowInput) {\n        const oldDateEnv = this.dateEnv;\n        if (dateEnv !== oldDateEnv) {\n            if (typeof nowInput === 'function') {\n                this.nowFn = nowInput;\n            }\n            else if (!oldDateEnv) { // first time?\n                this.nowAnchorDate = dateEnv.toDate(nowInput\n                    ? dateEnv.createMarker(nowInput)\n                    : dateEnv.createNowMarker());\n                this.nowAnchorQueried = Date.now();\n            }\n            this.dateEnv = dateEnv;\n            // not first time? fire reset handlers\n            if (oldDateEnv) {\n                for (const resetListener of this.resetListeners.values()) {\n                    resetListener();\n                }\n            }\n        }\n    }\n    getDateMarker() {\n        return this.nowAnchorDate\n            ? this.dateEnv.timestampToMarker(this.nowAnchorDate.valueOf() +\n                (Date.now() - this.nowAnchorQueried))\n            : this.dateEnv.createMarker(this.nowFn());\n    }\n    addResetListener(handler) {\n        this.resetListeners.add(handler);\n    }\n    removeResetListener(handler) {\n        this.resetListeners.delete(handler);\n    }\n}\n\n// in future refactor, do the redux-style function(state=initial) for initial-state\n// also, whatever is happening in constructor, have it happen in action queue too\nclass CalendarDataManager {\n    constructor(props) {\n        this.computeCurrentViewData = memoize(this._computeCurrentViewData);\n        this.organizeRawLocales = memoize(organizeRawLocales);\n        this.buildLocale = memoize(buildLocale);\n        this.buildPluginHooks = buildBuildPluginHooks();\n        this.buildDateEnv = memoize(buildDateEnv$1);\n        this.buildTheme = memoize(buildTheme);\n        this.parseToolbars = memoize(parseToolbars);\n        this.buildViewSpecs = memoize(buildViewSpecs);\n        this.buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator);\n        this.buildViewApi = memoize(buildViewApi);\n        this.buildViewUiProps = memoizeObjArg(buildViewUiProps);\n        this.buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual);\n        this.buildEventUiBases = memoize(buildEventUiBases);\n        this.parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours);\n        this.buildTitle = memoize(buildTitle);\n        this.nowManager = new CalendarNowManager();\n        this.emitter = new Emitter();\n        this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));\n        this.currentCalendarOptionsInput = {};\n        this.currentCalendarOptionsRefined = {};\n        this.currentViewOptionsInput = {};\n        this.currentViewOptionsRefined = {};\n        this.currentCalendarOptionsRefiners = {};\n        this.optionsForRefining = [];\n        this.optionsForHandling = [];\n        this.getCurrentData = () => this.data;\n        this.dispatch = (action) => {\n            this.actionRunner.request(action); // protects against recursive calls to _handleAction\n        };\n        this.props = props;\n        this.actionRunner.pause();\n        this.nowManager = new CalendarNowManager();\n        let dynamicOptionOverrides = {};\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\n        let currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\n        // wire things up\n        // TODO: not DRY\n        props.calendarApi.currentDataManager = this;\n        this.emitter.setThisContext(props.calendarApi);\n        this.emitter.setOptions(currentViewData.options);\n        let calendarContext = {\n            nowManager: this.nowManager,\n            dateEnv: optionsData.dateEnv,\n            options: optionsData.calendarOptions,\n            pluginHooks: optionsData.pluginHooks,\n            calendarApi: props.calendarApi,\n            dispatch: this.dispatch,\n            emitter: this.emitter,\n            getCurrentData: this.getCurrentData,\n        };\n        let currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv, this.nowManager);\n        let dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\n        if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {\n            currentDate = dateProfile.currentRange.start;\n        }\n        // needs to be after setThisContext\n        for (let callback of optionsData.pluginHooks.contextInit) {\n            callback(calendarContext);\n        }\n        // NOT DRY\n        let eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);\n        let initialState = {\n            dynamicOptionOverrides,\n            currentViewType,\n            currentDate,\n            dateProfile,\n            businessHours: this.parseContextBusinessHours(calendarContext),\n            eventSources,\n            eventUiBases: {},\n            eventStore: createEmptyEventStore(),\n            renderableEventStore: createEmptyEventStore(),\n            dateSelection: null,\n            eventSelection: '',\n            eventDrag: null,\n            eventResize: null,\n            selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig,\n        };\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), initialState);\n        for (let reducer of optionsData.pluginHooks.reducers) {\n            Object.assign(initialState, reducer(null, null, contextAndState));\n        }\n        if (computeIsLoading(initialState, calendarContext)) {\n            this.emitter.trigger('loading', true); // NOT DRY\n        }\n        this.state = initialState;\n        this.updateData();\n        this.actionRunner.resume();\n    }\n    resetOptions(optionOverrides, changedOptionNames) {\n        let { props } = this;\n        if (changedOptionNames === undefined) {\n            props.optionOverrides = optionOverrides;\n        }\n        else {\n            props.optionOverrides = Object.assign(Object.assign({}, (props.optionOverrides || {})), optionOverrides);\n            this.optionsForRefining.push(...changedOptionNames);\n        }\n        if (changedOptionNames === undefined || changedOptionNames.length) {\n            this.actionRunner.request({\n                type: 'NOTHING',\n            });\n        }\n    }\n    _handleAction(action) {\n        let { props, state, emitter } = this;\n        let dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\n        let currentViewType = reduceViewType(state.currentViewType, action);\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\n        // wire things up\n        // TODO: not DRY\n        props.calendarApi.currentDataManager = this;\n        emitter.setThisContext(props.calendarApi);\n        emitter.setOptions(currentViewData.options);\n        let calendarContext = {\n            nowManager: this.nowManager,\n            dateEnv: optionsData.dateEnv,\n            options: optionsData.calendarOptions,\n            pluginHooks: optionsData.pluginHooks,\n            calendarApi: props.calendarApi,\n            dispatch: this.dispatch,\n            emitter,\n            getCurrentData: this.getCurrentData,\n        };\n        let { currentDate, dateProfile } = state;\n        if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) { // hack\n            dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\n        }\n        currentDate = reduceCurrentDate(currentDate, action);\n        dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);\n        if (action.type === 'PREV' || // TODO: move this logic into DateProfileGenerator\n            action.type === 'NEXT' || // \"\n            !rangeContainsMarker(dateProfile.currentRange, currentDate)) {\n            currentDate = dateProfile.currentRange.start;\n        }\n        let eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);\n        let eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext);\n        let isEventsLoading = computeEventSourcesLoading(eventSources); // BAD. also called in this func in computeIsLoading\n        let renderableEventStore = (isEventsLoading && !currentViewData.options.progressiveEventRendering) ?\n            (state.renderableEventStore || eventStore) : // try from previous state\n            eventStore;\n        let { eventUiSingleBase, selectionConfig } = this.buildViewUiProps(calendarContext); // will memoize obj\n        let eventUiBySource = this.buildEventUiBySource(eventSources);\n        let eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);\n        let newState = {\n            dynamicOptionOverrides,\n            currentViewType,\n            currentDate,\n            dateProfile,\n            eventSources,\n            eventStore,\n            renderableEventStore,\n            selectionConfig,\n            eventUiBases,\n            businessHours: this.parseContextBusinessHours(calendarContext),\n            dateSelection: reduceDateSelection(state.dateSelection, action),\n            eventSelection: reduceSelectedEvent(state.eventSelection, action),\n            eventDrag: reduceEventDrag(state.eventDrag, action),\n            eventResize: reduceEventResize(state.eventResize, action),\n        };\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), newState);\n        for (let reducer of optionsData.pluginHooks.reducers) {\n            Object.assign(newState, reducer(state, action, contextAndState)); // give the OLD state, for old value\n        }\n        let wasLoading = computeIsLoading(state, calendarContext);\n        let isLoading = computeIsLoading(newState, calendarContext);\n        // TODO: use propSetHandlers in plugin system\n        if (!wasLoading && isLoading) {\n            emitter.trigger('loading', true);\n        }\n        else if (wasLoading && !isLoading) {\n            emitter.trigger('loading', false);\n        }\n        this.state = newState;\n        if (props.onAction) {\n            props.onAction(action);\n        }\n    }\n    updateData() {\n        let { props, state } = this;\n        let oldData = this.data;\n        let optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);\n        let currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);\n        let data = this.data = Object.assign(Object.assign(Object.assign({ nowManager: this.nowManager, viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv), calendarApi: props.calendarApi, dispatch: this.dispatch, emitter: this.emitter, getCurrentData: this.getCurrentData }, optionsData), currentViewData), state);\n        let changeHandlers = optionsData.pluginHooks.optionChangeHandlers;\n        let oldCalendarOptions = oldData && oldData.calendarOptions;\n        let newCalendarOptions = optionsData.calendarOptions;\n        if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {\n            if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {\n                // hack\n                state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);\n                state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv);\n                state.renderableEventStore = data.renderableEventStore = rezoneEventStoreDates(data.renderableEventStore, oldData.dateEnv, data.dateEnv);\n            }\n            for (let optionName in changeHandlers) {\n                if (this.optionsForHandling.indexOf(optionName) !== -1 ||\n                    oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {\n                    changeHandlers[optionName](newCalendarOptions[optionName], data);\n                }\n            }\n        }\n        this.optionsForHandling = [];\n        if (props.onData) {\n            props.onData(data);\n        }\n    }\n    computeOptionsData(optionOverrides, dynamicOptionOverrides, calendarApi) {\n        // TODO: blacklist options that are handled by optionChangeHandlers\n        if (!this.optionsForRefining.length &&\n            optionOverrides === this.stableOptionOverrides &&\n            dynamicOptionOverrides === this.stableDynamicOptionOverrides) {\n            return this.stableCalendarOptionsData;\n        }\n        let { refinedOptions, pluginHooks, localeDefaults, availableLocaleData, extra, } = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides);\n        warnUnknownOptions(extra);\n        let dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);\n        let viewSpecs = this.buildViewSpecs(pluginHooks.views, this.stableOptionOverrides, this.stableDynamicOptionOverrides, localeDefaults);\n        let theme = this.buildTheme(refinedOptions, pluginHooks);\n        let toolbarConfig = this.parseToolbars(refinedOptions, this.stableOptionOverrides, theme, viewSpecs, calendarApi);\n        return this.stableCalendarOptionsData = {\n            calendarOptions: refinedOptions,\n            pluginHooks,\n            dateEnv,\n            viewSpecs,\n            theme,\n            toolbarConfig,\n            localeDefaults,\n            availableRawLocales: availableLocaleData.map,\n        };\n    }\n    // always called from behind a memoizer\n    processRawCalendarOptions(optionOverrides, dynamicOptionOverrides) {\n        let { locales, locale } = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let availableLocaleData = this.organizeRawLocales(locales);\n        let availableRawLocales = availableLocaleData.map;\n        let localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;\n        let pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);\n        let refiners = this.currentCalendarOptionsRefiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\n        let extra = {};\n        let raw = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            localeDefaults,\n            optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let refined = {};\n        let currentRaw = this.currentCalendarOptionsInput;\n        let currentRefined = this.currentCalendarOptionsRefined;\n        let anyChanges = false;\n        for (let optionName in raw) {\n            if (this.optionsForRefining.indexOf(optionName) === -1 && (raw[optionName] === currentRaw[optionName] || (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                (optionName in currentRaw) &&\n                COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName])))) {\n                refined[optionName] = currentRefined[optionName];\n            }\n            else if (refiners[optionName]) {\n                refined[optionName] = refiners[optionName](raw[optionName]);\n                anyChanges = true;\n            }\n            else {\n                extra[optionName] = currentRaw[optionName];\n            }\n        }\n        if (anyChanges) {\n            this.currentCalendarOptionsInput = raw;\n            this.currentCalendarOptionsRefined = refined;\n            this.stableOptionOverrides = optionOverrides;\n            this.stableDynamicOptionOverrides = dynamicOptionOverrides;\n        }\n        this.optionsForHandling.push(...this.optionsForRefining);\n        this.optionsForRefining = [];\n        return {\n            rawOptions: this.currentCalendarOptionsInput,\n            refinedOptions: this.currentCalendarOptionsRefined,\n            pluginHooks,\n            availableLocaleData,\n            localeDefaults,\n            extra,\n        };\n    }\n    _computeCurrentViewData(viewType, optionsData, optionOverrides, dynamicOptionOverrides) {\n        let viewSpec = optionsData.viewSpecs[viewType];\n        if (!viewSpec) {\n            throw new Error(`viewType \"${viewType}\" is not available. Please make sure you've loaded all neccessary plugins`);\n        }\n        let { refinedOptions, extra } = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides);\n        warnUnknownOptions(extra);\n        this.nowManager.handleInput(optionsData.dateEnv, refinedOptions.now);\n        let dateProfileGenerator = this.buildDateProfileGenerator({\n            dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,\n            nowManager: this.nowManager,\n            duration: viewSpec.duration,\n            durationUnit: viewSpec.durationUnit,\n            usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,\n            dateEnv: optionsData.dateEnv,\n            calendarApi: this.props.calendarApi,\n            slotMinTime: refinedOptions.slotMinTime,\n            slotMaxTime: refinedOptions.slotMaxTime,\n            showNonCurrentDates: refinedOptions.showNonCurrentDates,\n            dayCount: refinedOptions.dayCount,\n            dateAlignment: refinedOptions.dateAlignment,\n            dateIncrement: refinedOptions.dateIncrement,\n            hiddenDays: refinedOptions.hiddenDays,\n            weekends: refinedOptions.weekends,\n            validRangeInput: refinedOptions.validRange,\n            visibleRangeInput: refinedOptions.visibleRange,\n            fixedWeekCount: refinedOptions.fixedWeekCount,\n        });\n        let viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);\n        return { viewSpec, options: refinedOptions, dateProfileGenerator, viewApi };\n    }\n    processRawViewOptions(viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {\n        let raw = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            viewSpec.optionDefaults,\n            localeDefaults,\n            optionOverrides,\n            viewSpec.optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let refiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), VIEW_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\n        let refined = {};\n        let currentRaw = this.currentViewOptionsInput;\n        let currentRefined = this.currentViewOptionsRefined;\n        let anyChanges = false;\n        let extra = {};\n        for (let optionName in raw) {\n            if (raw[optionName] === currentRaw[optionName] ||\n                (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                    COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], currentRaw[optionName]))) {\n                refined[optionName] = currentRefined[optionName];\n            }\n            else {\n                if (raw[optionName] === this.currentCalendarOptionsInput[optionName] ||\n                    (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                        COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], this.currentCalendarOptionsInput[optionName]))) {\n                    if (optionName in this.currentCalendarOptionsRefined) { // might be an \"extra\" prop\n                        refined[optionName] = this.currentCalendarOptionsRefined[optionName];\n                    }\n                }\n                else if (refiners[optionName]) {\n                    refined[optionName] = refiners[optionName](raw[optionName]);\n                }\n                else {\n                    extra[optionName] = raw[optionName];\n                }\n                anyChanges = true;\n            }\n        }\n        if (anyChanges) {\n            this.currentViewOptionsInput = raw;\n            this.currentViewOptionsRefined = refined;\n        }\n        return {\n            rawOptions: this.currentViewOptionsInput,\n            refinedOptions: this.currentViewOptionsRefined,\n            extra,\n        };\n    }\n}\nfunction buildDateEnv$1(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {\n    let locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);\n    return new DateEnv({\n        calendarSystem: 'gregory',\n        timeZone,\n        namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,\n        locale,\n        weekNumberCalculation,\n        firstDay,\n        weekText,\n        cmdFormatter: pluginHooks.cmdFormatter,\n        defaultSeparator,\n    });\n}\nfunction buildTheme(options, pluginHooks) {\n    let ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;\n    return new ThemeClass(options);\n}\nfunction buildDateProfileGenerator(props) {\n    let DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator;\n    return new DateProfileGeneratorClass(props);\n}\nfunction buildViewApi(type, getCurrentData, dateEnv) {\n    return new ViewImpl(type, getCurrentData, dateEnv);\n}\nfunction buildEventUiBySource(eventSources) {\n    return mapHash(eventSources, (eventSource) => eventSource.ui);\n}\nfunction buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {\n    let eventUiBases = { '': eventUiSingleBase };\n    for (let defId in eventDefs) {\n        let def = eventDefs[defId];\n        if (def.sourceId && eventUiBySource[def.sourceId]) {\n            eventUiBases[defId] = eventUiBySource[def.sourceId];\n        }\n    }\n    return eventUiBases;\n}\nfunction buildViewUiProps(calendarContext) {\n    let { options } = calendarContext;\n    return {\n        eventUiSingleBase: createEventUi({\n            display: options.eventDisplay,\n            editable: options.editable,\n            startEditable: options.eventStartEditable,\n            durationEditable: options.eventDurationEditable,\n            constraint: options.eventConstraint,\n            overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,\n            allow: options.eventAllow,\n            backgroundColor: options.eventBackgroundColor,\n            borderColor: options.eventBorderColor,\n            textColor: options.eventTextColor,\n            color: options.eventColor,\n            // classNames: options.eventClassNames // render hook will handle this\n        }, calendarContext),\n        selectionConfig: createEventUi({\n            constraint: options.selectConstraint,\n            overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,\n            allow: options.selectAllow,\n        }, calendarContext),\n    };\n}\nfunction computeIsLoading(state, context) {\n    for (let isLoadingFunc of context.pluginHooks.isLoadingFuncs) {\n        if (isLoadingFunc(state)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction parseContextBusinessHours(calendarContext) {\n    return parseBusinessHours(calendarContext.options.businessHours, calendarContext);\n}\nfunction warnUnknownOptions(options, viewName) {\n    for (let optionName in options) {\n        console.warn(`Unknown option '${optionName}'` +\n            (viewName ? ` for view '${viewName}'` : ''));\n    }\n}\n\nclass ToolbarSection extends BaseComponent {\n    render() {\n        let children = this.props.widgetGroups.map((widgetGroup) => this.renderWidgetGroup(widgetGroup));\n        return createElement('div', { className: 'fc-toolbar-chunk' }, ...children);\n    }\n    renderWidgetGroup(widgetGroup) {\n        let { props } = this;\n        let { theme } = this.context;\n        let children = [];\n        let isOnlyButtons = true;\n        for (let widget of widgetGroup) {\n            let { buttonName, buttonClick, buttonText, buttonIcon, buttonHint } = widget;\n            if (buttonName === 'title') {\n                isOnlyButtons = false;\n                children.push(createElement(\"h2\", { className: \"fc-toolbar-title\", id: props.titleId }, props.title));\n            }\n            else {\n                let isPressed = buttonName === props.activeButton;\n                let isDisabled = (!props.isTodayEnabled && buttonName === 'today') ||\n                    (!props.isPrevEnabled && buttonName === 'prev') ||\n                    (!props.isNextEnabled && buttonName === 'next');\n                let buttonClasses = [`fc-${buttonName}-button`, theme.getClass('button')];\n                if (isPressed) {\n                    buttonClasses.push(theme.getClass('buttonActive'));\n                }\n                children.push(createElement(\"button\", { type: \"button\", title: typeof buttonHint === 'function' ? buttonHint(props.navUnit) : buttonHint, disabled: isDisabled, \"aria-pressed\": isPressed, className: buttonClasses.join(' '), onClick: buttonClick }, buttonText || (buttonIcon ? createElement(\"span\", { className: buttonIcon, role: \"img\" }) : '')));\n            }\n        }\n        if (children.length > 1) {\n            let groupClassName = (isOnlyButtons && theme.getClass('buttonGroup')) || '';\n            return createElement('div', { className: groupClassName }, ...children);\n        }\n        return children[0];\n    }\n}\n\nclass Toolbar extends BaseComponent {\n    render() {\n        let { model, extraClassName } = this.props;\n        let forceLtr = false;\n        let startContent;\n        let endContent;\n        let sectionWidgets = model.sectionWidgets;\n        let centerContent = sectionWidgets.center;\n        if (sectionWidgets.left) {\n            forceLtr = true;\n            startContent = sectionWidgets.left;\n        }\n        else {\n            startContent = sectionWidgets.start;\n        }\n        if (sectionWidgets.right) {\n            forceLtr = true;\n            endContent = sectionWidgets.right;\n        }\n        else {\n            endContent = sectionWidgets.end;\n        }\n        let classNames = [\n            extraClassName || '',\n            'fc-toolbar',\n            forceLtr ? 'fc-toolbar-ltr' : '',\n        ];\n        return (createElement(\"div\", { className: classNames.join(' ') },\n            this.renderSection('start', startContent || []),\n            this.renderSection('center', centerContent || []),\n            this.renderSection('end', endContent || [])));\n    }\n    renderSection(key, widgetGroups) {\n        let { props } = this;\n        return (createElement(ToolbarSection, { key: key, widgetGroups: widgetGroups, title: props.title, navUnit: props.navUnit, activeButton: props.activeButton, isTodayEnabled: props.isTodayEnabled, isPrevEnabled: props.isPrevEnabled, isNextEnabled: props.isNextEnabled, titleId: props.titleId }));\n    }\n}\n\nclass ViewHarness extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            availableWidth: null,\n        };\n        this.handleEl = (el) => {\n            this.el = el;\n            setRef(this.props.elRef, el);\n            this.updateAvailableWidth();\n        };\n        this.handleResize = () => {\n            this.updateAvailableWidth();\n        };\n    }\n    render() {\n        let { props, state } = this;\n        let { aspectRatio } = props;\n        let classNames = [\n            'fc-view-harness',\n            (aspectRatio || props.liquid || props.height)\n                ? 'fc-view-harness-active' // harness controls the height\n                : 'fc-view-harness-passive', // let the view do the height\n        ];\n        let height = '';\n        let paddingBottom = '';\n        if (aspectRatio) {\n            if (state.availableWidth !== null) {\n                height = state.availableWidth / aspectRatio;\n            }\n            else {\n                // while waiting to know availableWidth, we can't set height to *zero*\n                // because will cause lots of unnecessary scrollbars within scrollgrid.\n                // BETTER: don't start rendering ANYTHING yet until we know container width\n                // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)\n                paddingBottom = `${(1 / aspectRatio) * 100}%`;\n            }\n        }\n        else {\n            height = props.height || '';\n        }\n        return (createElement(\"div\", { \"aria-labelledby\": props.labeledById, ref: this.handleEl, className: classNames.join(' '), style: { height, paddingBottom } }, props.children));\n    }\n    componentDidMount() {\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    updateAvailableWidth() {\n        if (this.el && // needed. but why?\n            this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth\n        ) {\n            this.setState({ availableWidth: this.el.offsetWidth });\n        }\n    }\n}\n\n/*\nDetects when the user clicks on an event within a DateComponent\n*/\nclass EventClicking extends Interaction {\n    constructor(settings) {\n        super(settings);\n        this.handleSegClick = (ev, segEl) => {\n            let { component } = this;\n            let { context } = component;\n            let seg = getElSeg(segEl);\n            if (seg && // might be the <div> surrounding the more link\n                component.isValidSegDownEl(ev.target)) {\n                // our way to simulate a link click for elements that can't be <a> tags\n                // grab before trigger fired in case trigger trashes DOM thru rerendering\n                let hasUrlContainer = elementClosest(ev.target, '.fc-event-forced-url');\n                let url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';\n                context.emitter.trigger('eventClick', {\n                    el: segEl,\n                    event: new EventImpl(component.context, seg.eventRange.def, seg.eventRange.instance),\n                    jsEvent: ev,\n                    view: context.viewApi,\n                });\n                if (url && !ev.defaultPrevented) {\n                    window.location.href = url;\n                }\n            }\n        };\n        this.destroy = listenBySelector(settings.el, 'click', '.fc-event', // on both fg and bg events\n        this.handleSegClick);\n    }\n}\n\n/*\nTriggers events and adds/removes core classNames when the user's pointer\nenters/leaves event-elements of a component.\n*/\nclass EventHovering extends Interaction {\n    constructor(settings) {\n        super(settings);\n        // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it\n        this.handleEventElRemove = (el) => {\n            if (el === this.currentSegEl) {\n                this.handleSegLeave(null, this.currentSegEl);\n            }\n        };\n        this.handleSegEnter = (ev, segEl) => {\n            if (getElSeg(segEl)) { // TODO: better way to make sure not hovering over more+ link or its wrapper\n                this.currentSegEl = segEl;\n                this.triggerEvent('eventMouseEnter', ev, segEl);\n            }\n        };\n        this.handleSegLeave = (ev, segEl) => {\n            if (this.currentSegEl) {\n                this.currentSegEl = null;\n                this.triggerEvent('eventMouseLeave', ev, segEl);\n            }\n        };\n        this.removeHoverListeners = listenToHoverBySelector(settings.el, '.fc-event', // on both fg and bg events\n        this.handleSegEnter, this.handleSegLeave);\n    }\n    destroy() {\n        this.removeHoverListeners();\n    }\n    triggerEvent(publicEvName, ev, segEl) {\n        let { component } = this;\n        let { context } = component;\n        let seg = getElSeg(segEl);\n        if (!ev || component.isValidSegDownEl(ev.target)) {\n            context.emitter.trigger(publicEvName, {\n                el: segEl,\n                event: new EventImpl(context, seg.eventRange.def, seg.eventRange.instance),\n                jsEvent: ev,\n                view: context.viewApi,\n            });\n        }\n    }\n}\n\nclass CalendarContent extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.buildViewContext = memoize(buildViewContext);\n        this.buildViewPropTransformers = memoize(buildViewPropTransformers);\n        this.buildToolbarProps = memoize(buildToolbarProps);\n        this.headerRef = createRef();\n        this.footerRef = createRef();\n        this.interactionsStore = {};\n        // eslint-disable-next-line\n        this.state = {\n            viewLabelId: getUniqueDomId(),\n        };\n        // Component Registration\n        // -----------------------------------------------------------------------------------------------------------------\n        this.registerInteractiveComponent = (component, settingsInput) => {\n            let settings = parseInteractionSettings(component, settingsInput);\n            let DEFAULT_INTERACTIONS = [\n                EventClicking,\n                EventHovering,\n            ];\n            let interactionClasses = DEFAULT_INTERACTIONS.concat(this.props.pluginHooks.componentInteractions);\n            let interactions = interactionClasses.map((TheInteractionClass) => new TheInteractionClass(settings));\n            this.interactionsStore[component.uid] = interactions;\n            interactionSettingsStore[component.uid] = settings;\n        };\n        this.unregisterInteractiveComponent = (component) => {\n            let listeners = this.interactionsStore[component.uid];\n            if (listeners) {\n                for (let listener of listeners) {\n                    listener.destroy();\n                }\n                delete this.interactionsStore[component.uid];\n            }\n            delete interactionSettingsStore[component.uid];\n        };\n        // Resizing\n        // -----------------------------------------------------------------------------------------------------------------\n        this.resizeRunner = new DelayedRunner(() => {\n            this.props.emitter.trigger('_resize', true); // should window resizes be considered \"forced\" ?\n            this.props.emitter.trigger('windowResize', { view: this.props.viewApi });\n        });\n        this.handleWindowResize = (ev) => {\n            let { options } = this.props;\n            if (options.handleWindowResize &&\n                ev.target === window // avoid jqui events\n            ) {\n                this.resizeRunner.request(options.windowResizeDelay);\n            }\n        };\n    }\n    /*\n    renders INSIDE of an outer div\n    */\n    render() {\n        let { props } = this;\n        let { toolbarConfig, options } = props;\n        let viewVGrow = false;\n        let viewHeight = '';\n        let viewAspectRatio;\n        if (props.isHeightAuto || props.forPrint) {\n            viewHeight = '';\n        }\n        else if (options.height != null) {\n            viewVGrow = true;\n        }\n        else if (options.contentHeight != null) {\n            viewHeight = options.contentHeight;\n        }\n        else {\n            viewAspectRatio = Math.max(options.aspectRatio, 0.5); // prevent from getting too tall\n        }\n        let viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.nowManager, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);\n        let viewLabelId = (toolbarConfig.header && toolbarConfig.header.hasTitle)\n            ? this.state.viewLabelId\n            : undefined;\n        return (createElement(ViewContextType.Provider, { value: viewContext },\n            createElement(NowTimer, { unit: \"day\" }, (nowDate) => {\n                let toolbarProps = this.buildToolbarProps(props.viewSpec, props.dateProfile, props.dateProfileGenerator, props.currentDate, nowDate, props.viewTitle);\n                return (createElement(Fragment, null,\n                    toolbarConfig.header && (createElement(Toolbar, Object.assign({ ref: this.headerRef, extraClassName: \"fc-header-toolbar\", model: toolbarConfig.header, titleId: viewLabelId }, toolbarProps))),\n                    createElement(ViewHarness, { liquid: viewVGrow, height: viewHeight, aspectRatio: viewAspectRatio, labeledById: viewLabelId },\n                        this.renderView(props),\n                        this.buildAppendContent()),\n                    toolbarConfig.footer && (createElement(Toolbar, Object.assign({ ref: this.footerRef, extraClassName: \"fc-footer-toolbar\", model: toolbarConfig.footer, titleId: \"\" }, toolbarProps)))));\n            })));\n    }\n    componentDidMount() {\n        let { props } = this;\n        this.calendarInteractions = props.pluginHooks.calendarInteractions\n            .map((CalendarInteractionClass) => new CalendarInteractionClass(props));\n        window.addEventListener('resize', this.handleWindowResize);\n        let { propSetHandlers } = props.pluginHooks;\n        for (let propName in propSetHandlers) {\n            propSetHandlers[propName](props[propName], props);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        let { props } = this;\n        let { propSetHandlers } = props.pluginHooks;\n        for (let propName in propSetHandlers) {\n            if (props[propName] !== prevProps[propName]) {\n                propSetHandlers[propName](props[propName], props);\n            }\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize);\n        this.resizeRunner.clear();\n        for (let interaction of this.calendarInteractions) {\n            interaction.destroy();\n        }\n        this.props.emitter.trigger('_unmount');\n    }\n    buildAppendContent() {\n        let { props } = this;\n        let children = props.pluginHooks.viewContainerAppends.map((buildAppendContent) => buildAppendContent(props));\n        return createElement(Fragment, {}, ...children);\n    }\n    renderView(props) {\n        let { pluginHooks } = props;\n        let { viewSpec } = props;\n        let viewProps = {\n            dateProfile: props.dateProfile,\n            businessHours: props.businessHours,\n            eventStore: props.renderableEventStore,\n            eventUiBases: props.eventUiBases,\n            dateSelection: props.dateSelection,\n            eventSelection: props.eventSelection,\n            eventDrag: props.eventDrag,\n            eventResize: props.eventResize,\n            isHeightAuto: props.isHeightAuto,\n            forPrint: props.forPrint,\n        };\n        let transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);\n        for (let transformer of transformers) {\n            Object.assign(viewProps, transformer.transform(viewProps, props));\n        }\n        let ViewComponent = viewSpec.component;\n        return (createElement(ViewComponent, Object.assign({}, viewProps)));\n    }\n}\nfunction buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {\n    // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid\n    let todayInfo = dateProfileGenerator.build(now, undefined, false); // TODO: need `undefined` or else INFINITE LOOP for some reason\n    let prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);\n    let nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);\n    return {\n        title,\n        activeButton: viewSpec.type,\n        navUnit: viewSpec.singleUnit,\n        isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),\n        isPrevEnabled: prevInfo.isValid,\n        isNextEnabled: nextInfo.isValid,\n    };\n}\n// Plugin\n// -----------------------------------------------------------------------------------------------------------------\nfunction buildViewPropTransformers(theClasses) {\n    return theClasses.map((TheClass) => new TheClass());\n}\n\nclass Calendar extends CalendarImpl {\n    constructor(el, optionOverrides = {}) {\n        super();\n        this.isRendering = false;\n        this.isRendered = false;\n        this.currentClassNames = [];\n        this.customContentRenderId = 0;\n        this.handleAction = (action) => {\n            // actions we know we want to render immediately\n            switch (action.type) {\n                case 'SET_EVENT_DRAG':\n                case 'SET_EVENT_RESIZE':\n                    this.renderRunner.tryDrain();\n            }\n        };\n        this.handleData = (data) => {\n            this.currentData = data;\n            this.renderRunner.request(data.calendarOptions.rerenderDelay);\n        };\n        this.handleRenderRequest = () => {\n            if (this.isRendering) {\n                this.isRendered = true;\n                let { currentData } = this;\n                flushSync(() => {\n                    render(createElement(CalendarRoot, { options: currentData.calendarOptions, theme: currentData.theme, emitter: currentData.emitter }, (classNames, height, isHeightAuto, forPrint) => {\n                        this.setClassNames(classNames);\n                        this.setHeight(height);\n                        return (createElement(RenderId.Provider, { value: this.customContentRenderId },\n                            createElement(CalendarContent, Object.assign({ isHeightAuto: isHeightAuto, forPrint: forPrint }, currentData))));\n                    }), this.el);\n                });\n            }\n            else if (this.isRendered) {\n                this.isRendered = false;\n                render(null, this.el);\n                this.setClassNames([]);\n                this.setHeight('');\n            }\n        };\n        ensureElHasStyles(el);\n        this.el = el;\n        this.renderRunner = new DelayedRunner(this.handleRenderRequest);\n        new CalendarDataManager({\n            optionOverrides,\n            calendarApi: this,\n            onAction: this.handleAction,\n            onData: this.handleData,\n        });\n    }\n    render() {\n        let wasRendering = this.isRendering;\n        if (!wasRendering) {\n            this.isRendering = true;\n        }\n        else {\n            this.customContentRenderId += 1;\n        }\n        this.renderRunner.request();\n        if (wasRendering) {\n            this.updateSize();\n        }\n    }\n    destroy() {\n        if (this.isRendering) {\n            this.isRendering = false;\n            this.renderRunner.request();\n        }\n    }\n    updateSize() {\n        flushSync(() => {\n            super.updateSize();\n        });\n    }\n    batchRendering(func) {\n        this.renderRunner.pause('batchRendering');\n        func();\n        this.renderRunner.resume('batchRendering');\n    }\n    pauseRendering() {\n        this.renderRunner.pause('pauseRendering');\n    }\n    resumeRendering() {\n        this.renderRunner.resume('pauseRendering', true);\n    }\n    resetOptions(optionOverrides, changedOptionNames) {\n        this.currentDataManager.resetOptions(optionOverrides, changedOptionNames);\n    }\n    setClassNames(classNames) {\n        if (!isArraysEqual(classNames, this.currentClassNames)) {\n            let { classList } = this.el;\n            for (let className of this.currentClassNames) {\n                classList.remove(className);\n            }\n            for (let className of classNames) {\n                classList.add(className);\n            }\n            this.currentClassNames = classNames;\n        }\n    }\n    setHeight(height) {\n        applyStyleProp(this.el, 'height', height);\n    }\n}\n\nfunction formatDate(dateInput, options = {}) {\n    let dateEnv = buildDateEnv(options);\n    let formatter = createFormatter(options);\n    let dateMeta = dateEnv.createMarkerMeta(dateInput);\n    if (!dateMeta) { // TODO: warning?\n        return '';\n    }\n    return dateEnv.format(dateMeta.marker, formatter, {\n        forcedTzo: dateMeta.forcedTzo,\n    });\n}\nfunction formatRange(startInput, endInput, options) {\n    let dateEnv = buildDateEnv(typeof options === 'object' && options ? options : {}); // pass in if non-null object\n    let formatter = createFormatter(options);\n    let startMeta = dateEnv.createMarkerMeta(startInput);\n    let endMeta = dateEnv.createMarkerMeta(endInput);\n    if (!startMeta || !endMeta) { // TODO: warning?\n        return '';\n    }\n    return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {\n        forcedStartTzo: startMeta.forcedTzo,\n        forcedEndTzo: endMeta.forcedTzo,\n        isEndExclusive: options.isEndExclusive,\n        defaultSeparator: BASE_OPTION_DEFAULTS.defaultRangeSeparator,\n    });\n}\n// TODO: more DRY and optimized\nfunction buildDateEnv(settings) {\n    let locale = buildLocale(settings.locale || 'en', organizeRawLocales([]).map); // TODO: don't hardcode 'en' everywhere\n    return new DateEnv(Object.assign(Object.assign({ timeZone: BASE_OPTION_DEFAULTS.timeZone, calendarSystem: 'gregory' }, settings), { locale }));\n}\n\n// HELPERS\n/*\nif nextDayThreshold is specified, slicing is done in an all-day fashion.\nyou can get nextDayThreshold from context.nextDayThreshold\n*/\nfunction sliceEvents(props, allDay) {\n    return sliceEventStore(props.eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? props.nextDayThreshold : null).fg;\n}\n\nconst version = '6.1.17';\n\nexport { Calendar, createPlugin, formatDate, formatRange, globalLocales, globalPlugins, sliceEvents, version };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * Represents the BINARY value type, which contains extra methods for encoding and decoding.\n *\n * @memberof ICAL\n */\nclass Binary {\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {Binary}               The binary value instance\n   */\n  static fromString(aString) {\n    return new Binary(aString);\n  }\n\n  /**\n   * Creates a new ICAL.Binary instance\n   *\n   * @param {String} aValue     The binary data for this value\n   */\n  constructor(aValue) {\n    this.value = aValue;\n  }\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @default \"binary\"\n   * @constant\n   */\n  icaltype = \"binary\";\n\n  /**\n   * Base64 decode the current value\n   *\n   * @return {String}         The base64-decoded value\n   */\n  decodeValue() {\n    return this._b64_decode(this.value);\n  }\n\n  /**\n   * Encodes the passed parameter with base64 and sets the internal\n   * value to the result.\n   *\n   * @param {String} aValue      The raw binary value to encode\n   */\n  setEncodedValue(aValue) {\n    this.value = this._b64_encode(aValue);\n  }\n\n  _b64_encode(data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Bayron Guevara\n    // +   improved by: Thunder.m\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: Rafał Kukawski (http://kukawski.pl)\n    // *     example 1: base64_encode('Kevin van Zonneveld');\n    // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['atob'] == 'function') {\n    //    return atob(data);\n    //}\n    let b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n              \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n      ac = 0,\n      enc = \"\",\n      tmp_arr = [];\n\n    if (!data) {\n      return data;\n    }\n\n    do { // pack three octets into four hexets\n      o1 = data.charCodeAt(i++);\n      o2 = data.charCodeAt(i++);\n      o3 = data.charCodeAt(i++);\n\n      bits = o1 << 16 | o2 << 8 | o3;\n\n      h1 = bits >> 18 & 0x3f;\n      h2 = bits >> 12 & 0x3f;\n      h3 = bits >> 6 & 0x3f;\n      h4 = bits & 0x3f;\n\n      // use hexets to index into b64, and append result to encoded string\n      tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    } while (i < data.length);\n\n    enc = tmp_arr.join('');\n\n    let r = data.length % 3;\n\n    return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n  }\n\n  _b64_decode(data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Thunder.m\n    // +      input by: Aman Gupta\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +      input by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n    // *     returns 1: 'Kevin van Zonneveld'\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['btoa'] == 'function') {\n    //    return btoa(data);\n    //}\n    let b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n              \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n      ac = 0,\n      dec = \"\",\n      tmp_arr = [];\n\n    if (!data) {\n      return data;\n    }\n\n    data += '';\n\n    do { // unpack four hexets into three octets using index points in b64\n      h1 = b64.indexOf(data.charAt(i++));\n      h2 = b64.indexOf(data.charAt(i++));\n      h3 = b64.indexOf(data.charAt(i++));\n      h4 = b64.indexOf(data.charAt(i++));\n\n      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n      o1 = bits >> 16 & 0xff;\n      o2 = bits >> 8 & 0xff;\n      o3 = bits & 0xff;\n\n      if (h3 == 64) {\n        tmp_arr[ac++] = String.fromCharCode(o1);\n      } else if (h4 == 64) {\n        tmp_arr[ac++] = String.fromCharCode(o1, o2);\n      } else {\n        tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n      }\n    } while (i < data.length);\n\n    dec = tmp_arr.join('');\n\n    return dec;\n  }\n\n  /**\n   * The string representation of this value\n   * @return {String}\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\nconst DURATION_LETTERS = /([PDWHMTS]{1,1})/;\nconst DATA_PROPS_TO_COPY = [\"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"isNegative\"];\n\n/**\n * This class represents the \"duration\" value type, with various calculation\n * and manipulation methods.\n *\n * @memberof ICAL\n */\nclass Duration {\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {Duration}             The newly created duration instance\n   */\n  static fromSeconds(aSeconds) {\n    return (new Duration()).fromSeconds(aSeconds);\n  }\n\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n  static isValueString(string) {\n    return (string[0] === 'P' || string[1] === 'P');\n  }\n\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {Duration}         The created duration instance\n   */\n  static fromString(aStr) {\n    let pos = 0;\n    let dict = Object.create(null);\n    let chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      let type = aStr[pos];\n      let numeric = aStr.slice(0, Math.max(0, pos));\n      aStr = aStr.slice(pos + 1);\n\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error(\n        'invalid duration value: Not enough duration components in \"' + aStr + '\"'\n      );\n    }\n\n    return new Duration(dict);\n  }\n\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData                An object with members of the duration\n   * @param {Number=} aData.weeks         Duration in weeks\n   * @param {Number=} aData.days          Duration in days\n   * @param {Number=} aData.hours         Duration in hours\n   * @param {Number=} aData.minutes       Duration in minutes\n   * @param {Number=} aData.seconds       Duration in seconds\n   * @param {Boolean=} aData.isNegative   If true, the duration is negative\n   * @return {Duration}                   The createad duration instance\n   */\n  static fromData(aData) {\n    return new Duration(aData);\n  }\n\n  /**\n   * Creates a new ICAL.Duration instance.\n   *\n   * @param {Object} data                 An object with members of the duration\n   * @param {Number=} data.weeks          Duration in weeks\n   * @param {Number=} data.days           Duration in days\n   * @param {Number=} data.hours          Duration in hours\n   * @param {Number=} data.minutes        Duration in minutes\n   * @param {Number=} data.seconds        Duration in seconds\n   * @param {Boolean=} data.isNegative    If true, the duration is negative\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  }\n\n  /**\n   * The weeks in this duration\n   * @type {Number}\n   * @default 0\n   */\n  weeks = 0;\n\n  /**\n   * The days in this duration\n   * @type {Number}\n   * @default 0\n   */\n  days = 0;\n\n  /**\n   * The days in this duration\n   * @type {Number}\n   * @default 0\n   */\n  hours = 0;\n\n  /**\n   * The minutes in this duration\n   * @type {Number}\n   * @default 0\n   */\n  minutes = 0;\n\n  /**\n   * The seconds in this duration\n   * @type {Number}\n   * @default 0\n   */\n  seconds = 0;\n\n  /**\n   * The seconds in this duration\n   * @type {Boolean}\n   * @default false\n   */\n  isNegative = false;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalduration\"\n   */\n  icalclass = \"icalduration\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"duration\"\n   */\n  icaltype = \"duration\";\n\n  /**\n   * Returns a clone of the duration object.\n   *\n   * @return {Duration}      The cloned object\n   */\n  clone() {\n    return Duration.fromData(this);\n  }\n\n  /**\n   * The duration value expressed as a number of seconds.\n   *\n   * @return {Number}             The duration value in seconds\n   */\n  toSeconds() {\n    let seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +\n                  86400 * this.days + 7 * 86400 * this.weeks;\n    return (this.isNegative ? -seconds : seconds);\n  }\n\n  /**\n   * Reads the passed seconds value into this duration object. Afterwards,\n   * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n   * accordingly.\n   *\n   * @param {Number} aSeconds     The duration value in seconds\n   * @return {Duration}           Returns this instance\n   */\n  fromSeconds(aSeconds) {\n    let secs = Math.abs(aSeconds);\n\n    this.isNegative = (aSeconds < 0);\n    this.days = trunc(secs / 86400);\n\n    // If we have a flat number of weeks, use them.\n    if (this.days % 7 == 0) {\n      this.weeks = this.days / 7;\n      this.days = 0;\n    } else {\n      this.weeks = 0;\n    }\n\n    secs -= (this.days + 7 * this.weeks) * 86400;\n\n    this.hours = trunc(secs / 3600);\n    secs -= this.hours * 3600;\n\n    this.minutes = trunc(secs / 60);\n    secs -= this.minutes * 60;\n\n    this.seconds = secs;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} aData                An object with members of the duration\n   * @param {Number=} aData.weeks         Duration in weeks\n   * @param {Number=} aData.days          Duration in days\n   * @param {Number=} aData.hours         Duration in hours\n   * @param {Number=} aData.minutes       Duration in minutes\n   * @param {Number=} aData.seconds       Duration in seconds\n   * @param {Boolean=} aData.isNegative   If true, the duration is negative\n   */\n  fromData(aData) {\n    for (let prop of DATA_PROPS_TO_COPY) {\n      if (aData && prop in aData) {\n        this[prop] = aData[prop];\n      } else {\n        this[prop] = 0;\n      }\n    }\n  }\n\n  /**\n   * Resets the duration instance to the default values, i.e. PT0S\n   */\n  reset() {\n    this.isNegative = false;\n    this.weeks = 0;\n    this.days = 0;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n  }\n\n  /**\n   * Compares the duration instance with another one.\n   *\n   * @param {Duration} aOther             The instance to compare with\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compare(aOther) {\n    let thisSeconds = this.toSeconds();\n    let otherSeconds = aOther.toSeconds();\n    return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n  }\n\n  /**\n   * Normalizes the duration instance. For example, a duration with a value\n   * of 61 seconds will be normalized to 1 minute and 1 second.\n   */\n  normalize() {\n    this.fromSeconds(this.toSeconds());\n  }\n\n  /**\n   * The string representation of this duration.\n   * @return {String}\n   */\n  toString() {\n    if (this.toSeconds() == 0) {\n      return \"PT0S\";\n    } else {\n      let str = \"\";\n      if (this.isNegative) str += \"-\";\n      str += \"P\";\n      if (this.weeks) str += this.weeks + \"W\";\n      if (this.days) str += this.days + \"D\";\n\n      if (this.hours || this.minutes || this.seconds) {\n        str += \"T\";\n        if (this.hours) str += this.hours + \"H\";\n        if (this.minutes) str += this.minutes + \"M\";\n        if (this.seconds) str += this.seconds + \"S\";\n      }\n      return str;\n    }\n  }\n\n  /**\n   * The iCalendar string representation of this duration.\n   * @return {String}\n   */\n  toICALString() {\n    return this.toString();\n  }\n}\n\n/**\n * Internal helper function to handle a chunk of a duration.\n *\n * @private\n * @param {String} letter type of duration chunk\n * @param {String} number numeric value or -/+\n * @param {Object} dict target to assign values to\n */\nfunction parseDurationChunk(letter, number, object) {\n  let type;\n  switch (letter) {\n    case 'P':\n      if (number && number === '-') {\n        object.isNegative = true;\n      } else {\n        object.isNegative = false;\n      }\n      // period\n      break;\n    case 'D':\n      type = 'days';\n      break;\n    case 'W':\n      type = 'weeks';\n      break;\n    case 'H':\n      type = 'hours';\n      break;\n    case 'M':\n      type = 'minutes';\n      break;\n    case 'S':\n      type = 'seconds';\n      break;\n    default:\n      // Not a valid chunk\n      return 0;\n  }\n\n  if (type) {\n    if (!number && number !== 0) {\n      throw new Error(\n        'invalid duration value: Missing number before \"' + letter + '\"'\n      );\n    }\n    let num = parseInt(number, 10);\n    if (isStrictlyNaN(num)) {\n      throw new Error(\n        'invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"'\n      );\n    }\n    object[type] = num;\n  }\n\n  return 1;\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n */\n\n/**\n * @classdesc\n * iCalendar Time representation (similar to JS Date object).  Fully\n * independent of system (OS) timezone / time.  Unlike JS Date, the month\n * January is 1, not zero.\n *\n * @example\n * var time = new ICAL.Time({\n *   year: 2012,\n *   month: 10,\n *   day: 11\n *   minute: 0,\n *   second: 0,\n *   isDate: false\n * });\n *\n *\n * @memberof ICAL\n*/\nclass Time {\n  static _dowCache = {};\n  static _wnCache = {};\n\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n  static daysInMonth(month, year) {\n    let _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let days = 30;\n\n    if (month < 1 || month > 12) return days;\n\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += Time.isLeapYear(year);\n    }\n\n    return days;\n  }\n\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n  static isLeapYear(year) {\n    if (year <= 1752) {\n      return ((year % 4) == 0);\n    } else {\n      return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));\n    }\n  }\n\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {Time}                 The created instance with the calculated date\n   */\n  static fromDayOfYear(aDayOfYear, aYear) {\n    let year = aYear;\n    let doy = aDayOfYear;\n    let tt = new Time();\n    tt.auto_normalize = false;\n    let is_leap = (Time.isLeapYear(year) ? 1 : 0);\n\n    if (doy < 1) {\n      year--;\n      is_leap = (Time.isLeapYear(year) ? 1 : 0);\n      doy += Time.daysInYearPassedMonth[is_leap][12];\n      return Time.fromDayOfYear(doy, year);\n    } else if (doy > Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = (Time.isLeapYear(year) ? 1 : 0);\n      doy -= Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (let month = 11; month >= 0; month--) {\n      if (doy > Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {Time}             The date/time instance\n   */\n  static fromStringv2(str) {\n    return new Time({\n      year: parseInt(str.slice(0, 4), 10),\n      month: parseInt(str.slice(5, 7), 10),\n      day: parseInt(str.slice(8, 10), 10),\n      isDate: true\n    });\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {Time}             The date/time instance\n   */\n  static fromDateString(aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new Time({\n      year: strictParseInt(aValue.slice(0, 4)),\n      month: strictParseInt(aValue.slice(5, 7)),\n      day: strictParseInt(aValue.slice(8, 10)),\n      isDate: true\n    });\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {Property=} prop        The property the date belongs to\n   * @return {Time}                 The date/time instance\n   */\n  static fromDateTimeString(aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error(\n        'invalid date-time value: \"' + aValue + '\"'\n      );\n    }\n\n    let zone;\n    let zoneId;\n\n    if (aValue[19] && aValue[19] === 'Z') {\n      zone = Timezone.utcTimezone;\n    } else if (prop) {\n      zoneId = prop.getParameter('tzid');\n\n      if (prop.parent) {\n        if (prop.parent.name === 'standard' || prop.parent.name === 'daylight') {\n          // Per RFC 5545 3.8.2.4 and 3.8.2.2, start/end date-times within\n          // these components MUST be specified in local time.\n          zone = Timezone.localTimezone;\n        } else if (zoneId) {\n          // If the desired time zone is defined within the component tree,\n          // fetch its definition and prefer that.\n          zone = prop.parent.getTimeZoneByID(zoneId);\n        }\n      }\n    }\n\n    const timeData = {\n      year: strictParseInt(aValue.slice(0, 4)),\n      month: strictParseInt(aValue.slice(5, 7)),\n      day: strictParseInt(aValue.slice(8, 10)),\n      hour: strictParseInt(aValue.slice(11, 13)),\n      minute: strictParseInt(aValue.slice(14, 16)),\n      second: strictParseInt(aValue.slice(17, 19)),\n    };\n\n    // Although RFC 5545 requires that all TZIDs used within a file have a\n    // corresponding time zone definition, we may not be parsing the full file\n    // or we may be dealing with a non-compliant file; in either case, we can\n    // check our own time zone service for the TZID in a last-ditch effort.\n    if (zoneId && !zone) {\n      timeData.timezone = zoneId;\n    }\n\n    // 2012-10-10T10:10:10(Z)?\n    return new Time(timeData, zone);\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {Property=} prop        The property the date belongs to\n   * @return {Time}                 The date/time instance\n   */\n  static fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return Time.fromDateString(aValue);\n    }\n  }\n\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate             The Javascript Date to read, or null to reset\n   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used\n   */\n  static fromJSDate(aDate, useUTC) {\n    let tt = new Time();\n    return tt.fromJSDate(aDate, useUTC);\n  }\n\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {Timezone=} aZone         Timezone this position occurs in\n   */\n  static fromData = function fromData(aData, aZone) {\n    let t = new Time();\n    return t.fromData(aData, aZone);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * The instance is “floating” - has no timezone relation.\n   * To create an instance considering the time zone, call\n   * ICAL.Time.fromJSDate(new Date(), true)\n   * @return {Time}\n   */\n  static now() {\n    return Time.fromJSDate(new Date(), false);\n  }\n\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {weekDay=} aWeekStart           The week start weekday, used for calculation.\n   * @return {Time}                         The date on which week number 1 starts\n   */\n  static weekOneStarts(aYear, aWeekStart) {\n    let t = Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n\n    let dow = t.dayOfWeek();\n    let wkst = aWeekStart || Time.DEFAULT_WEEK_START;\n    if (dow > Time.THURSDAY) {\n      t.day += 7;\n    }\n    if (wkst > Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n\n    return t;\n  }\n\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  static getDominicalLetter(yr) {\n    let LTRS = \"GFEDCBA\";\n    let dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    let isLeap = Time.isLeapYear(yr);\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  }\n\n  static #epochTime = null;\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {Time}\n   * @constant\n   * @instance\n   */\n  static get epochTime() {\n    if (!this.#epochTime) {\n      this.#epochTime = Time.fromData({\n        year: 1970,\n        month: 1,\n        day: 1,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        isDate: false,\n        timezone: \"Z\"\n      });\n    }\n    return this.#epochTime;\n  }\n\n  static _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  }\n\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n  static daysInYearPassedMonth = [\n    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],\n    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]\n  ];\n\n  static SUNDAY = 1;\n  static MONDAY = 2;\n  static TUESDAY = 3;\n  static WEDNESDAY = 4;\n  static THURSDAY = 5;\n  static FRIDAY = 6;\n  static SATURDAY = 7;\n\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n  static DEFAULT_WEEK_START = 2; // MONDAY\n\n  /**\n   * Creates a new ICAL.Time instance.\n   *\n   * @param {Object} data           Time initialization\n   * @param {Number=} data.year     The year for this date\n   * @param {Number=} data.month    The month for this date\n   * @param {Number=} data.day      The day for this date\n   * @param {Number=} data.hour     The hour for this date\n   * @param {Number=} data.minute   The minute for this date\n   * @param {Number=} data.second   The second for this date\n   * @param {Boolean=} data.isDate  If true, the instance represents a date (as\n   *                                  opposed to a date-time)\n   * @param {Timezone} zone         timezone this position occurs in\n   */\n  constructor(data, zone) {\n    this.wrappedJSObject = this;\n    let time = this._time = Object.create(null);\n\n    /* time defaults */\n    time.year = 0;\n    time.month = 1;\n    time.day = 1;\n    time.hour = 0;\n    time.minute = 0;\n    time.second = 0;\n    time.isDate = false;\n\n    this.fromData(data, zone);\n  }\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icaltime\"\n   */\n  icalclass = \"icaltime\";\n  _cachedUnixTime = null;\n\n  /**\n   * The type name, to be used in the jCal object. This value may change and\n   * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n   * @type {String}\n   * @default \"date-time\"\n   */\n  get icaltype() {\n    return this.isDate ? 'date' : 'date-time';\n  }\n\n  /**\n   * The timezone for this time.\n   * @type {Timezone}\n   */\n  zone = null;\n\n  /**\n   * Internal uses to indicate that a change has been made and the next read\n   * operation must attempt to normalize the value (for example changing the\n   * day to 33).\n   *\n   * @type {Boolean}\n   * @private\n   */\n  _pendingNormalization = false;\n\n  /**\n   * Returns a clone of the time object.\n   *\n   * @return {Time}              The cloned object\n   */\n  clone() {\n    return new Time(this._time, this.zone);\n  }\n\n  /**\n   * Reset the time instance to epoch time\n   */\n  reset() {\n    this.fromData(Time.epochTime);\n    this.zone = Timezone.utcTimezone;\n  }\n\n  /**\n   * Reset the time instance to the given date/time values.\n   *\n   * @param {Number} year             The year to set\n   * @param {Number} month            The month to set\n   * @param {Number} day              The day to set\n   * @param {Number} hour             The hour to set\n   * @param {Number} minute           The minute to set\n   * @param {Number} second           The second to set\n   * @param {Timezone} timezone       The timezone to set\n   */\n  resetTo(year, month, day, hour, minute, second, timezone) {\n    this.fromData({\n      year: year,\n      month: month,\n      day: day,\n      hour: hour,\n      minute: minute,\n      second: second,\n      zone: timezone\n    });\n  }\n\n  /**\n   * Set up the current instance from the Javascript date value.\n   *\n   * @param {?Date} aDate             The Javascript Date to read, or null to reset\n   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used\n   */\n  fromJSDate(aDate, useUTC) {\n    if (!aDate) {\n      this.reset();\n    } else {\n      if (useUTC) {\n        this.zone = Timezone.utcTimezone;\n        this.year = aDate.getUTCFullYear();\n        this.month = aDate.getUTCMonth() + 1;\n        this.day = aDate.getUTCDate();\n        this.hour = aDate.getUTCHours();\n        this.minute = aDate.getUTCMinutes();\n        this.second = aDate.getUTCSeconds();\n      } else {\n        this.zone = Timezone.localTimezone;\n        this.year = aDate.getFullYear();\n        this.month = aDate.getMonth() + 1;\n        this.day = aDate.getDate();\n        this.hour = aDate.getHours();\n        this.minute = aDate.getMinutes();\n        this.second = aDate.getSeconds();\n      }\n    }\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {Timezone=} aZone         Timezone this position occurs in\n   */\n  fromData(aData, aZone) {\n    if (aData) {\n      for (let [key, value] of Object.entries(aData)) {\n          // ical type cannot be set\n          if (key === 'icaltype') continue;\n        this[key] = value;\n      }\n    }\n\n    if (aZone) {\n      this.zone = aZone;\n    }\n\n    if (aData && !(\"isDate\" in aData)) {\n      this.isDate = !(\"hour\" in aData);\n    } else if (aData && (\"isDate\" in aData)) {\n      this.isDate = aData.isDate;\n    }\n\n    if (aData && \"timezone\" in aData) {\n      let zone = TimezoneService.get(\n        aData.timezone\n      );\n\n      this.zone = zone || Timezone.localTimezone;\n    }\n\n    if (aData && \"zone\" in aData) {\n      this.zone = aData.zone;\n    }\n\n    if (!this.zone) {\n      this.zone = Timezone.localTimezone;\n    }\n\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Calculate the day of week.\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {weekDay}\n   */\n  dayOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n    if (dowCacheKey in Time._dowCache) {\n      return Time._dowCache[dowCacheKey];\n    }\n\n    // Using Zeller's algorithm\n    let q = this.day;\n    let m = this.month + (this.month < 3 ? 12 : 0);\n    let Y = this.year - (this.month < 3 ? 1 : 0);\n\n    let h = (q + Y + trunc(((m + 1) * 26) / 10) + trunc(Y / 4));\n    { // eslint-disable-line no-constant-condition\n      h += trunc(Y / 100) * 6 + trunc(Y / 400);\n    }\n\n    // Normalize to 1 = wkst\n    h = ((h + 7 - firstDow) % 7) + 1;\n    Time._dowCache[dowCacheKey] = h;\n    return h;\n  }\n\n  /**\n   * Calculate the day of year.\n   * @return {Number}\n   */\n  dayOfYear() {\n    let is_leap = (Time.isLeapYear(this.year) ? 1 : 0);\n    let diypm = Time.daysInYearPassedMonth;\n    return diypm[is_leap][this.month - 1] + this.day;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * week. The resulting ICAL.Time instance is of icaltype date, even if this\n   * is a date-time.\n   *\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Time}      The start of the week (cloned)\n   */\n  startOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let result = this.clone();\n    result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the week.\n   * The resulting ICAL.Time instance is of icaltype date, even if this is a\n   * date-time.\n   *\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Time}      The end of the week (cloned)\n   */\n  endOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let result = this.clone();\n    result.day += (7 - this.dayOfWeek() + firstDow - Time.SUNDAY) % 7;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * month. The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The start of the month (cloned)\n   */\n  startOfMonth() {\n    let result = this.clone();\n    result.day = 1;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the\n   * month.  The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The end of the month (cloned)\n   */\n  endOfMonth() {\n    let result = this.clone();\n    result.day = Time.daysInMonth(result.month, result.year);\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * year. The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The start of the year (cloned)\n   */\n  startOfYear() {\n    let result = this.clone();\n    result.day = 1;\n    result.month = 1;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the\n   * year.  The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The end of the year (cloned)\n   */\n  endOfYear() {\n    let result = this.clone();\n    result.day = 31;\n    result.month = 12;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * First calculates the start of the week, then returns the day of year for\n   * this date. If the day falls into the previous year, the day is zero or negative.\n   *\n   * @param {weekDay=} aFirstDayOfWeek\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}     The calculated day of year\n   */\n  startDoyWeek(aFirstDayOfWeek) {\n    let firstDow = aFirstDayOfWeek || Time.SUNDAY;\n    let delta = this.dayOfWeek() - firstDow;\n    if (delta < 0) delta += 7;\n    return this.dayOfYear() - delta;\n  }\n\n  /**\n   * Get the dominical letter for the current year. Letters range from A - G\n   * for common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  getDominicalLetter() {\n    return Time.getDominicalLetter(this.year);\n  }\n\n  /**\n   * Finds the nthWeekDay relative to the current month (not day).  The\n   * returned value is a day relative the month that this month belongs to so\n   * 1 would indicate the first of the month and 40 would indicate a day in\n   * the following month.\n   *\n   * @param {Number} aDayOfWeek   Day of the week see the day name constants\n   * @param {Number} aPos         Nth occurrence of a given week day values\n   *        of 1 and 0 both indicate the first weekday of that type. aPos may\n   *        be either positive or negative\n   *\n   * @return {Number} numeric value indicating a day relative\n   *                   to the current month of this time object\n   */\n  nthWeekDay(aDayOfWeek, aPos) {\n    let daysInMonth = Time.daysInMonth(this.month, this.year);\n    let weekday;\n    let pos = aPos;\n\n    let start = 0;\n\n    let otherDay = this.clone();\n\n    if (pos >= 0) {\n      otherDay.day = 1;\n\n      // because 0 means no position has been given\n      // 1 and 0 indicate the same day.\n      if (pos != 0) {\n        // remove the extra numeric value\n        pos--;\n      }\n\n      // set current start offset to current day.\n      start = otherDay.day;\n\n      // find the current day of week\n      let startDow = otherDay.dayOfWeek();\n\n      // calculate the difference between current\n      // day of the week and desired day of the week\n      let offset = aDayOfWeek - startDow;\n\n\n      // if the offset goes into the past\n      // week we add 7 so it goes into the next\n      // week. We only want to go forward in time here.\n      if (offset < 0)\n        // this is really important otherwise we would\n        // end up with dates from in the past.\n        offset += 7;\n\n      // add offset to start so start is the same\n      // day of the week as the desired day of week.\n      start += offset;\n\n      // because we are going to add (and multiply)\n      // the numeric value of the day we subtract it\n      // from the start position so not to add it twice.\n      start -= aDayOfWeek;\n\n      // set week day\n      weekday = aDayOfWeek;\n    } else {\n\n      // then we set it to the last day in the current month\n      otherDay.day = daysInMonth;\n\n      // find the ends weekday\n      let endDow = otherDay.dayOfWeek();\n\n      pos++;\n\n      weekday = (endDow - aDayOfWeek);\n\n      if (weekday < 0) {\n        weekday += 7;\n      }\n\n      weekday = daysInMonth - weekday;\n    }\n\n    weekday += pos * 7;\n\n    return start + weekday;\n  }\n\n  /**\n   * Checks if current time is the nth weekday, relative to the current\n   * month.  Will always return false when rule resolves outside of current\n   * month.\n   *\n   * @param {weekDay} aDayOfWeek                 Day of week to check\n   * @param {Number} aPos                        Relative position\n   * @return {Boolean}                           True, if it is the nth weekday\n   */\n  isNthWeekDay(aDayOfWeek, aPos) {\n    let dow = this.dayOfWeek();\n\n    if (aPos === 0 && dow === aDayOfWeek) {\n      return true;\n    }\n\n    // get pos\n    let day = this.nthWeekDay(aDayOfWeek, aPos);\n\n    if (day === this.day) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Calculates the ISO 8601 week number. The first week of a year is the\n   * week that contains the first Thursday. The year can have 53 weeks, if\n   * January 1st is a Friday.\n   *\n   * Note there are regions where the first week of the year is the one that\n   * starts on January 1st, which may offset the week number. Also, if a\n   * different week start is specified, this will also affect the week\n   * number.\n   *\n   * @see Time.weekOneStarts\n   * @param {weekDay} aWeekStart                  The weekday the week starts with\n   * @return {Number}                             The ISO week number\n   */\n  weekNumber(aWeekStart) {\n    let wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n    if (wnCacheKey in Time._wnCache) {\n      return Time._wnCache[wnCacheKey];\n    }\n    // This function courtesty of Julian Bucknall, published under the MIT license\n    // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n    // plus some fixes to be able to use different week starts.\n    let week1;\n\n    let dt = this.clone();\n    dt.isDate = true;\n    let isoyear = this.year;\n\n    if (dt.month == 12 && dt.day > 25) {\n      week1 = Time.weekOneStarts(isoyear + 1, aWeekStart);\n      if (dt.compare(week1) < 0) {\n        week1 = Time.weekOneStarts(isoyear, aWeekStart);\n      } else {\n        isoyear++;\n      }\n    } else {\n      week1 = Time.weekOneStarts(isoyear, aWeekStart);\n      if (dt.compare(week1) < 0) {\n        week1 = Time.weekOneStarts(--isoyear, aWeekStart);\n      }\n    }\n\n    let daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);\n    let answer = trunc(daysBetween / 7) + 1;\n    Time._wnCache[wnCacheKey] = answer;\n    return answer;\n  }\n\n  /**\n   * Adds the duration to the current time. The instance is modified in\n   * place.\n   *\n   * @param {Duration} aDuration         The duration to add\n   */\n  addDuration(aDuration) {\n    let mult = (aDuration.isNegative ? -1 : 1);\n\n    // because of the duration optimizations it is much\n    // more efficient to grab all the values up front\n    // then set them directly (which will avoid a normalization call).\n    // So we don't actually normalize until we need it.\n    let second = this.second;\n    let minute = this.minute;\n    let hour = this.hour;\n    let day = this.day;\n\n    second += mult * aDuration.seconds;\n    minute += mult * aDuration.minutes;\n    hour += mult * aDuration.hours;\n    day += mult * aDuration.days;\n    day += mult * 7 * aDuration.weeks;\n\n    this.second = second;\n    this.minute = minute;\n    this.hour = hour;\n    this.day = day;\n\n    this._cachedUnixTime = null;\n  }\n\n  /**\n   * Subtract the date details (_excluding_ timezone).  Useful for finding\n   * the relative difference between two time objects excluding their\n   * timezone differences.\n   *\n   * @param {Time} aDate     The date to subtract\n   * @return {Duration}      The difference as a duration\n   */\n  subtractDate(aDate) {\n    let unixTime = this.toUnixTime() + this.utcOffset();\n    let other = aDate.toUnixTime() + aDate.utcOffset();\n    return Duration.fromSeconds(unixTime - other);\n  }\n\n  /**\n   * Subtract the date details, taking timezones into account.\n   *\n   * @param {Time} aDate  The date to subtract\n   * @return {Duration}   The difference in duration\n   */\n  subtractDateTz(aDate) {\n    let unixTime = this.toUnixTime();\n    let other = aDate.toUnixTime();\n    return Duration.fromSeconds(unixTime - other);\n  }\n\n  /**\n   * Compares the ICAL.Time instance with another one.\n   *\n   * @param {Duration} aOther        The instance to compare with\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compare(other) {\n    let a = this.toUnixTime();\n    let b = other.toUnixTime();\n\n    if (a > b) return 1;\n    if (b > a) return -1;\n    return 0;\n  }\n\n  /**\n   * Compares only the date part of this instance with another one.\n   *\n   * @param {Duration} other              The instance to compare with\n   * @param {Timezone} tz                 The timezone to compare in\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compareDateOnlyTz(other, tz) {\n    let a = this.convertToZone(tz);\n    let b = other.convertToZone(tz);\n    let rc = 0;\n\n    if ((rc = Time._cmp_attr(a, b, \"year\")) != 0) return rc;\n    if ((rc = Time._cmp_attr(a, b, \"month\")) != 0) return rc;\n    if ((rc = Time._cmp_attr(a, b, \"day\")) != 0) return rc;\n\n    return rc;\n  }\n\n  /**\n   * Convert the instance into another timezone. The returned ICAL.Time\n   * instance is always a copy.\n   *\n   * @param {Timezone} zone      The zone to convert to\n   * @return {Time}              The copy, converted to the zone\n   */\n  convertToZone(zone) {\n    let copy = this.clone();\n    let zone_equals = (this.zone.tzid == zone.tzid);\n\n    if (!this.isDate && !zone_equals) {\n      Timezone.convert_time(copy, this.zone, zone);\n    }\n\n    copy.zone = zone;\n    return copy;\n  }\n\n  /**\n   * Calculates the UTC offset of the current date/time in the timezone it is\n   * in.\n   *\n   * @return {Number}     UTC offset in seconds\n   */\n  utcOffset() {\n    if (this.zone == Timezone.localTimezone ||\n        this.zone == Timezone.utcTimezone) {\n      return 0;\n    } else {\n      return this.zone.utcOffset(this);\n    }\n  }\n\n  /**\n   * Returns an RFC 5545 compliant ical representation of this object.\n   *\n   * @return {String} ical date/date-time\n   */\n  toICALString() {\n    let string = this.toString();\n\n    if (string.length > 10) {\n      return design$1.icalendar.value['date-time'].toICAL(string);\n    } else {\n      return design$1.icalendar.value.date.toICAL(string);\n    }\n  }\n\n  /**\n   * The string representation of this date/time, in jCal form\n   * (including : and - separators).\n   * @return {String}\n   */\n  toString() {\n    let result = this.year + '-' +\n                 pad2(this.month) + '-' +\n                 pad2(this.day);\n\n    if (!this.isDate) {\n        result += 'T' + pad2(this.hour) + ':' +\n                  pad2(this.minute) + ':' +\n                  pad2(this.second);\n\n      if (this.zone === Timezone.utcTimezone) {\n        result += 'Z';\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Converts the current instance to a Javascript date\n   * @return {Date}\n   */\n  toJSDate() {\n    if (this.zone == Timezone.localTimezone) {\n      if (this.isDate) {\n        return new Date(this.year, this.month - 1, this.day);\n      } else {\n        return new Date(this.year, this.month - 1, this.day,\n                        this.hour, this.minute, this.second, 0);\n      }\n    } else {\n      return new Date(this.toUnixTime() * 1000);\n    }\n  }\n\n  _normalize() {\n    if (this._time.isDate) {\n      this._time.hour = 0;\n      this._time.minute = 0;\n      this._time.second = 0;\n    }\n    this.adjust(0, 0, 0, 0);\n\n    return this;\n  }\n\n  /**\n   * Adjust the date/time by the given offset\n   *\n   * @param {Number} aExtraDays       The extra amount of days\n   * @param {Number} aExtraHours      The extra amount of hours\n   * @param {Number} aExtraMinutes    The extra amount of minutes\n   * @param {Number} aExtraSeconds    The extra amount of seconds\n   * @param {Number=} aTime           The time to adjust, defaults to the\n   *                                    current instance.\n   */\n  adjust(aExtraDays, aExtraHours, aExtraMinutes, aExtraSeconds, aTime) {\n\n    let minutesOverflow, hoursOverflow,\n        daysOverflow = 0, yearsOverflow = 0;\n\n    let second, minute, hour, day;\n    let daysInMonth;\n\n    let time = aTime || this._time;\n\n    if (!time.isDate) {\n      second = time.second + aExtraSeconds;\n      time.second = second % 60;\n      minutesOverflow = trunc(second / 60);\n      if (time.second < 0) {\n        time.second += 60;\n        minutesOverflow--;\n      }\n\n      minute = time.minute + aExtraMinutes + minutesOverflow;\n      time.minute = minute % 60;\n      hoursOverflow = trunc(minute / 60);\n      if (time.minute < 0) {\n        time.minute += 60;\n        hoursOverflow--;\n      }\n\n      hour = time.hour + aExtraHours + hoursOverflow;\n\n      time.hour = hour % 24;\n      daysOverflow = trunc(hour / 24);\n      if (time.hour < 0) {\n        time.hour += 24;\n        daysOverflow--;\n      }\n    }\n\n\n    // Adjust month and year first, because we need to know what month the day\n    // is in before adjusting it.\n    if (time.month > 12) {\n      yearsOverflow = trunc((time.month - 1) / 12);\n    } else if (time.month < 1) {\n      yearsOverflow = trunc(time.month / 12) - 1;\n    }\n\n    time.year += yearsOverflow;\n    time.month -= 12 * yearsOverflow;\n\n    // Now take care of the days (and adjust month if needed)\n    day = time.day + aExtraDays + daysOverflow;\n\n    if (day > 0) {\n      for (;;) {\n        daysInMonth = Time.daysInMonth(time.month, time.year);\n        if (day <= daysInMonth) {\n          break;\n        }\n\n        time.month++;\n        if (time.month > 12) {\n          time.year++;\n          time.month = 1;\n        }\n\n        day -= daysInMonth;\n      }\n    } else {\n      while (day <= 0) {\n        if (time.month == 1) {\n          time.year--;\n          time.month = 12;\n        } else {\n          time.month--;\n        }\n\n        day += Time.daysInMonth(time.month, time.year);\n      }\n    }\n\n    time.day = day;\n\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance from unix time, the number of seconds since\n   * January 1st, 1970.\n   *\n   * @param {Number} seconds      The seconds to set up with\n   */\n  fromUnixTime(seconds) {\n    this.zone = Timezone.utcTimezone;\n    // We could use `fromJSDate` here, but this is about twice as fast.\n    // We could also clone `epochTime` and use `adjust` for a more\n    // ical.js-centric approach, but this is about 100 times as fast.\n    let date = new Date(seconds * 1000);\n    this.year = date.getUTCFullYear();\n    this.month = date.getUTCMonth() + 1;\n    this.day = date.getUTCDate();\n    if (this._time.isDate) {\n      this.hour = 0;\n      this.minute = 0;\n      this.second = 0;\n    } else {\n      this.hour = date.getUTCHours();\n      this.minute = date.getUTCMinutes();\n      this.second = date.getUTCSeconds();\n    }\n\n    this._cachedUnixTime = null;\n  }\n\n  /**\n   * Converts the current instance to seconds since January 1st 1970.\n   *\n   * @return {Number}         Seconds since 1970\n   */\n  toUnixTime() {\n    if (this._cachedUnixTime !== null) {\n      return this._cachedUnixTime;\n    }\n    let offset = this.utcOffset();\n\n    // we use the offset trick to ensure\n    // that we are getting the actual UTC time\n    let ms = Date.UTC(\n      this.year,\n      this.month - 1,\n      this.day,\n      this.hour,\n      this.minute,\n      this.second - offset\n    );\n\n    // seconds\n    this._cachedUnixTime = ms / 1000;\n    return this._cachedUnixTime;\n  }\n\n  /**\n   * Converts time to into Object which can be serialized then re-created\n   * using the constructor.\n   *\n   * @example\n   * // toJSON will automatically be called\n   * var json = JSON.stringify(mytime);\n   *\n   * var deserialized = JSON.parse(json);\n   *\n   * var time = new ICAL.Time(deserialized);\n   *\n   * @return {Object}\n   */\n  toJSON() {\n    let copy = [\n      'year',\n      'month',\n      'day',\n      'hour',\n      'minute',\n      'second',\n      'isDate'\n    ];\n\n    let result = Object.create(null);\n\n    let i = 0;\n    let len = copy.length;\n    let prop;\n\n    for (; i < len; i++) {\n      prop = copy[i];\n      result[prop] = this[prop];\n    }\n\n    if (this.zone) {\n      result.timezone = this.zone.tzid;\n    }\n\n    return result;\n  }\n}\n\n(function setupNormalizeAttributes() {\n  // This needs to run before any instances are created!\n  function defineAttr(attr) {\n    Object.defineProperty(Time.prototype, attr, {\n      get: function getTimeAttr() {\n        if (this._pendingNormalization) {\n          this._normalize();\n          this._pendingNormalization = false;\n        }\n\n        return this._time[attr];\n      },\n      set: function setTimeAttr(val) {\n        // Check if isDate will be set and if was not set to normalize date.\n        // This avoids losing days when seconds, minutes and hours are zeroed\n        // what normalize will do when time is a date.\n        if (attr === \"isDate\" && val && !this._time.isDate) {\n          this.adjust(0, 0, 0, 0);\n        }\n        this._cachedUnixTime = null;\n        this._pendingNormalization = true;\n        this._time[attr] = val;\n      }\n    });\n\n  }\n\n    defineAttr(\"year\");\n    defineAttr(\"month\");\n    defineAttr(\"day\");\n    defineAttr(\"hour\");\n    defineAttr(\"minute\");\n    defineAttr(\"second\");\n    defineAttr(\"isDate\");\n})();\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").parserState} parserState\n * Imports the 'parserState' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\nconst CHAR = /[^ \\t]/;\nconst VALUE_DELIMITER = ':';\nconst PARAM_DELIMITER = ';';\nconst PARAM_NAME_DELIMITER = '=';\nconst DEFAULT_VALUE_TYPE$1 = 'unknown';\nconst DEFAULT_PARAM_TYPE = 'text';\nconst RFC6868_REPLACE_MAP$1 = { \"^'\": '\"', \"^n\": \"\\n\", \"^^\": \"^\" };\n\n/**\n * Parses iCalendar or vCard data into a raw jCal object. Consult\n * documentation on the {@tutorial layers|layers of parsing} for more\n * details.\n *\n * @function ICAL.parse\n * @memberof ICAL\n * @variation function\n * @todo Fix the API to be more clear on the return type\n * @param {String} input      The string data to parse\n * @return {Object|Object[]}  A single jCal object, or an array thereof\n */\nfunction parse(input) {\n  let state = {};\n  let root = state.component = [];\n\n  state.stack = [root];\n\n  parse._eachLine(input, function(err, line) {\n    parse._handleContentLine(line, state);\n  });\n\n\n  // when there are still items on the stack\n  // throw a fatal error, a component was not closed\n  // correctly in that case.\n  if (state.stack.length > 1) {\n    throw new ParserError(\n      'invalid ical body. component began but did not end'\n    );\n  }\n\n  state = null;\n\n  return (root.length == 1 ? root[0] : root);\n}\n\n/**\n * Parse an iCalendar property value into the jCal for a single property\n *\n * @function ICAL.parse.property\n * @param {String} str\n *   The iCalendar property string to parse\n * @param {designSet=} designSet\n *   The design data to use for this property\n * @return {Object}\n *   The jCal Object containing the property\n */\nparse.property = function(str, designSet) {\n  let state = {\n    component: [[], []],\n    designSet: designSet || design$1.defaultSet\n  };\n  parse._handleContentLine(str, state);\n  return state.component[1][0];\n};\n\n/**\n * Convenience method to parse a component. You can use ICAL.parse() directly\n * instead.\n *\n * @function ICAL.parse.component\n * @see ICAL.parse(function)\n * @param {String} str    The iCalendar component string to parse\n * @return {Object}       The jCal Object containing the component\n */\nparse.component = function(str) {\n  return parse(str);\n};\n\n\n/**\n * An error that occurred during parsing.\n *\n * @param {String} message        The error message\n * @memberof ICAL.parse\n * @extends {Error}\n */\nclass ParserError extends Error {\n  name = this.constructor.name;\n}\n\n// classes & constants\nparse.ParserError = ParserError;\n\n\n/**\n * Handles a single line of iCalendar/vCard, updating the state.\n *\n * @private\n * @function ICAL.parse._handleContentLine\n * @param {String} line          The content line to process\n * @param {parserState} state    The current state of the line parsing\n */\nparse._handleContentLine = function(line, state) {\n  // break up the parts of the line\n  let valuePos = line.indexOf(VALUE_DELIMITER);\n  let paramPos = line.indexOf(PARAM_DELIMITER);\n\n  let lastParamIndex;\n  let lastValuePos;\n\n  // name of property or begin/end\n  let name;\n  let value;\n  // params is only overridden if paramPos !== -1.\n  // we can't do params = params || {} later on\n  // because it sacrifices ops.\n  let params = {};\n\n  /**\n   * Different property cases\n   *\n   *\n   * 1. RRULE:FREQ=foo\n   *    // FREQ= is not a param but the value\n   *\n   * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n   *    // ROLE= is a param because : has not happened yet\n   */\n    // when the parameter delimiter is after the\n    // value delimiter then it is not a parameter.\n\n  if ((paramPos !== -1 && valuePos !== -1)) {\n    // when the parameter delimiter is after the\n    // value delimiter then it is not a parameter.\n    if (paramPos > valuePos) {\n      paramPos = -1;\n    }\n  }\n\n  let parsedParams;\n  if (paramPos !== -1) {\n    name = line.slice(0, Math.max(0, paramPos)).toLowerCase();\n    parsedParams = parse._parseParameters(line.slice(Math.max(0, paramPos)), 0, state.designSet);\n    if (parsedParams[2] == -1) {\n      throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n    }\n    params = parsedParams[0];\n    lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;\n    if ((lastValuePos =\n      line.slice(Math.max(0, lastParamIndex)).indexOf(VALUE_DELIMITER)) !== -1) {\n      value = line.slice(Math.max(0, lastParamIndex + lastValuePos + 1));\n    } else {\n      throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n    }\n  } else if (valuePos !== -1) {\n    // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n    name = line.slice(0, Math.max(0, valuePos)).toLowerCase();\n    value = line.slice(Math.max(0, valuePos + 1));\n\n    if (name === 'begin') {\n      let newComponent = [value.toLowerCase(), [], []];\n      if (state.stack.length === 1) {\n        state.component.push(newComponent);\n      } else {\n        state.component[2].push(newComponent);\n      }\n      state.stack.push(state.component);\n      state.component = newComponent;\n      if (!state.designSet) {\n        state.designSet = design$1.getDesignSet(state.component[0]);\n      }\n      return;\n    } else if (name === 'end') {\n      state.component = state.stack.pop();\n      return;\n    }\n    // If it is not begin/end, then this is a property with an empty value,\n    // which should be considered valid.\n  } else {\n    /**\n     * Invalid line.\n     * The rational to throw an error is we will\n     * never be certain that the rest of the file\n     * is sane and it is unlikely that we can serialize\n     * the result correctly either.\n     */\n    throw new ParserError(\n      'invalid line (no token \";\" or \":\") \"' + line + '\"'\n    );\n  }\n\n  let valueType;\n  let multiValue = false;\n  let structuredValue = false;\n  let propertyDetails;\n  let splitName;\n  let ungroupedName;\n\n  // fetch the ungrouped part of the name\n  if (state.designSet.propertyGroups && name.indexOf('.') !== -1) {\n    splitName = name.split('.');\n    params.group = splitName[0];\n    ungroupedName = splitName[1];\n  } else {\n    ungroupedName = name;\n  }\n\n  if (ungroupedName in state.designSet.property) {\n    propertyDetails = state.designSet.property[ungroupedName];\n\n    if ('multiValue' in propertyDetails) {\n      multiValue = propertyDetails.multiValue;\n    }\n\n    if ('structuredValue' in propertyDetails) {\n      structuredValue = propertyDetails.structuredValue;\n    }\n\n    if (value && 'detectType' in propertyDetails) {\n      valueType = propertyDetails.detectType(value);\n    }\n  }\n\n  // attempt to determine value\n  if (!valueType) {\n    if (!('value' in params)) {\n      if (propertyDetails) {\n        valueType = propertyDetails.defaultType;\n      } else {\n        valueType = DEFAULT_VALUE_TYPE$1;\n      }\n    } else {\n      // possible to avoid this?\n      valueType = params.value.toLowerCase();\n    }\n  }\n\n  delete params.value;\n\n  /**\n   * Note on `var result` juggling:\n   *\n   * I observed that building the array in pieces has adverse\n   * effects on performance, so where possible we inline the creation.\n   * It is a little ugly but resulted in ~2000 additional ops/sec.\n   */\n\n  let result;\n  if (multiValue && structuredValue) {\n    value = parse._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n    result = [ungroupedName, params, valueType, value];\n  } else if (multiValue) {\n    result = [ungroupedName, params, valueType];\n    parse._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n  } else if (structuredValue) {\n    value = parse._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n    result = [ungroupedName, params, valueType, value];\n  } else {\n    value = parse._parseValue(value, valueType, state.designSet, false);\n    result = [ungroupedName, params, valueType, value];\n  }\n  // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n  // component with as value 4.0, note that 3.0 does not have this requirement.\n  if (state.component[0] === 'vcard' && state.component[1].length === 0 &&\n          !(name === 'version' && value === '4.0')) {\n    state.designSet = design$1.getDesignSet(\"vcard3\");\n  }\n  state.component[1].push(result);\n};\n\n/**\n * Parse a value from the raw value into the jCard/jCal value.\n *\n * @private\n * @function ICAL.parse._parseValue\n * @param {String} value          Original value\n * @param {String} type           Type of value\n * @param {Object} designSet      The design data to use for this value\n * @return {Object} varies on type\n */\nparse._parseValue = function(value, type, designSet, structuredValue) {\n  if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n    return designSet.value[type].fromICAL(value, structuredValue);\n  }\n  return value;\n};\n\n/**\n * Parse parameters from a string to object.\n *\n * @function ICAL.parse._parseParameters\n * @private\n * @param {String} line           A single unfolded line\n * @param {Number} start         Position to start looking for properties\n * @param {Object} designSet      The design data to use for this property\n * @return {Object} key/value pairs\n */\nparse._parseParameters = function(line, start, designSet) {\n  let lastParam = start;\n  let pos = 0;\n  let delim = PARAM_NAME_DELIMITER;\n  let result = {};\n  let name, lcname;\n  let value, valuePos = -1;\n  let type, multiValue, mvdelim;\n\n  // find the next '=' sign\n  // use lastParam and pos to find name\n  // check if \" is used if so get value from \"->\"\n  // then increment pos to find next ;\n\n  while ((pos !== false) &&\n         (pos = line.indexOf(delim, pos + 1)) !== -1) {\n\n    name = line.slice(lastParam + 1, pos);\n    if (name.length == 0) {\n      throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n    }\n    lcname = name.toLowerCase();\n    mvdelim = false;\n    multiValue = false;\n\n    if (lcname in designSet.param && designSet.param[lcname].valueType) {\n      type = designSet.param[lcname].valueType;\n    } else {\n      type = DEFAULT_PARAM_TYPE;\n    }\n\n    if (lcname in designSet.param) {\n      multiValue = designSet.param[lcname].multiValue;\n      if (designSet.param[lcname].multiValueSeparateDQuote) {\n        mvdelim = parse._rfc6868Escape('\"' + multiValue + '\"');\n      }\n    }\n\n    let nextChar = line[pos + 1];\n    if (nextChar === '\"') {\n      valuePos = pos + 2;\n      pos = line.indexOf('\"', valuePos);\n      if (multiValue && pos != -1) {\n          let extendedValue = true;\n          while (extendedValue) {\n            if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n              pos = line.indexOf('\"', pos + 3);\n            } else {\n              extendedValue = false;\n            }\n          }\n        }\n      if (pos === -1) {\n        throw new ParserError(\n          'invalid line (no matching double quote) \"' + line + '\"'\n        );\n      }\n      value = line.slice(valuePos, pos);\n      lastParam = line.indexOf(PARAM_DELIMITER, pos);\n      let propValuePos = line.indexOf(VALUE_DELIMITER, pos);\n      // if either no next parameter or delimeter in property value, let's stop here\n      if (lastParam === -1 || (propValuePos !== -1 && lastParam > propValuePos)) {\n        pos = false;\n      }\n    } else {\n      valuePos = pos + 1;\n\n      // move to next \";\"\n      let nextPos = line.indexOf(PARAM_DELIMITER, valuePos);\n      let propValuePos = line.indexOf(VALUE_DELIMITER, valuePos);\n      if (propValuePos !== -1 && nextPos > propValuePos) {\n        // this is a delimiter in the property value, let's stop here\n        nextPos = propValuePos;\n        pos = false;\n      } else if (nextPos === -1) {\n        // no \";\"\n        if (propValuePos === -1) {\n          nextPos = line.length;\n        } else {\n          nextPos = propValuePos;\n        }\n        pos = false;\n      } else {\n        lastParam = nextPos;\n        pos = nextPos;\n      }\n\n      value = line.slice(valuePos, nextPos);\n    }\n\n    const length_before = value.length;\n    value = parse._rfc6868Escape(value);\n    valuePos += length_before - value.length;\n    if (multiValue) {\n      let delimiter = mvdelim || multiValue;\n      value = parse._parseMultiValue(value, delimiter, type, [], null, designSet);\n    } else {\n      value = parse._parseValue(value, type, designSet);\n    }\n\n    if (multiValue && (lcname in result)) {\n      if (Array.isArray(result[lcname])) {\n        result[lcname].push(value);\n      } else {\n        result[lcname] = [\n          result[lcname],\n          value\n        ];\n      }\n    } else {\n      result[lcname] = value;\n    }\n  }\n  return [result, value, valuePos];\n};\n\n/**\n * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n * hackers can disable the rfc6868 parsing if the really need to.\n *\n * @function ICAL.parse._rfc6868Escape\n * @param {String} val        The value to escape\n * @return {String}           The escaped value\n */\nparse._rfc6868Escape = function(val) {\n  return val.replace(/\\^['n^]/g, function(x) {\n    return RFC6868_REPLACE_MAP$1[x];\n  });\n};\n\n/**\n * Parse a multi value string. This function is used either for parsing\n * actual multi-value property's values, or for handling parameter values. It\n * can be used for both multi-value properties and structured value properties.\n *\n * @private\n * @function ICAL.parse._parseMultiValue\n * @param {String} buffer           The buffer containing the full value\n * @param {String} delim            The multi-value delimiter\n * @param {String} type             The value type to be parsed\n * @param {Array.<?>} result        The array to append results to, varies on value type\n * @param {String} innerMulti       The inner delimiter to split each value with\n * @param {designSet} designSet     The design data for this value\n * @return {?|Array.<?>}            Either an array of results, or the first result\n */\nparse._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n  let pos = 0;\n  let lastPos = 0;\n  let value;\n  if (delim.length === 0) {\n    return buffer;\n  }\n\n  // split each piece\n  while ((pos = unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n    value = buffer.slice(lastPos, pos);\n    if (innerMulti) {\n      value = parse._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parse._parseValue(value, type, designSet, structuredValue);\n    }\n    result.push(value);\n    lastPos = pos + delim.length;\n  }\n\n  // on the last piece take the rest of string\n  value = buffer.slice(lastPos);\n  if (innerMulti) {\n    value = parse._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n  } else {\n    value = parse._parseValue(value, type, designSet, structuredValue);\n  }\n  result.push(value);\n\n  return result.length == 1 ? result[0] : result;\n};\n\n/**\n * Process a complete buffer of iCalendar/vCard data line by line, correctly\n * unfolding content. Each line will be processed with the given callback\n *\n * @private\n * @function ICAL.parse._eachLine\n * @param {String} buffer                         The buffer to process\n * @param {function(?String, String)} callback    The callback for each line\n */\nparse._eachLine = function(buffer, callback) {\n  let len = buffer.length;\n  let lastPos = buffer.search(CHAR);\n  let pos = lastPos;\n  let line;\n  let firstChar;\n\n  let newlineOffset;\n\n  do {\n    pos = buffer.indexOf('\\n', lastPos) + 1;\n\n    if (pos > 1 && buffer[pos - 2] === '\\r') {\n      newlineOffset = 2;\n    } else {\n      newlineOffset = 1;\n    }\n\n    if (pos === 0) {\n      pos = len;\n      newlineOffset = 0;\n    }\n\n    firstChar = buffer[lastPos];\n\n    if (firstChar === ' ' || firstChar === '\\t') {\n      // add to line\n      line += buffer.slice(lastPos + 1, pos - newlineOffset);\n    } else {\n      if (line)\n        callback(null, line);\n      // push line\n      line = buffer.slice(lastPos, pos - newlineOffset);\n    }\n\n    lastPos = pos;\n  } while (pos !== len);\n\n  // extra ending line\n  line = line.trim();\n\n  if (line.length)\n    callback(null, line);\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\nconst OPTIONS = [\"tzid\", \"location\", \"tznames\", \"latitude\", \"longitude\"];\n\n/**\n * Timezone representation.\n *\n * @example\n * var vcalendar;\n * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n *\n * var timezone = new ICAL.Timezone({\n *   component: timezoneComp,\n *   tzid\n * });\n *\n * @memberof ICAL\n */\nclass Timezone {\n  static _compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;\n    else if (a.year > b.year) return 1;\n\n    if (a.month < b.month) return -1;\n    else if (a.month > b.month) return 1;\n\n    if (a.day < b.day) return -1;\n    else if (a.day > b.day) return 1;\n\n    if (a.hour < b.hour) return -1;\n    else if (a.hour > b.hour) return 1;\n\n    if (a.minute < b.minute) return -1;\n    else if (a.minute > b.minute) return 1;\n\n    if (a.second < b.second) return -1;\n    else if (a.second > b.second) return 1;\n\n    return 0;\n  }\n\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {Time} tt                  The time to convert\n   * @param {Timezone} from_zone       The source zone to convert from\n   * @param {Timezone} to_zone         The target zone to convert to\n   * @return {Time}                    The converted date/time object\n   */\n  static convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate ||\n        from_zone.tzid == to_zone.tzid ||\n        from_zone == Timezone.localTimezone ||\n        to_zone == Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    let utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, - utcOffset);\n\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n\n    return null;\n  }\n\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {Component|Object} aData options for class\n   * @param {String|Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  static fromData(aData) {\n    let tt = new Timezone();\n    return tt.fromData(aData);\n  }\n\n  /**\n   * The instance describing the UTC timezone\n   * @type {Timezone}\n   * @constant\n   * @instance\n   */\n  static #utcTimezone = null;\n  static get utcTimezone() {\n    if (!this.#utcTimezone) {\n      this.#utcTimezone = Timezone.fromData({\n        tzid: \"UTC\"\n      });\n    }\n    return this.#utcTimezone;\n  }\n\n  /**\n   * The instance describing the local timezone\n   * @type {Timezone}\n   * @constant\n   * @instance\n   */\n  static #localTimezone = null;\n  static get localTimezone() {\n    if (!this.#localTimezone) {\n      this.#localTimezone = Timezone.fromData({\n        tzid: \"floating\"\n      });\n    }\n    return this.#localTimezone;\n  }\n\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n  static adjust_change(change, days, hours, minutes, seconds) {\n    return Time.prototype.adjust.call(\n      change,\n      days,\n      hours,\n      minutes,\n      seconds,\n      change\n    );\n  }\n\n  static _minimumExpansionYear = -1;\n  static EXTRA_COVERAGE = 5;\n\n  /**\n   * Creates a new ICAL.Timezone instance, by passing in a tzid and component.\n   *\n   * @param {Component|Object} data options for class\n   * @param {String|Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  }\n\n\n  /**\n   * Timezone identifier\n   * @type {String}\n   */\n  tzid = \"\";\n\n  /**\n   * Timezone location\n   * @type {String}\n   */\n  location = \"\";\n\n  /**\n   * Alternative timezone name, for the string representation\n   * @type {String}\n   */\n  tznames = \"\";\n\n  /**\n   * The primary latitude for the timezone.\n   * @type {Number}\n   */\n  latitude = 0.0;\n\n  /**\n   * The primary longitude for the timezone.\n   * @type {Number}\n   */\n  longitude = 0.0;\n\n  /**\n   * The vtimezone component for this timezone.\n   * @type {Component}\n   */\n  component = null;\n\n  /**\n   * The year this timezone has been expanded to. All timezone transition\n   * dates until this year are known and can be used for calculation\n   *\n   * @private\n   * @type {Number}\n   */\n  expandedUntilYear = 0;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icaltimezone\"\n   */\n  icalclass = \"icaltimezone\";\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Component|Object} aData options for class\n   * @param {String|Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  fromData(aData) {\n    this.expandedUntilYear = 0;\n    this.changes = [];\n\n    if (aData instanceof Component) {\n      // Either a component is passed directly\n      this.component = aData;\n    } else {\n      // Otherwise the component may be in the data object\n      if (aData && \"component\" in aData) {\n        if (typeof aData.component == \"string\") {\n          // If a string was passed, parse it as a component\n          let jCal = parse(aData.component);\n          this.component = new Component(jCal);\n        } else if (aData.component instanceof Component) {\n          // If it was a component already, then just set it\n          this.component = aData.component;\n        } else {\n          // Otherwise just null out the component\n          this.component = null;\n        }\n      }\n\n      // Copy remaining passed properties\n      for (let prop of OPTIONS) {\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        }\n      }\n    }\n\n    // If we have a component but no TZID, attempt to get it from the\n    // component's properties.\n    if (this.component instanceof Component && !this.tzid) {\n      this.tzid = this.component.getFirstPropertyValue('tzid');\n    }\n\n    return this;\n  }\n\n  /**\n   * Finds the utcOffset the given time would occur in this timezone.\n   *\n   * @param {Time} tt         The time to check for\n   * @return {Number}         utc offset in seconds\n   */\n  utcOffset(tt) {\n    if (this == Timezone.utcTimezone || this == Timezone.localTimezone) {\n      return 0;\n    }\n\n    this._ensureCoverage(tt.year);\n\n    if (!this.changes.length) {\n      return 0;\n    }\n\n    let tt_change = {\n      year: tt.year,\n      month: tt.month,\n      day: tt.day,\n      hour: tt.hour,\n      minute: tt.minute,\n      second: tt.second\n    };\n\n    let change_num = this._findNearbyChange(tt_change);\n    let change_num_to_use = -1;\n    let step = 1;\n\n    // TODO: replace with bin search?\n    for (;;) {\n      let change = clone(this.changes[change_num], true);\n      if (change.utcOffset < change.prevUtcOffset) {\n        Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n      } else {\n        Timezone.adjust_change(change, 0, 0, 0,\n                                        change.prevUtcOffset);\n      }\n\n      let cmp = Timezone._compare_change_fn(tt_change, change);\n\n      if (cmp >= 0) {\n        change_num_to_use = change_num;\n      } else {\n        step = -1;\n      }\n\n      if (step == -1 && change_num_to_use != -1) {\n        break;\n      }\n\n      change_num += step;\n\n      if (change_num < 0) {\n        return 0;\n      }\n\n      if (change_num >= this.changes.length) {\n        break;\n      }\n    }\n\n    let zone_change = this.changes[change_num_to_use];\n    let utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n    if (utcOffset_change < 0 && change_num_to_use > 0) {\n      let tmp_change = clone(zone_change, true);\n      Timezone.adjust_change(tmp_change, 0, 0, 0, tmp_change.prevUtcOffset);\n\n      if (Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n        let prev_zone_change = this.changes[change_num_to_use - 1];\n\n        let want_daylight = false; // TODO\n\n        if (zone_change.is_daylight != want_daylight &&\n            prev_zone_change.is_daylight == want_daylight) {\n          zone_change = prev_zone_change;\n        }\n      }\n    }\n\n    // TODO return is_daylight?\n    return zone_change.utcOffset;\n  }\n\n  _findNearbyChange(change) {\n    // find the closest match\n    let idx = binsearchInsert(\n      this.changes,\n      change,\n      Timezone._compare_change_fn\n    );\n\n    if (idx >= this.changes.length) {\n      return this.changes.length - 1;\n    }\n\n    return idx;\n  }\n\n  _ensureCoverage(aYear) {\n    if (Timezone._minimumExpansionYear == -1) {\n      let today = Time.now();\n      Timezone._minimumExpansionYear = today.year;\n    }\n\n    let changesEndYear = aYear;\n    if (changesEndYear < Timezone._minimumExpansionYear) {\n      changesEndYear = Timezone._minimumExpansionYear;\n    }\n\n    changesEndYear += Timezone.EXTRA_COVERAGE;\n\n    if (!this.changes.length || this.expandedUntilYear < aYear) {\n      let subcomps = this.component.getAllSubcomponents();\n      let compLen = subcomps.length;\n      let compIdx = 0;\n\n      for (; compIdx < compLen; compIdx++) {\n        this._expandComponent(\n          subcomps[compIdx], changesEndYear, this.changes\n        );\n      }\n\n      this.changes.sort(Timezone._compare_change_fn);\n      this.expandedUntilYear = changesEndYear;\n    }\n  }\n\n  _expandComponent(aComponent, aYear, changes) {\n    if (!aComponent.hasProperty(\"dtstart\") ||\n        !aComponent.hasProperty(\"tzoffsetto\") ||\n        !aComponent.hasProperty(\"tzoffsetfrom\")) {\n      return null;\n    }\n\n    let dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n    let change;\n\n    function convert_tzoffset(offset) {\n      return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n    }\n\n    function init_changes() {\n      let changebase = {};\n      changebase.is_daylight = (aComponent.name == \"daylight\");\n      changebase.utcOffset = convert_tzoffset(\n        aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue()\n      );\n\n      changebase.prevUtcOffset = convert_tzoffset(\n        aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue()\n      );\n\n      return changebase;\n    }\n\n    if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n      change = init_changes();\n      change.year = dtstart.year;\n      change.month = dtstart.month;\n      change.day = dtstart.day;\n      change.hour = dtstart.hour;\n      change.minute = dtstart.minute;\n      change.second = dtstart.second;\n\n      Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n      changes.push(change);\n    } else {\n      let props = aComponent.getAllProperties(\"rdate\");\n      for (let rdate of props) {\n        let time = rdate.getFirstValue();\n        change = init_changes();\n\n        change.year = time.year;\n        change.month = time.month;\n        change.day = time.day;\n\n        if (time.isDate) {\n          change.hour = dtstart.hour;\n          change.minute = dtstart.minute;\n          change.second = dtstart.second;\n\n          if (dtstart.zone != Timezone.utcTimezone) {\n            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          }\n        } else {\n          change.hour = time.hour;\n          change.minute = time.minute;\n          change.second = time.second;\n\n          if (time.zone != Timezone.utcTimezone) {\n            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          }\n        }\n\n        changes.push(change);\n      }\n\n      let rrule = aComponent.getFirstProperty(\"rrule\");\n\n      if (rrule) {\n        rrule = rrule.getFirstValue();\n        change = init_changes();\n\n        if (rrule.until && rrule.until.zone == Timezone.utcTimezone) {\n          rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n          rrule.until.zone = Timezone.localTimezone;\n        }\n\n        let iterator = rrule.iterator(dtstart);\n\n        let occ;\n        while ((occ = iterator.next())) {\n          change = init_changes();\n          if (occ.year > aYear || !occ) {\n            break;\n          }\n\n          change.year = occ.year;\n          change.month = occ.month;\n          change.day = occ.day;\n          change.hour = occ.hour;\n          change.minute = occ.minute;\n          change.second = occ.second;\n          change.isDate = occ.isDate;\n\n          Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          changes.push(change);\n        }\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * The string representation of this timezone.\n   * @return {String}\n   */\n  toString() {\n    return (this.tznames ? this.tznames : this.tzid);\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\nlet zones = null;\n\n/**\n * @classdesc\n * Singleton class to contain timezones.  Right now it is all manual registry in\n * the future we may use this class to download timezone information or handle\n * loading pre-expanded timezones.\n *\n * @exports module:ICAL.TimezoneService\n * @memberof ICAL\n */\nconst TimezoneService = {\n  get count() {\n    if (zones === null) {\n      return 0;\n    }\n\n    return Object.keys(zones).length;\n  },\n\n  reset: function() {\n    zones = Object.create(null);\n    let utc = Timezone.utcTimezone;\n\n    zones.Z = utc;\n    zones.UTC = utc;\n    zones.GMT = utc;\n  },\n  _hard_reset: function() {\n    zones = null;\n  },\n\n  /**\n   * Checks if timezone id has been registered.\n   *\n   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n   * @return {Boolean}        False, when not present\n   */\n  has: function(tzid) {\n    if (zones === null) {\n      return false;\n    }\n\n    return !!zones[tzid];\n  },\n\n  /**\n   * Returns a timezone by its tzid if present.\n   *\n   * @param {String} tzid               Timezone identifier (e.g. America/Los_Angeles)\n   * @return {Timezone | undefined}     The timezone, or undefined if not found\n   */\n  get: function(tzid) {\n    if (zones === null) {\n      this.reset();\n    }\n\n    return zones[tzid];\n  },\n\n  /**\n   * Registers a timezone object or component.\n   *\n   * @param {Component|Timezone} timezone\n   *        The initialized zone or vtimezone.\n   *\n   * @param {String=} name\n   *        The name of the timezone. Defaults to the component's TZID if not\n   *        passed.\n   */\n  register: function(timezone, name) {\n    if (zones === null) {\n      this.reset();\n    }\n\n    // This avoids a breaking change by the change of argument order\n    // TODO remove in v3\n    if (typeof timezone === \"string\" && name instanceof Timezone) {\n      [timezone, name] = [name, timezone];\n    }\n\n    if (!name) {\n      if (timezone instanceof Timezone) {\n        name = timezone.tzid;\n      } else {\n        if (timezone.name === 'vtimezone') {\n          timezone = new Timezone(timezone);\n          name = timezone.tzid;\n        }\n      }\n    }\n\n    if (!name) {\n      throw new TypeError(\"Neither a timezone nor a name was passed\");\n    }\n\n    if (timezone instanceof Timezone) {\n      zones[name] = timezone;\n    } else {\n      throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n    }\n  },\n\n  /**\n   * Removes a timezone by its tzid from the list.\n   *\n   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n   * @return {?Timezone}      The removed timezone, or null if not registered\n   */\n  remove: function(tzid) {\n    if (zones === null) {\n      return null;\n    }\n\n    return (delete zones[tzid]);\n  }\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * Helper functions used in various places within ical.js\n * @module ICAL.helpers\n */\n\n/**\n * Compiles a list of all referenced TZIDs in all subcomponents and\n * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n * are referenced by a component, but a VTIMEZONE does not exist,\n * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n *\n * @param {Component} vcal     The top-level VCALENDAR component.\n * @return {Component}         The ICAL.Component that was passed in.\n */\nfunction updateTimezones(vcal) {\n  let allsubs, properties, vtimezones, reqTzid, i;\n\n  if (!vcal || vcal.name !== \"vcalendar\") {\n    //not a top-level vcalendar component\n    return vcal;\n  }\n\n  //Store vtimezone subcomponents in an object reference by tzid.\n  //Store properties from everything else in another array\n  allsubs = vcal.getAllSubcomponents();\n  properties = [];\n  vtimezones = {};\n  for (i = 0; i < allsubs.length; i++) {\n    if (allsubs[i].name === \"vtimezone\") {\n      let tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n      vtimezones[tzid] = allsubs[i];\n    } else {\n      properties = properties.concat(allsubs[i].getAllProperties());\n    }\n  }\n\n  //create an object with one entry for each required tz\n  reqTzid = {};\n  for (i = 0; i < properties.length; i++) {\n    let tzid = properties[i].getParameter(\"tzid\");\n    if (tzid) {\n      reqTzid[tzid] = true;\n    }\n  }\n\n  //delete any vtimezones that are not on the reqTzid list.\n  for (let [tzid, comp] of Object.entries(vtimezones)) {\n    if (!reqTzid[tzid]) {\n      vcal.removeSubcomponent(comp);\n    }\n  }\n\n  //create any missing, but registered timezones\n  for (let tzid of Object.keys(reqTzid)) {\n    if (!vtimezones[tzid] && TimezoneService.has(tzid)) {\n      vcal.addSubcomponent(TimezoneService.get(tzid).component);\n    }\n  }\n\n  return vcal;\n}\n\n/**\n * Checks if the given type is of the number type and also NaN.\n *\n * @param {Number} number     The number to check\n * @return {Boolean}          True, if the number is strictly NaN\n */\nfunction isStrictlyNaN(number) {\n  return typeof(number) === 'number' && isNaN(number);\n}\n\n/**\n * Parses a string value that is expected to be an integer, when the valid is\n * not an integer throws a decoration error.\n *\n * @param {String} string     Raw string input\n * @return {Number}           Parsed integer\n */\nfunction strictParseInt(string) {\n  let result = parseInt(string, 10);\n\n  if (isStrictlyNaN(result)) {\n    throw new Error(\n      'Could not extract integer from \"' + string + '\"'\n    );\n  }\n\n  return result;\n}\n\n/**\n * Creates or returns a class instance of a given type with the initialization\n * data if the data is not already an instance of the given type.\n *\n * @example\n * var time = new ICAL.Time(...);\n * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n *\n * (result instanceof ICAL.Time)\n * // => true\n *\n * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n * (result isntanceof ICAL.Time)\n * // => true\n *\n *\n * @param {Object} data       object initialization data\n * @param {Object} type       object type (like ICAL.Time)\n * @return {?}                An instance of the found type.\n */\nfunction formatClassType(data, type) {\n  if (typeof(data) === 'undefined') {\n    return undefined;\n  }\n\n  if (data instanceof type) {\n    return data;\n  }\n  return new type(data);\n}\n\n/**\n * Identical to indexOf but will only match values when they are not preceded\n * by a backslash character.\n *\n * @param {String} buffer         String to search\n * @param {String} search         Value to look for\n * @param {Number} pos            Start position\n * @return {Number}               The position, or -1 if not found\n */\nfunction unescapedIndexOf(buffer, search, pos) {\n  while ((pos = buffer.indexOf(search, pos)) !== -1) {\n    if (pos > 0 && buffer[pos - 1] === '\\\\') {\n      pos += 1;\n    } else {\n      return pos;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the index for insertion using binary search.\n *\n * @param {Array} list            The list to search\n * @param {?} seekVal             The value to insert\n * @param {function(?,?)} cmpfunc The comparison func, that can\n *                                  compare two seekVals\n * @return {Number}               The insert position\n */\nfunction binsearchInsert(list, seekVal, cmpfunc) {\n  if (!list.length)\n    return 0;\n\n  let low = 0, high = list.length - 1,\n      mid, cmpval;\n\n  while (low <= high) {\n    mid = low + Math.floor((high - low) / 2);\n    cmpval = cmpfunc(seekVal, list[mid]);\n\n    if (cmpval < 0)\n      high = mid - 1;\n    else if (cmpval > 0)\n      low = mid + 1;\n    else\n      break;\n  }\n\n  if (cmpval < 0)\n    return mid; // insertion is displacing, so use mid outright.\n  else if (cmpval > 0)\n    return mid + 1;\n  else\n    return mid;\n}\n\n/**\n * Clone the passed object or primitive. By default a shallow clone will be\n * executed.\n *\n * @param {*} aSrc            The thing to clone\n * @param {Boolean=} aDeep    If true, a deep clone will be performed\n * @return {*}                The copy of the thing\n */\nfunction clone(aSrc, aDeep) {\n  if (!aSrc || typeof aSrc != \"object\") {\n    return aSrc;\n  } else if (aSrc instanceof Date) {\n    return new Date(aSrc.getTime());\n  } else if (\"clone\" in aSrc) {\n    return aSrc.clone();\n  } else if (Array.isArray(aSrc)) {\n    let arr = [];\n    for (let i = 0; i < aSrc.length; i++) {\n      arr.push(aDeep ? clone(aSrc[i], true) : aSrc[i]);\n    }\n    return arr;\n  } else {\n    let obj = {};\n    for (let [name, value] of Object.entries(aSrc)) {\n      if (aDeep) {\n        obj[name] = clone(value, true);\n      } else {\n        obj[name] = value;\n      }\n    }\n    return obj;\n  }\n}\n\n/**\n * Performs iCalendar line folding. A line ending character is inserted and\n * the next line begins with a whitespace.\n *\n * @example\n * SUMMARY:This line will be fold\n *  ed right in the middle of a word.\n *\n * @param {String} aLine      The line to fold\n * @return {String}           The folded line\n */\nfunction foldline(aLine) {\n  let result = \"\";\n  let line = aLine || \"\", pos = 0, line_length = 0;\n  //pos counts position in line for the UTF-16 presentation\n  //line_length counts the bytes for the UTF-8 presentation\n  while (line.length) {\n    let cp = line.codePointAt(pos);\n    if (cp < 128) ++line_length;\n    else if (cp < 2048) line_length += 2;//needs 2 UTF-8 bytes\n    else if (cp < 65536) line_length += 3;\n    else line_length += 4; //cp is less than 1114112\n    if (line_length < ICALmodule.foldLength + 1)\n      pos += cp > 65535 ? 2 : 1;\n    else {\n      result += ICALmodule.newLineChar + \" \" + line.slice(0, Math.max(0, pos));\n      line = line.slice(Math.max(0, pos));\n      pos = line_length = 0;\n    }\n  }\n  return result.slice(ICALmodule.newLineChar.length + 1);\n}\n\n/**\n * Pads the given string or number with zeros so it will have at least two\n * characters.\n *\n * @param {String|Number} data    The string or number to pad\n * @return {String}               The number padded as a string\n */\nfunction pad2(data) {\n  if (typeof(data) !== 'string') {\n    // handle fractions.\n    if (typeof(data) === 'number') {\n      data = parseInt(data);\n    }\n    data = String(data);\n  }\n\n  let len = data.length;\n\n  switch (len) {\n    case 0:\n      return '00';\n    case 1:\n      return '0' + data;\n    default:\n      return data;\n  }\n}\n\n/**\n * Truncates the given number, correctly handling negative numbers.\n *\n * @param {Number} number     The number to truncate\n * @return {Number}           The truncated number\n */\nfunction trunc(number) {\n  return (number < 0 ? Math.ceil(number) : Math.floor(number));\n}\n\n/**\n * Poor-man's cross-browser object extension. Doesn't support all the\n * features, but enough for our usage. Note that the target's properties are\n * not overwritten with the source properties.\n *\n * @example\n * var child = ICAL.helpers.extend(parent, {\n *   \"bar\": 123\n * });\n *\n * @param {Object} source     The object to extend\n * @param {Object} target     The object to extend with\n * @return {Object}           Returns the target.\n */\nfunction extend(source, target) {\n  for (let key in source) {\n    let descr = Object.getOwnPropertyDescriptor(source, key);\n    if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n      Object.defineProperty(target, key, descr);\n    }\n  }\n  return target;\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  updateTimezones: updateTimezones,\n  isStrictlyNaN: isStrictlyNaN,\n  strictParseInt: strictParseInt,\n  formatClassType: formatClassType,\n  unescapedIndexOf: unescapedIndexOf,\n  binsearchInsert: binsearchInsert,\n  clone: clone,\n  foldline: foldline,\n  pad2: pad2,\n  trunc: trunc,\n  extend: extend\n});\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This class represents the \"utc-offset\" value type, with various calculation and manipulation\n * methods.\n *\n * @memberof ICAL\n */\nclass UtcOffset {\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {Duration}         The created utc-offset instance\n   */\n  static fromString(aString) {\n    // -05:00\n    let options = {};\n    //TODO: support seconds per rfc5545 ?\n    options.factor = (aString[0] === '+') ? 1 : -1;\n    options.hours = strictParseInt(aString.slice(1, 3));\n    options.minutes = strictParseInt(aString.slice(4, 6));\n\n    return new UtcOffset(options);\n  }\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n  static fromSeconds(aSeconds) {\n    let instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  }\n\n  /**\n   * Creates a new ICAL.UtcOffset instance.\n   *\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  constructor(aData) {\n    this.fromData(aData);\n  }\n\n  /**\n   * The hours in the utc-offset\n   * @type {Number}\n   */\n  hours = 0;\n\n  /**\n   * The minutes in the utc-offset\n   * @type {Number}\n   */\n  minutes = 0;\n\n  /**\n   * The sign of the utc offset, 1 for positive offset, -1 for negative\n   * offsets.\n   * @type {Number}\n   */\n  factor = 1;\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"utc-offset\"\n   */\n  icaltype = \"utc-offset\";\n\n  /**\n   * Returns a clone of the utc offset object.\n   *\n   * @return {UtcOffset}     The cloned object\n   */\n  clone() {\n    return UtcOffset.fromSeconds(this.toSeconds());\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  fromData(aData) {\n    if (aData) {\n      for (let [key, value] of Object.entries(aData)) {\n        this[key] = value;\n      }\n    }\n    this._normalize();\n  }\n\n  /**\n   * Sets up the current instance from the given seconds value. The seconds\n   * value is truncated to the minute. Offsets are wrapped when the world\n   * ends, the hour after UTC+14:00 is UTC-12:00.\n   *\n   * @param {Number} aSeconds         The seconds to convert into an offset\n   */\n  fromSeconds(aSeconds) {\n    let secs = Math.abs(aSeconds);\n\n    this.factor = aSeconds < 0 ? -1 : 1;\n    this.hours = trunc(secs / 3600);\n\n    secs -= (this.hours * 3600);\n    this.minutes = trunc(secs / 60);\n    return this;\n  }\n\n  /**\n   * Convert the current offset to a value in seconds\n   *\n   * @return {Number}                 The offset in seconds\n   */\n  toSeconds() {\n    return this.factor * (60 * this.minutes + 3600 * this.hours);\n  }\n\n  /**\n   * Compare this utc offset with another one.\n   *\n   * @param {UtcOffset} other             The other offset to compare with\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compare(other) {\n    let a = this.toSeconds();\n    let b = other.toSeconds();\n    return (a > b) - (b > a);\n  }\n\n  _normalize() {\n    // Range: 97200 seconds (with 1 hour inbetween)\n    let secs = this.toSeconds();\n    let factor = this.factor;\n    while (secs < -43200) { // = UTC-12:00\n      secs += 97200;\n    }\n    while (secs > 50400) { // = UTC+14:00\n      secs -= 97200;\n    }\n\n    this.fromSeconds(secs);\n\n    // Avoid changing the factor when on zero seconds\n    if (secs == 0) {\n      this.factor = factor;\n    }\n  }\n\n  /**\n   * The iCalendar string representation of this utc-offset.\n   * @return {String}\n   */\n  toICALString() {\n    return design$1.icalendar.value['utc-offset'].toICAL(this.toString());\n  }\n\n  /**\n   * The string representation of this utc-offset.\n   * @return {String}\n   */\n  toString() {\n    return (this.factor == 1 ? \"+\" : \"-\") + pad2(this.hours) + ':' + pad2(this.minutes);\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * Describes a vCard time, which has slight differences to the ICAL.Time.\n * Properties can be null if not specified, for example for dates with\n * reduced accuracy or truncation.\n *\n * Note that currently not all methods are correctly re-implemented for\n * VCardTime. For example, comparison will have undefined results when some\n * members are null.\n *\n * Also, normalization is not yet implemented for this class!\n *\n * @memberof ICAL\n * @extends {ICAL.Time}\n */\nclass VCardTime extends Time {\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {VCardTime}        The date/time instance\n   */\n  static fromDateAndOrTimeString(aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? strictParseInt(v.slice(s, s + e)) : null;\n    }\n    let parts = aValue.split('T');\n    let dt = parts[0], tmz = parts[1];\n    let splitzone = tmz ? design$1.vcard.value.time._splitZone(tmz) : [];\n    let zone = splitzone[0], tm = splitzone[1];\n\n    let dtlen = dt ? dt.length : 0;\n    let tmlen = tm ? tm.length : 0;\n\n    let hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    let hasDashTime = tm && tm[0] == '-';\n\n    let o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new VCardTime(o, zone, aIcalType);\n  }\n\n\n  /**\n   * Creates a new ICAL.VCardTime instance.\n   *\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {Timezone|UtcOffset} zone               The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  constructor(data, zone, icaltype) {\n    super(data, zone);\n    this.icaltype = icaltype || \"date-and-or-time\";\n  }\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"vcardtime\"\n   */\n  icalclass = \"vcardtime\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @type {String}\n   * @default \"date-and-or-time\"\n   */\n  icaltype = \"date-and-or-time\";\n\n  /**\n   * Returns a clone of the vcard date/time object.\n   *\n   * @return {VCardTime}     The cloned object\n   */\n  clone() {\n    return new VCardTime(this._time, this.zone, this.icaltype);\n  }\n\n  _normalize() {\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  utcOffset() {\n    if (this.zone instanceof UtcOffset) {\n      return this.zone.toSeconds();\n    } else {\n      return Time.prototype.utcOffset.apply(this, arguments);\n    }\n  }\n\n  /**\n   * Returns an RFC 6350 compliant representation of this object.\n   *\n   * @return {String}         vcard date/time string\n   */\n  toICALString() {\n    return design$1.vcard.value[this.icaltype].toICAL(this.toString());\n  }\n\n  /**\n   * The string representation of this date/time, in jCard form\n   * (including : and - separators).\n   * @return {String}\n   */\n  toString() {\n    let y = this.year, m = this.month, d = this.day;\n    let h = this.hour, mm = this.minute, s = this.second;\n\n    let hasYear = y !== null, hasMonth = m !== null, hasDay = d !== null;\n    let hasHour = h !== null, hasMinute = mm !== null, hasSecond = s !== null;\n\n    let datepart = (hasYear ? pad2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +\n                   (hasMonth ? pad2(m) : '') +\n                   (hasDay ? '-' + pad2(d) : '');\n    let timepart = (hasHour ? pad2(h) : '-') + (hasHour && hasMinute ? ':' : '') +\n                   (hasMinute ? pad2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +\n                   (hasMinute && hasSecond ? ':' : '') +\n                   (hasSecond ? pad2(s) : '');\n\n    let zone;\n    if (this.zone === Timezone.utcTimezone) {\n      zone = 'Z';\n    } else if (this.zone instanceof UtcOffset) {\n      zone = this.zone.toString();\n    } else if (this.zone === Timezone.localTimezone) {\n      zone = '';\n    } else if (this.zone instanceof Timezone) {\n      let offset = UtcOffset.fromSeconds(this.zone.utcOffset(this));\n      zone = offset.toString();\n    } else {\n      zone = '';\n    }\n\n    switch (this.icaltype) {\n      case \"time\":\n        return timepart + zone;\n      case \"date-and-or-time\":\n      case \"date-time\":\n        return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n      case \"date\":\n        return datepart;\n    }\n    return null;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n */\n\n/**\n * An iterator for a single recurrence rule. This class usually doesn't have to be instanciated\n * directly, the convenience method {@link ICAL.Recur#iterator} can be used.\n *\n * @memberof ICAL\n */\nclass RecurIterator {\n  static _indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n\n  static _expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n\n  static UNKNOWN = 0;\n  static CONTRACT = 1;\n  static EXPAND = 2;\n  static ILLEGAL = 3;\n\n  /**\n   * Creates a new ICAL.RecurIterator instance. The options object may contain additional members\n   * when resuming iteration from a previous run.\n   *\n   * @param {Object} options                The iterator options\n   * @param {Recur} options.rule            The rule to iterate.\n   * @param {Time} options.dtstart          The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  constructor(options) {\n    this.fromData(options);\n  }\n\n  /**\n   * True when iteration is finished.\n   * @type {Boolean}\n   */\n  completed = false;\n\n  /**\n   * The rule that is being iterated\n   * @type {Recur}\n   */\n  rule = null;\n\n  /**\n   * The start date of the event being iterated.\n   * @type {Time}\n   */\n  dtstart = null;\n\n  /**\n   * The last occurrence that was returned from the\n   * {@link RecurIterator#next} method.\n   * @type {Time}\n   */\n  last = null;\n\n  /**\n   * The sequence number from the occurrence\n   * @type {Number}\n   */\n  occurrence_number = 0;\n\n  /**\n   * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n   * @type {Object}\n   * @private\n   */\n  by_indices = null;\n\n  /**\n   * If true, the iterator has already been initialized\n   * @type {Boolean}\n   * @private\n   */\n  initialized = false;\n\n  /**\n   * The initializd by-data.\n   * @type {Object}\n   * @private\n   */\n  by_data = null;\n\n  /**\n   * The expanded yeardays\n   * @type {Array}\n   * @private\n   */\n  days = null;\n\n  /**\n   * The index in the {@link ICAL.RecurIterator#days} array.\n   * @type {Number}\n   * @private\n   */\n  days_index = 0;\n\n  /**\n   * Initialize the recurrence iterator from the passed data object. This\n   * method is usually not called directly, you can initialize the iterator\n   * through the constructor.\n   *\n   * @param {Object} options                The iterator options\n   * @param {Recur} options.rule            The rule to iterate.\n   * @param {Time} options.dtstart          The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  fromData(options) {\n    this.rule = formatClassType(options.rule, Recur);\n\n    if (!this.rule) {\n      throw new Error('iterator requires a (ICAL.Recur) rule');\n    }\n\n    this.dtstart = formatClassType(options.dtstart, Time);\n\n    if (!this.dtstart) {\n      throw new Error('iterator requires a (ICAL.Time) dtstart');\n    }\n\n    if (options.by_data) {\n      this.by_data = options.by_data;\n    } else {\n      this.by_data = clone(this.rule.parts, true);\n    }\n\n    if (options.occurrence_number)\n      this.occurrence_number = options.occurrence_number;\n\n    this.days = options.days || [];\n    if (options.last) {\n      this.last = formatClassType(options.last, Time);\n    }\n\n    this.by_indices = options.by_indices;\n\n    if (!this.by_indices) {\n      this.by_indices = {\n        \"BYSECOND\": 0,\n        \"BYMINUTE\": 0,\n        \"BYHOUR\": 0,\n        \"BYDAY\": 0,\n        \"BYMONTH\": 0,\n        \"BYWEEKNO\": 0,\n        \"BYMONTHDAY\": 0\n      };\n    }\n\n    this.initialized = options.initialized || false;\n\n    if (!this.initialized) {\n      try {\n        this.init();\n      } catch (e) {\n        if (e instanceof InvalidRecurrenceRuleError) {\n          // Init may error if there are no possible recurrence instances from\n          // the rule, but we don't want to bubble this error up. Instead, we\n          // create an empty iterator.\n          this.completed = true;\n        } else {\n          // Propagate other errors to consumers.\n          throw e;\n        }\n      }\n    }\n  }\n\n  /**\n   * Initialize the iterator\n   * @private\n   */\n  init() {\n    this.initialized = true;\n    this.last = this.dtstart.clone();\n    let parts = this.by_data;\n\n    if (\"BYDAY\" in parts) {\n      // libical does this earlier when the rule is loaded, but we postpone to\n      // now so we can preserve the original order.\n      this.sort_byday_rules(parts.BYDAY);\n    }\n\n    // If the BYYEARDAY appares, no other date rule part may appear\n    if (\"BYYEARDAY\" in parts) {\n      if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts ||\n          \"BYMONTHDAY\" in parts || \"BYDAY\" in parts) {\n        throw new Error(\"Invalid BYYEARDAY rule\");\n      }\n    }\n\n    // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n    if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n      throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n    }\n\n    // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n    // BYWEEKNO may appear.\n    if (this.rule.freq == \"MONTHLY\" &&\n        (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n      throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n    }\n\n    // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n    // BYYEARDAY may appear.\n    if (this.rule.freq == \"WEEKLY\" &&\n        (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n      throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n    }\n\n    // BYYEARDAY may only appear in YEARLY rules\n    if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n      throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n    }\n\n    this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n    this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n    this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n    this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n    this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n    if (this.rule.freq == \"WEEKLY\") {\n      if (\"BYDAY\" in parts) {\n        let [, dow] = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n        let wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n        if ((this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0) || wkdy < 0) {\n          // Initial time is after first day of BYDAY data\n          this.last.day += wkdy;\n        }\n      } else {\n        let dayName = Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n        parts.BYDAY = [dayName];\n      }\n    }\n\n    if (this.rule.freq == \"YEARLY\") {\n      // Some yearly recurrence rules may be specific enough to not actually\n      // occur on a yearly basis, e.g. the 29th day of February or the fifth\n      // Monday of a given month. The standard isn't clear on the intended\n      // behavior in these cases, but `libical` at least will iterate until it\n      // finds a matching year.\n      // CAREFUL: Some rules may specify an occurrence that can never happen,\n      // e.g. the first Monday of April so long as it falls on the 15th\n      // through the 21st. Detecting these is non-trivial, so ensure that we\n      // stop iterating at some point.\n      const untilYear = this.rule.until ? this.rule.until.year : 20000;\n      while (this.last.year <= untilYear) {\n        this.expand_year_days(this.last.year);\n        if (this.days.length > 0) {\n          break;\n        }\n        this.increment_year(this.rule.interval);\n      }\n\n      if (this.days.length == 0) {\n        throw new InvalidRecurrenceRuleError();\n      }\n\n      this._nextByYearDay();\n    }\n\n    if (this.rule.freq == \"MONTHLY\") {\n      if (this.has_by_data(\"BYDAY\")) {\n        let tempLast = null;\n        let initLast = this.last.clone();\n        let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n\n        // Check every weekday in BYDAY with relative dow and pos.\n        for (let bydow of this.by_data.BYDAY) {\n          this.last = initLast.clone();\n          let [pos, dow] = this.ruleDayOfWeek(bydow);\n          let dayOfMonth = this.last.nthWeekDay(dow, pos);\n\n          // If |pos| >= 6, the byday is invalid for a monthly rule.\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          }\n\n          // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n        this.last = tempLast.clone();\n\n        //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        // Change the day value so that normalisation won't change the month.\n        this.last.day = 1;\n\n        // Get a sorted list of days in the starting month that match the rule.\n        let normalized = this.normalizeByMonthDayRules(\n          this.last.year,\n          this.last.month,\n          this.rule.parts.BYMONTHDAY\n        ).filter(d => d >= this.last.day);\n\n        if (normalized.length) {\n          // There's at least one valid day, use it.\n          this.last.day = normalized[0];\n          this.by_data.BYMONTHDAY = normalized;\n        } else {\n          // There's no occurrence in this month, find the next valid month.\n          // The longest possible sequence of skipped months is February-April-June,\n          // so we might need to call next_month up to three times.\n          if (!this.next_month() && !this.next_month() && !this.next_month()) {\n            throw new Error(\"No possible occurrences\");\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Retrieve the next occurrence from the iterator.\n   * @return {Time}\n   */\n  next(again = false) {\n    let before = (this.last ? this.last.clone() : null);\n\n    if ((this.rule.count && this.occurrence_number >= this.rule.count) ||\n        (this.rule.until && this.last.compare(this.rule.until) > 0)) {\n      this.completed = true;\n    }\n\n    if (this.completed) {\n      return null;\n    }\n\n    if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n      // First of all, give the instance that was initialized\n      this.occurrence_number++;\n      return this.last;\n    }\n\n    let valid;\n    do {\n      valid = 1;\n\n      switch (this.rule.freq) {\n      case \"SECONDLY\":\n        this.next_second();\n        break;\n      case \"MINUTELY\":\n        this.next_minute();\n        break;\n      case \"HOURLY\":\n        this.next_hour();\n        break;\n      case \"DAILY\":\n        this.next_day();\n        break;\n      case \"WEEKLY\":\n        this.next_week();\n        break;\n      case \"MONTHLY\":\n        valid = this.next_month();\n        break;\n      case \"YEARLY\":\n        this.next_year();\n        break;\n\n      default:\n        return null;\n      }\n    } while (!this.check_contracting_rules() ||\n             this.last.compare(this.dtstart) < 0 ||\n             !valid);\n\n    if (this.last.compare(before) == 0) {\n      if (again) {\n        throw new Error(\"Same occurrence found twice, protecting you from death by recursion\");\n      }\n      this.next(true);\n    }\n\n    if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n      this.completed = true;\n      return null;\n    } else {\n      this.occurrence_number++;\n      return this.last;\n    }\n  }\n\n  next_second() {\n    return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n  }\n\n  increment_second(inc) {\n    return this.increment_generic(inc, \"second\", 60, \"minute\");\n  }\n\n  next_minute() {\n    return this.next_generic(\"BYMINUTE\", \"MINUTELY\",\n                             \"minute\", \"hour\", \"next_second\");\n  }\n\n  increment_minute(inc) {\n    return this.increment_generic(inc, \"minute\", 60, \"hour\");\n  }\n\n  next_hour() {\n    return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\",\n                             \"monthday\", \"next_minute\");\n  }\n\n  increment_hour(inc) {\n    this.increment_generic(inc, \"hour\", 24, \"monthday\");\n  }\n\n  next_day() {\n    let this_freq = (this.rule.freq == \"DAILY\");\n\n    if (this.next_hour() == 0) {\n      return 0;\n    }\n\n    if (this_freq) {\n      this.increment_monthday(this.rule.interval);\n    } else {\n      this.increment_monthday(1);\n    }\n\n    return 0;\n  }\n\n  next_week() {\n    let end_of_data = 0;\n\n    if (this.next_weekday_by_week() == 0) {\n      return end_of_data;\n    }\n\n    if (this.has_by_data(\"BYWEEKNO\")) {\n      this.by_indices.BYWEEKNO++;\n\n      if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n        this.by_indices.BYWEEKNO = 0;\n        end_of_data = 1;\n      }\n\n      // HACK should be first month of the year\n      this.last.month = 1;\n      this.last.day = 1;\n\n      let week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n\n      this.last.day += 7 * week_no;\n\n      if (end_of_data) {\n        this.increment_year(1);\n      }\n    } else {\n      // Jump to the next week\n      this.increment_monthday(7 * this.rule.interval);\n    }\n\n    return end_of_data;\n  }\n\n  /**\n   * Normalize each by day rule for a given year/month.\n   * Takes into account ordering and negative rules\n   *\n   * @private\n   * @param {Number} year         Current year.\n   * @param {Number} month        Current month.\n   * @param {Array}  rules        Array of rules.\n   *\n   * @return {Array} sorted and normalized rules.\n   *                 Negative rules will be expanded to their\n   *                 correct positive values for easier processing.\n   */\n  normalizeByMonthDayRules(year, month, rules) {\n    let daysInMonth = Time.daysInMonth(month, year);\n\n    // XXX: This is probably bad for performance to allocate\n    //      a new array for each month we scan, if possible\n    //      we should try to optimize this...\n    let newRules = [];\n\n    let ruleIdx = 0;\n    let len = rules.length;\n    let rule;\n\n    for (; ruleIdx < len; ruleIdx++) {\n      rule = parseInt(rules[ruleIdx], 10);\n      if (isNaN(rule)) {\n        throw new Error('Invalid BYMONTHDAY value');\n      }\n\n      // if this rule falls outside of given\n      // month discard it.\n      if (Math.abs(rule) > daysInMonth) {\n        continue;\n      }\n\n      // negative case\n      if (rule < 0) {\n        // we add (not subtract it is a negative number)\n        // one from the rule because 1 === last day of month\n        rule = daysInMonth + (rule + 1);\n      } else if (rule === 0) {\n        // skip zero: it is invalid.\n        continue;\n      }\n\n      // only add unique items...\n      if (newRules.indexOf(rule) === -1) {\n        newRules.push(rule);\n      }\n\n    }\n\n    // unique and sort\n    return newRules.sort(function(a, b) { return a - b; });\n  }\n\n  /**\n   * NOTES:\n   * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n   * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n   * both conditions match a given date (this.last.day) iteration stops.\n   *\n   * @private\n   * @param {Boolean=} isInit     When given true will not increment the\n   *                                current day (this.last).\n   */\n  _byDayAndMonthDay(isInit) {\n    let byMonthDay; // setup in initMonth\n    let byDay = this.by_data.BYDAY;\n\n    let date;\n    let dateIdx = 0;\n    let dateLen; // setup in initMonth\n    let dayLen = byDay.length;\n\n    // we are not valid by default\n    let dataIsValid = 0;\n\n    let daysInMonth;\n    let self = this;\n    // we need a copy of this, because a DateTime gets normalized\n    // automatically if the day is out of range. At some points we\n    // set the last day to 0 to start counting.\n    let lastDay = this.last.day;\n\n    function initMonth() {\n      daysInMonth = Time.daysInMonth(\n        self.last.month, self.last.year\n      );\n\n      byMonthDay = self.normalizeByMonthDayRules(\n        self.last.year,\n        self.last.month,\n        self.by_data.BYMONTHDAY\n      );\n\n      dateLen = byMonthDay.length;\n\n      // For the case of more than one occurrence in one month\n      // we have to be sure to start searching after the last\n      // found date or at the last BYMONTHDAY, unless we are\n      // initializing the iterator because in this case we have\n      // to consider the last found date too.\n      while (byMonthDay[dateIdx] <= lastDay &&\n             !(isInit && byMonthDay[dateIdx] == lastDay) &&\n             dateIdx < dateLen - 1) {\n        dateIdx++;\n      }\n    }\n\n    function nextMonth() {\n      // since the day is incremented at the start\n      // of the loop below, we need to start at 0\n      lastDay = 0;\n      self.increment_month();\n      dateIdx = 0;\n      initMonth();\n    }\n\n    initMonth();\n\n    // should come after initMonth\n    if (isInit) {\n      lastDay -= 1;\n    }\n\n    // Use a counter to avoid an infinite loop with malformed rules.\n    // Stop checking after 4 years so we consider also a leap year.\n    let monthsCounter = 48;\n\n    while (!dataIsValid && monthsCounter) {\n      monthsCounter--;\n      // increment the current date. This is really\n      // important otherwise we may fall into the infinite\n      // loop trap. The initial date takes care of the case\n      // where the current date is the date we are looking\n      // for.\n      date = lastDay + 1;\n\n      if (date > daysInMonth) {\n        nextMonth();\n        continue;\n      }\n\n      // find next date\n      let next = byMonthDay[dateIdx++];\n\n      // this logic is dependent on the BYMONTHDAYS\n      // being in order (which is done by #normalizeByMonthDayRules)\n      if (next >= date) {\n        // if the next month day is in the future jump to it.\n        lastDay = next;\n      } else {\n        // in this case the 'next' monthday has past\n        // we must move to the month.\n        nextMonth();\n        continue;\n      }\n\n      // Now we can loop through the day rules to see\n      // if one matches the current month date.\n      for (let dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n        let parts = this.ruleDayOfWeek(byDay[dayIdx]);\n        let pos = parts[0];\n        let dow = parts[1];\n\n        this.last.day = lastDay;\n        if (this.last.isNthWeekDay(dow, pos)) {\n          // when we find the valid one we can mark\n          // the conditions as met and break the loop.\n          // (Because we have this condition above\n          //  it will also break the parent loop).\n          dataIsValid = 1;\n          break;\n        }\n      }\n\n      // It is completely possible that the combination\n      // cannot be matched in the current month.\n      // When we reach the end of possible combinations\n      // in the current month we iterate to the next one.\n      // since dateIdx is incremented right after getting\n      // \"next\", we don't need dateLen -1 here.\n      if (!dataIsValid && dateIdx === dateLen) {\n        nextMonth();\n        continue;\n      }\n    }\n\n    if (monthsCounter <= 0) {\n      // Checked 4 years without finding a Byday that matches\n      // a Bymonthday. Maybe the rule is not correct.\n      throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n    }\n\n\n    return dataIsValid;\n  }\n\n  next_month() {\n    let data_valid = 1;\n\n    if (this.next_hour() == 0) {\n      return data_valid;\n    }\n\n    if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n      data_valid = this._byDayAndMonthDay();\n    } else if (this.has_by_data(\"BYDAY\")) {\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      let setpos = 0;\n      let setpos_total = 0;\n\n      if (this.has_by_data(\"BYSETPOS\")) {\n        let last_day = this.last.day;\n        for (let day = 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n          if (this.is_day_in_byday(this.last)) {\n            setpos_total++;\n            if (day <= last_day) {\n              setpos++;\n            }\n          }\n        }\n        this.last.day = last_day;\n      }\n\n      data_valid = 0;\n      let day;\n      for (day = this.last.day + 1; day <= daysInMonth; day++) {\n        this.last.day = day;\n\n        if (this.is_day_in_byday(this.last)) {\n          if (!this.has_by_data(\"BYSETPOS\") ||\n              this.check_set_position(++setpos) ||\n              this.check_set_position(setpos - setpos_total - 1)) {\n\n            data_valid = 1;\n            break;\n          }\n        }\n      }\n\n      if (day > daysInMonth) {\n        this.last.day = 1;\n        this.increment_month();\n\n        if (this.is_day_in_byday(this.last)) {\n          if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n            data_valid = 1;\n          }\n        } else {\n          data_valid = 0;\n        }\n      }\n    } else if (this.has_by_data(\"BYMONTHDAY\")) {\n      this.by_indices.BYMONTHDAY++;\n\n      if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n        this.by_indices.BYMONTHDAY = 0;\n        this.increment_month();\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          return 0;\n        }\n      }\n\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      let day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n      if (day < 0) {\n        day = daysInMonth + day + 1;\n      }\n\n      if (day > daysInMonth) {\n        this.last.day = 1;\n        data_valid = this.is_day_in_byday(this.last);\n      } else {\n        this.last.day = day;\n      }\n    } else {\n      this.increment_month();\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n        data_valid = 0;\n      } else {\n        this.last.day = this.by_data.BYMONTHDAY[0];\n      }\n    }\n\n    return data_valid;\n  }\n\n  next_weekday_by_week() {\n    let end_of_data = 0;\n\n    if (this.next_hour() == 0) {\n      return end_of_data;\n    }\n\n    if (!this.has_by_data(\"BYDAY\")) {\n      return 1;\n    }\n\n    for (;;) {\n      let tt = new Time();\n      this.by_indices.BYDAY++;\n\n      if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n        this.by_indices.BYDAY = 0;\n        end_of_data = 1;\n      }\n\n      let coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n      let parts = this.ruleDayOfWeek(coded_day);\n      let dow = parts[1];\n\n      dow -= this.rule.wkst;\n\n      if (dow < 0) {\n        dow += 7;\n      }\n\n      tt.year = this.last.year;\n      tt.month = this.last.month;\n      tt.day = this.last.day;\n\n      let startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n      if (dow + startOfWeek < 1) {\n        // The selected date is in the previous year\n        if (!end_of_data) {\n          continue;\n        }\n      }\n\n      let next = Time.fromDayOfYear(startOfWeek + dow, this.last.year);\n\n      /**\n       * The normalization horrors below are due to\n       * the fact that when the year/month/day changes\n       * it can effect the other operations that come after.\n       */\n      this.last.year = next.year;\n      this.last.month = next.month;\n      this.last.day = next.day;\n\n      return end_of_data;\n    }\n  }\n\n  next_year() {\n    if (this.next_hour() == 0) {\n      return 0;\n    }\n\n    if (++this.days_index == this.days.length) {\n      this.days_index = 0;\n      do {\n        this.increment_year(this.rule.interval);\n        if (this.has_by_data(\"BYMONTHDAY\")) {\n          this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(\n            this.last.year,\n            this.last.month,\n            this.rule.parts.BYMONTHDAY\n          );\n        }\n        this.expand_year_days(this.last.year);\n      } while (this.days.length == 0);\n    }\n\n    this._nextByYearDay();\n\n    return 1;\n  }\n\n  _nextByYearDay() {\n    let doy = this.days[this.days_index];\n    let year = this.last.year;\n    if (doy < 1) {\n        // Time.fromDayOfYear(doy, year) indexes relative to the\n        // start of the given year. That is different from the\n        // semantics of BYYEARDAY where negative indexes are an\n        // offset from the end of the given year.\n        doy += 1;\n        year += 1;\n    }\n    let next = Time.fromDayOfYear(doy, year);\n    this.last.day = next.day;\n    this.last.month = next.month;\n  }\n\n  /**\n   * @param dow (eg: '1TU', '-1MO')\n   * @param {weekDay=} aWeekStart The week start weekday\n   * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n   */\n  ruleDayOfWeek(dow, aWeekStart) {\n    let matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n    if (matches) {\n      let pos = parseInt(matches[1] || 0, 10);\n      dow = Recur.icalDayToNumericDay(matches[2], aWeekStart);\n      return [pos, dow];\n    } else {\n      return [0, 0];\n    }\n  }\n\n  next_generic(aRuleType, aInterval, aDateAttr, aFollowingAttr, aPreviousIncr) {\n    let has_by_rule = (aRuleType in this.by_data);\n    let this_freq = (this.rule.freq == aInterval);\n    let end_of_data = 0;\n\n    if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n      return end_of_data;\n    }\n\n    if (has_by_rule) {\n      this.by_indices[aRuleType]++;\n      let dta = this.by_data[aRuleType];\n\n      if (this.by_indices[aRuleType] == dta.length) {\n        this.by_indices[aRuleType] = 0;\n        end_of_data = 1;\n      }\n      this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n    } else if (this_freq) {\n      this[\"increment_\" + aDateAttr](this.rule.interval);\n    }\n\n    if (has_by_rule && end_of_data && this_freq) {\n      this[\"increment_\" + aFollowingAttr](1);\n    }\n\n    return end_of_data;\n  }\n\n  increment_monthday(inc) {\n    for (let i = 0; i < inc; i++) {\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      this.last.day++;\n\n      if (this.last.day > daysInMonth) {\n        this.last.day -= daysInMonth;\n        this.increment_month();\n      }\n    }\n  }\n\n  increment_month() {\n    this.last.day = 1;\n    if (this.has_by_data(\"BYMONTH\")) {\n      this.by_indices.BYMONTH++;\n\n      if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n        this.by_indices.BYMONTH = 0;\n        this.increment_year(1);\n      }\n\n      this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n    } else {\n      if (this.rule.freq == \"MONTHLY\") {\n        this.last.month += this.rule.interval;\n      } else {\n        this.last.month++;\n      }\n\n      this.last.month--;\n      let years = trunc(this.last.month / 12);\n      this.last.month %= 12;\n      this.last.month++;\n\n      if (years != 0) {\n        this.increment_year(years);\n      }\n    }\n\n    if (this.has_by_data(\"BYMONTHDAY\")) {\n      this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(\n        this.last.year,\n        this.last.month,\n        this.rule.parts.BYMONTHDAY\n      );\n    }\n  }\n\n  increment_year(inc) {\n    // Don't jump into the next month if this.last is Feb 29.\n    this.last.day = 1;\n    this.last.year += inc;\n  }\n\n  increment_generic(inc, aDateAttr, aFactor, aNextIncrement) {\n    this.last[aDateAttr] += inc;\n    let nextunit = trunc(this.last[aDateAttr] / aFactor);\n    this.last[aDateAttr] %= aFactor;\n    if (nextunit != 0) {\n      this[\"increment_\" + aNextIncrement](nextunit);\n    }\n  }\n\n  has_by_data(aRuleType) {\n    return (aRuleType in this.rule.parts);\n  }\n\n  expand_year_days(aYear) {\n    let t = new Time();\n    this.days = [];\n\n    // We need our own copy with a few keys set\n    let parts = {};\n    let rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n    for (let part of rules) {\n      if (part in this.rule.parts) {\n        parts[part] = this.rule.parts[part];\n      }\n    }\n\n    if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n      let valid = 1;\n      let validWeeks = {};\n      t.year = aYear;\n      t.isDate = true;\n\n      for (let monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n        let month = this.by_data.BYMONTH[monthIdx];\n        t.month = month;\n        t.day = 1;\n        let first_week = t.weekNumber(this.rule.wkst);\n        t.day = Time.daysInMonth(month, aYear);\n        let last_week = t.weekNumber(this.rule.wkst);\n        for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n          validWeeks[monthIdx] = 1;\n        }\n      }\n\n      for (let weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n        let weekno = this.by_data.BYWEEKNO[weekIdx];\n        if (weekno < 52) {\n          valid &= validWeeks[weekIdx];\n        } else {\n          valid = 0;\n        }\n      }\n\n      if (valid) {\n        delete parts.BYMONTH;\n      } else {\n        delete parts.BYWEEKNO;\n      }\n    }\n\n    let partCount = Object.keys(parts).length;\n\n    if (partCount == 0) {\n      let t1 = this.dtstart.clone();\n      t1.year = this.last.year;\n      this.days.push(t1.dayOfYear());\n    } else if (partCount == 1 && \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let t2 = this.dtstart.clone();\n        t2.year = aYear;\n        t2.month = month;\n        t2.isDate = true;\n        this.days.push(t2.dayOfYear());\n      }\n    } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n      for (let monthday of this.by_data.BYMONTHDAY) {\n        let t3 = this.dtstart.clone();\n        if (monthday < 0) {\n          let daysInMonth = Time.daysInMonth(t3.month, aYear);\n          monthday = monthday + daysInMonth + 1;\n        }\n        t3.day = monthday;\n        t3.year = aYear;\n        t3.isDate = true;\n        this.days.push(t3.dayOfYear());\n      }\n    } else if (partCount == 2 &&\n               \"BYMONTHDAY\" in parts &&\n               \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let daysInMonth = Time.daysInMonth(month, aYear);\n        for (let monthday of this.by_data.BYMONTHDAY) {\n          if (monthday < 0) {\n            monthday = monthday + daysInMonth + 1;\n          }\n          t.day = monthday;\n          t.month = month;\n          t.year = aYear;\n          t.isDate = true;\n\n          this.days.push(t.dayOfYear());\n        }\n      }\n    } else if (partCount == 1 && \"BYWEEKNO\" in parts) ; else if (partCount == 2 &&\n               \"BYWEEKNO\" in parts &&\n               \"BYMONTHDAY\" in parts) ; else if (partCount == 1 && \"BYDAY\" in parts) {\n      this.days = this.days.concat(this.expand_by_day(aYear));\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let daysInMonth = Time.daysInMonth(month, aYear);\n\n        t.year = aYear;\n        t.month = month;\n        t.day = 1;\n        t.isDate = true;\n\n        let first_dow = t.dayOfWeek();\n        let doy_offset = t.dayOfYear() - 1;\n\n        t.day = daysInMonth;\n        let last_dow = t.dayOfWeek();\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          let by_month_day = [];\n          for (let day = 1; day <= daysInMonth; day++) {\n            t.day = day;\n            if (this.is_day_in_byday(t)) {\n              by_month_day.push(day);\n            }\n          }\n\n          for (let spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n            if (this.check_set_position(spIndex + 1) ||\n                this.check_set_position(spIndex - by_month_day.length)) {\n              this.days.push(doy_offset + by_month_day[spIndex]);\n            }\n          }\n        } else {\n          for (let coded_day of this.by_data.BYDAY) {\n            let bydayParts = this.ruleDayOfWeek(coded_day);\n            let pos = bydayParts[0];\n            let dow = bydayParts[1];\n            let month_day;\n\n            let first_matching_day = ((dow + 7 - first_dow) % 7) + 1;\n            let last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);\n\n            if (pos == 0) {\n              for (let day = first_matching_day; day <= daysInMonth; day += 7) {\n                this.days.push(doy_offset + day);\n              }\n            } else if (pos > 0) {\n              month_day = first_matching_day + (pos - 1) * 7;\n\n              if (month_day <= daysInMonth) {\n                this.days.push(doy_offset + month_day);\n              }\n            } else {\n              month_day = last_matching_day + (pos + 1) * 7;\n\n              if (month_day > 0) {\n                this.days.push(doy_offset + month_day);\n              }\n            }\n          }\n        }\n      }\n      // Return dates in order of occurrence (1,2,3,...) instead\n      // of by groups of weekdays (1,8,15,...,2,9,16,...).\n      this.days.sort(function(a, b) { return a - b; }); // Comparator function allows to sort numbers.\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n        if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 3 &&\n               \"BYDAY\" in parts &&\n               \"BYMONTHDAY\" in parts &&\n               \"BYMONTH\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n\n        if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&\n            this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n        let weekno = tt.weekNumber(this.rule.wkst);\n\n        if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 3 &&\n               \"BYDAY\" in parts &&\n               \"BYWEEKNO\" in parts &&\n               \"BYMONTHDAY\" in parts) ; else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n      this.days = this.days.concat(this.by_data.BYYEARDAY);\n    } else {\n      this.days = [];\n    }\n\n    let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;\n    this.days.sort((a, b) => {\n      if (a < 0) a += daysInYear + 1;\n      if (b < 0) b += daysInYear + 1;\n      return a - b;\n    });\n\n    return 0;\n  }\n\n  expand_by_day(aYear) {\n\n    let days_list = [];\n    let tmp = this.last.clone();\n\n    tmp.year = aYear;\n    tmp.month = 1;\n    tmp.day = 1;\n    tmp.isDate = true;\n\n    let start_dow = tmp.dayOfWeek();\n\n    tmp.month = 12;\n    tmp.day = 31;\n    tmp.isDate = true;\n\n    let end_dow = tmp.dayOfWeek();\n    let end_year_day = tmp.dayOfYear();\n\n    for (let day of this.by_data.BYDAY) {\n      let parts = this.ruleDayOfWeek(day);\n      let pos = parts[0];\n      let dow = parts[1];\n\n      if (pos == 0) {\n        let tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;\n\n        for (let doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n          days_list.push(doy);\n        }\n\n      } else if (pos > 0) {\n        let first;\n        if (dow >= start_dow) {\n          first = dow - start_dow + 1;\n        } else {\n          first = dow - start_dow + 8;\n        }\n\n        days_list.push(first + (pos - 1) * 7);\n      } else {\n        let last;\n        pos = -pos;\n\n        if (dow <= end_dow) {\n          last = end_year_day - end_dow + dow;\n        } else {\n          last = end_year_day - end_dow + dow - 7;\n        }\n\n        days_list.push(last - (pos - 1) * 7);\n      }\n    }\n    return days_list;\n  }\n\n  is_day_in_byday(tt) {\n    if (this.by_data.BYDAY) {\n      for (let day of this.by_data.BYDAY) {\n        let parts = this.ruleDayOfWeek(day);\n        let pos = parts[0];\n        let dow = parts[1];\n        let this_dow = tt.dayOfWeek();\n\n        if ((pos == 0 && dow == this_dow) ||\n            (tt.nthWeekDay(dow, pos) == tt.day)) {\n          return 1;\n        }\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Checks if given value is in BYSETPOS.\n   *\n   * @private\n   * @param {Numeric} aPos position to check for.\n   * @return {Boolean} false unless BYSETPOS rules exist\n   *                   and the given value is present in rules.\n   */\n  check_set_position(aPos) {\n    if (this.has_by_data('BYSETPOS')) {\n      let idx = this.by_data.BYSETPOS.indexOf(aPos);\n      // negative numbers are not false-y\n      return idx !== -1;\n    }\n    return false;\n  }\n\n  sort_byday_rules(aRules) {\n    for (let i = 0; i < aRules.length; i++) {\n      for (let j = 0; j < i; j++) {\n        let one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n        let two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n        if (one > two) {\n          let tmp = aRules[i];\n          aRules[i] = aRules[j];\n          aRules[j] = tmp;\n        }\n      }\n    }\n  }\n\n  check_contract_restriction(aRuleType, v) {\n    let indexMapValue = RecurIterator._indexMap[aRuleType];\n    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];\n    let pass = false;\n\n    if (aRuleType in this.by_data &&\n        ruleMapValue == RecurIterator.CONTRACT) {\n\n      let ruleType = this.by_data[aRuleType];\n\n      for (let bydata of ruleType) {\n        if (bydata == v) {\n          pass = true;\n          break;\n        }\n      }\n    } else {\n      // Not a contracting byrule or has no data, test passes\n      pass = true;\n    }\n    return pass;\n  }\n\n  check_contracting_rules() {\n    let dow = this.last.dayOfWeek();\n    let weekNo = this.last.weekNumber(this.rule.wkst);\n    let doy = this.last.dayOfYear();\n\n    return (this.check_contract_restriction(\"BYSECOND\", this.last.second) &&\n            this.check_contract_restriction(\"BYMINUTE\", this.last.minute) &&\n            this.check_contract_restriction(\"BYHOUR\", this.last.hour) &&\n            this.check_contract_restriction(\"BYDAY\", Recur.numericDayToIcalDay(dow)) &&\n            this.check_contract_restriction(\"BYWEEKNO\", weekNo) &&\n            this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) &&\n            this.check_contract_restriction(\"BYMONTH\", this.last.month) &&\n            this.check_contract_restriction(\"BYYEARDAY\", doy));\n  }\n\n  setup_defaults(aRuleType, req, deftime) {\n    let indexMapValue = RecurIterator._indexMap[aRuleType];\n    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];\n\n    if (ruleMapValue != RecurIterator.CONTRACT) {\n      if (!(aRuleType in this.by_data)) {\n        this.by_data[aRuleType] = [deftime];\n      }\n      if (this.rule.freq != req) {\n        return this.by_data[aRuleType][0];\n      }\n    }\n    return deftime;\n  }\n\n  /**\n   * Convert iterator into a serialize-able object.  Will preserve current\n   * iteration sequence to ensure the seamless continuation of the recurrence\n   * rule.\n   * @return {Object}\n   */\n  toJSON() {\n    let result = Object.create(null);\n\n    result.initialized = this.initialized;\n    result.rule = this.rule.toJSON();\n    result.dtstart = this.dtstart.toJSON();\n    result.by_data = this.by_data;\n    result.days = this.days;\n    result.last = this.last.toJSON();\n    result.by_indices = this.by_indices;\n    result.occurrence_number = this.occurrence_number;\n\n    return result;\n  }\n}\n\n/**\n * An error indicating that a recurrence rule is invalid and produces no\n * occurrences.\n *\n * @extends {Error}\n * @class\n */\nclass InvalidRecurrenceRuleError extends Error {\n  constructor() {\n    super(\"Recurrence rule has no valid occurrences\");\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").frequencyValues} frequencyValues\n * Imports the 'frequencyValues' type from the \"types.js\" module\n */\n\nconst VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\nconst VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\nconst DOW_MAP = {\n  SU: Time.SUNDAY,\n  MO: Time.MONDAY,\n  TU: Time.TUESDAY,\n  WE: Time.WEDNESDAY,\n  TH: Time.THURSDAY,\n  FR: Time.FRIDAY,\n  SA: Time.SATURDAY\n};\n\nconst REVERSE_DOW_MAP = Object.fromEntries(Object.entries(DOW_MAP).map(entry => entry.reverse()));\n\nconst ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',\n                      'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n\n/**\n * This class represents the \"recur\" value type, used for example by RRULE. It provides methods to\n * calculate occurrences among others.\n *\n * @memberof ICAL\n */\nclass Recur {\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {Recur}                The created recurrence instance\n   */\n  static fromString(string) {\n    let data = this._stringToData(string, false);\n    return new Recur(data);\n  }\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {frequencyValues=} aData.freq               The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {weekDay=} aData.wkst                       The week start value\n   * @param {Time=} aData.until                         The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n  static fromData(aData) {\n    return new Recur(aData);\n  }\n\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @private\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {Recur}            The recurrence instance\n   */\n  static _stringToData(string, fmtIcal) {\n    let dict = Object.create(null);\n\n    // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n    let values = string.split(';');\n    let len = values.length;\n\n    for (let i = 0; i < len; i++) {\n      let parts = values[i].split('=');\n      let ucname = parts[0].toUpperCase();\n      let lcname = parts[0].toLowerCase();\n      let name = (fmtIcal ? lcname : ucname);\n      let value = parts[1];\n\n      if (ucname in partDesign) {\n        let partArr = value.split(',');\n        let partSet = new Set();\n\n        for (let part of partArr) {\n          partSet.add(partDesign[ucname](part));\n        }\n        partArr = [...partSet];\n\n        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  }\n\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n  static icalDayToNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    let firstDow = aWeekStart || Time.SUNDAY;\n    return ((DOW_MAP[string] - firstDow + 7) % 7) + 1;\n  }\n\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n  static numericDayToIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let dow = (num + firstDow - Time.SUNDAY);\n    if (dow > 7) {\n      dow -= 7;\n    }\n    return REVERSE_DOW_MAP[dow];\n  }\n\n  /**\n   * Create a new instance of the Recur class.\n   *\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {frequencyValues=} data.freq                The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {weekDay=} data.wkst                        The week start value\n   * @param {Time=} data.until                          The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof(data) === 'object') {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * An object holding the BY-parts of the recurrence rule\n   * @memberof ICAL.Recur\n   * @typedef {Object} byParts\n   * @property {Array.<Number>=} BYSECOND            The seconds for the BYSECOND part\n   * @property {Array.<Number>=} BYMINUTE            The minutes for the BYMINUTE part\n   * @property {Array.<Number>=} BYHOUR              The hours for the BYHOUR part\n   * @property {Array.<String>=} BYDAY               The BYDAY values\n   * @property {Array.<Number>=} BYMONTHDAY          The days for the BYMONTHDAY part\n   * @property {Array.<Number>=} BYYEARDAY           The days for the BYYEARDAY part\n   * @property {Array.<Number>=} BYWEEKNO            The weeks for the BYWEEKNO part\n   * @property {Array.<Number>=} BYMONTH             The month for the BYMONTH part\n   * @property {Array.<Number>=} BYSETPOS            The positionals for the BYSETPOS part\n   */\n\n  /**\n   * An object holding the BY-parts of the recurrence rule\n   * @type {byParts}\n   */\n  parts = null;\n\n  /**\n   * The interval value for the recurrence rule.\n   * @type {Number}\n   */\n  interval = 1;\n\n  /**\n   * The week start day\n   *\n   * @type {weekDay}\n   * @default ICAL.Time.MONDAY\n   */\n  wkst = Time.MONDAY;\n\n  /**\n   * The end of the recurrence\n   * @type {?Time}\n   */\n  until = null;\n\n  /**\n   * The maximum number of occurrences\n   * @type {?Number}\n   */\n  count = null;\n\n  /**\n   * The frequency value.\n   * @type {frequencyValues}\n   */\n  freq = null;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalrecur\"\n   */\n  icalclass = \"icalrecur\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"recur\"\n   */\n  icaltype = \"recur\";\n\n  /**\n   * Create a new iterator for this recurrence rule. The passed start date\n   * must be the start date of the event, not the start of the range to\n   * search in.\n   *\n   * @example\n   * let recur = comp.getFirstPropertyValue('rrule');\n   * let dtstart = comp.getFirstPropertyValue('dtstart');\n   * let iter = recur.iterator(dtstart);\n   * for (let next = iter.next(); next; next = iter.next()) {\n   *   if (next.compare(rangeStart) < 0) {\n   *     continue;\n   *   }\n   *   console.log(next.toString());\n   * }\n   *\n   * @param {Time} aStart        The item's start date\n   * @return {RecurIterator}     The recurrence iterator\n   */\n  iterator(aStart) {\n    return new RecurIterator({\n      rule: this,\n      dtstart: aStart\n    });\n  }\n\n  /**\n   * Returns a clone of the recurrence object.\n   *\n   * @return {Recur}      The cloned object\n   */\n  clone() {\n    return new Recur(this.toJSON());\n  }\n\n  /**\n   * Checks if the current rule is finite, i.e. has a count or until part.\n   *\n   * @return {Boolean}        True, if the rule is finite\n   */\n  isFinite() {\n    return !!(this.count || this.until);\n  }\n\n  /**\n   * Checks if the current rule has a count part, and not limited by an until\n   * part.\n   *\n   * @return {Boolean}        True, if the rule is by count\n   */\n  isByCount() {\n    return !!(this.count && !this.until);\n  }\n\n  /**\n   * Adds a component (part) to the recurrence rule. This is not a component\n   * in the sense of {@link ICAL.Component}, but a part of the recurrence\n   * rule, i.e. BYMONTH.\n   *\n   * @param {String} aType            The name of the component part\n   * @param {Array|String} aValue     The component value\n   */\n  addComponent(aType, aValue) {\n    let ucname = aType.toUpperCase();\n    if (ucname in this.parts) {\n      this.parts[ucname].push(aValue);\n    } else {\n      this.parts[ucname] = [aValue];\n    }\n  }\n\n  /**\n   * Sets the component value for the given by-part.\n   *\n   * @param {String} aType        The component part name\n   * @param {Array} aValues       The component values\n   */\n  setComponent(aType, aValues) {\n    this.parts[aType.toUpperCase()] = aValues.slice();\n  }\n\n  /**\n   * Gets (a copy) of the requested component value.\n   *\n   * @param {String} aType        The component part name\n   * @return {Array}              The component part value\n   */\n  getComponent(aType) {\n    let ucname = aType.toUpperCase();\n    return (ucname in this.parts ? this.parts[ucname].slice() : []);\n  }\n\n  /**\n   * Retrieves the next occurrence after the given recurrence id. See the\n   * guide on {@tutorial terminology} for more details.\n   *\n   * NOTE: Currently, this method iterates all occurrences from the start\n   * date. It should not be called in a loop for performance reasons. If you\n   * would like to get more than one occurrence, you can iterate the\n   * occurrences manually, see the example on the\n   * {@link ICAL.Recur#iterator iterator} method.\n   *\n   * @param {Time} aStartTime        The start of the event series\n   * @param {Time} aRecurrenceId     The date of the last occurrence\n   * @return {Time}                  The next occurrence after\n   */\n  getNextOccurrence(aStartTime, aRecurrenceId) {\n    let iter = this.iterator(aStartTime);\n    let next;\n\n    do {\n      next = iter.next();\n    } while (next && next.compare(aRecurrenceId) <= 0);\n\n    if (next && aRecurrenceId.zone) {\n      next.zone = aRecurrenceId.zone;\n    }\n\n    return next;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {frequencyValues=} data.freq                The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {weekDay=} data.wkst                        The week start value\n   * @param {Time=} data.until                          The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  fromData(data) {\n    for (let key in data) {\n      let uckey = key.toUpperCase();\n\n      if (uckey in partDesign) {\n        if (Array.isArray(data[key])) {\n          this.parts[uckey] = data[key];\n        } else {\n          this.parts[uckey] = [data[key]];\n        }\n      } else {\n        this[key] = data[key];\n      }\n    }\n\n    if (this.interval && typeof this.interval != \"number\") {\n      optionDesign.INTERVAL(this.interval, this);\n    }\n\n    if (this.wkst && typeof this.wkst != \"number\") {\n      this.wkst = Recur.icalDayToNumericDay(this.wkst);\n    }\n\n    if (this.until && !(this.until instanceof Time)) {\n      this.until = Time.fromString(this.until);\n    }\n  }\n\n  /**\n   * The jCal representation of this recurrence type.\n   * @return {Object}\n   */\n  toJSON() {\n    let res = Object.create(null);\n    res.freq = this.freq;\n\n    if (this.count) {\n      res.count = this.count;\n    }\n\n    if (this.interval > 1) {\n      res.interval = this.interval;\n    }\n\n    for (let [k, kparts] of Object.entries(this.parts)) {\n      if (Array.isArray(kparts) && kparts.length == 1) {\n        res[k.toLowerCase()] = kparts[0];\n      } else {\n        res[k.toLowerCase()] = clone(kparts);\n      }\n    }\n\n    if (this.until) {\n      res.until = this.until.toString();\n    }\n    if ('wkst' in this && this.wkst !== Time.DEFAULT_WEEK_START) {\n      res.wkst = Recur.numericDayToIcalDay(this.wkst);\n    }\n    return res;\n  }\n\n  /**\n   * The string representation of this recurrence rule.\n   * @return {String}\n   */\n  toString() {\n    // TODO retain order\n    let str = \"FREQ=\" + this.freq;\n    if (this.count) {\n      str += \";COUNT=\" + this.count;\n    }\n    if (this.interval > 1) {\n      str += \";INTERVAL=\" + this.interval;\n    }\n    for (let [k, v] of Object.entries(this.parts)) {\n      str += \";\" + k + \"=\" + v;\n    }\n    if (this.until) {\n      str += ';UNTIL=' + this.until.toICALString();\n    }\n    if ('wkst' in this && this.wkst !== Time.DEFAULT_WEEK_START) {\n      str += ';WKST=' + Recur.numericDayToIcalDay(this.wkst);\n    }\n    return str;\n  }\n}\n\nfunction parseNumericValue(type, min, max, value) {\n  let result = value;\n\n  if (value[0] === '+') {\n    result = value.slice(1);\n  }\n\n  result = strictParseInt(result);\n\n  if (min !== undefined && value < min) {\n    throw new Error(\n      type + ': invalid value \"' + value + '\" must be > ' + min\n    );\n  }\n\n  if (max !== undefined && value > max) {\n    throw new Error(\n      type + ': invalid value \"' + value + '\" must be < ' + min\n    );\n  }\n\n  return result;\n}\n\nconst optionDesign = {\n  FREQ: function(value, dict, fmtIcal) {\n    // yes this is actually equal or faster then regex.\n    // upside here is we can enumerate the valid values.\n    if (ALLOWED_FREQ.indexOf(value) !== -1) {\n      dict.freq = value;\n    } else {\n      throw new Error(\n        'invalid frequency \"' + value + '\" expected: \"' +\n        ALLOWED_FREQ.join(', ') + '\"'\n      );\n    }\n  },\n\n  COUNT: function(value, dict, fmtIcal) {\n    dict.count = strictParseInt(value);\n  },\n\n  INTERVAL: function(value, dict, fmtIcal) {\n    dict.interval = strictParseInt(value);\n    if (dict.interval < 1) {\n      // 0 or negative values are not allowed, some engines seem to generate\n      // it though. Assume 1 instead.\n      dict.interval = 1;\n    }\n  },\n\n  UNTIL: function(value, dict, fmtIcal) {\n    if (value.length > 10) {\n      dict.until = design$1.icalendar.value['date-time'].fromICAL(value);\n    } else {\n      dict.until = design$1.icalendar.value.date.fromICAL(value);\n    }\n    if (!fmtIcal) {\n      dict.until = Time.fromString(dict.until);\n    }\n  },\n\n  WKST: function(value, dict, fmtIcal) {\n    if (VALID_DAY_NAMES.test(value)) {\n      dict.wkst = Recur.icalDayToNumericDay(value);\n    } else {\n      throw new Error('invalid WKST value \"' + value + '\"');\n    }\n  }\n};\n\nconst partDesign = {\n  BYSECOND: parseNumericValue.bind(undefined, 'BYSECOND', 0, 60),\n  BYMINUTE: parseNumericValue.bind(undefined, 'BYMINUTE', 0, 59),\n  BYHOUR: parseNumericValue.bind(undefined, 'BYHOUR', 0, 23),\n  BYDAY: function(value) {\n    if (VALID_BYDAY_PART.test(value)) {\n      return value;\n    } else {\n      throw new Error('invalid BYDAY value \"' + value + '\"');\n    }\n  },\n  BYMONTHDAY: parseNumericValue.bind(undefined, 'BYMONTHDAY', -31, 31),\n  BYYEARDAY: parseNumericValue.bind(undefined, 'BYYEARDAY', -366, 366),\n  BYWEEKNO: parseNumericValue.bind(undefined, 'BYWEEKNO', -53, 53),\n  BYMONTH: parseNumericValue.bind(undefined, 'BYMONTH', 1, 12),\n  BYSETPOS: parseNumericValue.bind(undefined, 'BYSETPOS', -366, 366)\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").jCalComponent} jCalComponent\n * Imports the 'occurrenceDetails' type from the \"types.js\" module\n */\n\n/**\n * This class represents the \"period\" value type, with various calculation and manipulation methods.\n *\n * @memberof ICAL\n */\nclass Period {\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {Property} prop         The property this period will be on\n   * @return {Period}               The created period instance\n   */\n  static fromString(str, prop) {\n    let parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error(\n        'Invalid string value: \"' + str + '\" must contain a \"/\" char.'\n      );\n    }\n\n    let options = {\n      start: Time.fromDateTimeString(parts[0], prop)\n    };\n\n    let end = parts[1];\n\n    if (Duration.isValueString(end)) {\n      options.duration = Duration.fromString(end);\n    } else {\n      options.end = Time.fromDateTimeString(end, prop);\n    }\n\n    return new Period(options);\n  }\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {Time=} aData.start             The start of the period\n   * @param {Time=} aData.end               The end of the period\n   * @param {Duration=} aData.duration      The duration of the period\n   * @return {Period}                       The period instance\n   */\n  static fromData(aData) {\n    return new Period(aData);\n  }\n\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {jCalComponent} aData           The jCal data array\n   * @param {Property} aProp                The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {Period}                       The period instance\n   */\n  static fromJSON(aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, dateProp) {\n      if (aLenient) {\n        return Time.fromString(aValue, dateProp);\n      } else {\n        return Time.fromDateTimeString(aValue, dateProp);\n      }\n    }\n\n    if (Duration.isValueString(aData[1])) {\n      return Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: Duration.fromString(aData[1])\n      });\n    } else {\n      return Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  }\n\n  /**\n   * Creates a new ICAL.Period instance. The passed data object cannot contain both and end date and\n   * a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {Time=} aData.start             The start of the period\n   * @param {Time=} aData.end               The end of the period\n   * @param {Duration=} aData.duration      The duration of the period\n   */\n  constructor(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n      this.duration = aData.duration;\n    }\n  }\n\n\n  /**\n   * The start of the period\n   * @type {Time}\n   */\n  start = null;\n\n  /**\n   * The end of the period\n   * @type {Time}\n   */\n  end = null;\n\n  /**\n   * The duration of the period\n   * @type {Duration}\n   */\n  duration = null;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalperiod\"\n   */\n  icalclass = \"icalperiod\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"period\"\n   */\n  icaltype = \"period\";\n\n  /**\n   * Returns a clone of the duration object.\n   *\n   * @return {Period}      The cloned object\n   */\n  clone() {\n    return Period.fromData({\n      start: this.start ? this.start.clone() : null,\n      end: this.end ? this.end.clone() : null,\n      duration: this.duration ? this.duration.clone() : null\n    });\n  }\n\n  /**\n   * Calculates the duration of the period, either directly or by subtracting\n   * start from end date.\n   *\n   * @return {Duration}      The calculated duration\n   */\n  getDuration() {\n    if (this.duration) {\n      return this.duration;\n    } else {\n      return this.end.subtractDate(this.start);\n    }\n  }\n\n  /**\n   * Calculates the end date of the period, either directly or by adding\n   * duration to start date.\n   *\n   * @return {Time}          The calculated end date\n   */\n  getEnd() {\n    if (this.end) {\n      return this.end;\n    } else {\n      let end = this.start.clone();\n      end.addDuration(this.duration);\n      return end;\n    }\n  }\n\n  /**\n   * The string representation of this period.\n   * @return {String}\n   */\n  toString() {\n    return this.start + \"/\" + (this.end || this.duration);\n  }\n\n  /**\n   * The jCal representation of this period type.\n   * @return {Object}\n   */\n  toJSON() {\n    return [this.start.toString(), (this.end || this.duration).toString()];\n  }\n\n  /**\n   * The iCalendar string representation of this period.\n   * @return {String}\n   */\n  toICALString() {\n    return this.start.toICALString() + \"/\" +\n           (this.end || this.duration).toICALString();\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\n/** @module ICAL.design */\n\nconst FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\nconst TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\nconst FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\nconst TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\nfunction createTextType(fromNewline, toNewline) {\n  let result = {\n    matches: /.*/,\n\n    fromICAL: function(aValue, structuredEscape) {\n      return replaceNewline(aValue, fromNewline, structuredEscape);\n    },\n\n    toICAL: function(aValue, structuredEscape) {\n      let regEx = toNewline;\n      if (structuredEscape)\n         regEx = new RegExp(regEx.source + '|' + structuredEscape, regEx.flags);\n      return aValue.replace(regEx, function(str) {\n        switch (str) {\n        case \"\\\\\":\n          return \"\\\\\\\\\";\n        case \";\":\n          return \"\\\\;\";\n        case \",\":\n          return \"\\\\,\";\n        case \"\\n\":\n          return \"\\\\n\";\n        /* c8 ignore next 2 */\n        default:\n          return str;\n        }\n      });\n    }\n  };\n  return result;\n}\n\n// default types used multiple times\nconst DEFAULT_TYPE_TEXT = { defaultType: \"text\" };\nconst DEFAULT_TYPE_TEXT_MULTI = { defaultType: \"text\", multiValue: \",\" };\nconst DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: \"text\", structuredValue: \";\" };\nconst DEFAULT_TYPE_INTEGER = { defaultType: \"integer\" };\nconst DEFAULT_TYPE_DATETIME_DATE = { defaultType: \"date-time\", allowedTypes: [\"date-time\", \"date\"] };\nconst DEFAULT_TYPE_DATETIME = { defaultType: \"date-time\" };\nconst DEFAULT_TYPE_URI = { defaultType: \"uri\" };\nconst DEFAULT_TYPE_UTCOFFSET = { defaultType: \"utc-offset\" };\nconst DEFAULT_TYPE_RECUR = { defaultType: \"recur\" };\nconst DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: \"date-and-or-time\", allowedTypes: [\"date-time\", \"date\", \"text\"] };\n\nfunction replaceNewlineReplace(string) {\n  switch (string) {\n    case \"\\\\\\\\\":\n      return \"\\\\\";\n    case \"\\\\;\":\n      return \";\";\n    case \"\\\\,\":\n      return \",\";\n    case \"\\\\n\":\n    case \"\\\\N\":\n      return \"\\n\";\n    /* c8 ignore next 2 */\n    default:\n      return string;\n  }\n}\n\nfunction replaceNewline(value, newline, structuredEscape) {\n  // avoid regex when possible.\n  if (value.indexOf('\\\\') === -1) {\n    return value;\n  }\n  if (structuredEscape)\n     newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape, newline.flags);\n  return value.replace(newline, replaceNewlineReplace);\n}\n\nlet commonProperties = {\n  \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n  \"url\": DEFAULT_TYPE_URI,\n  \"version\": DEFAULT_TYPE_TEXT,\n  \"uid\": DEFAULT_TYPE_TEXT\n};\n\nlet commonValues = {\n  \"boolean\": {\n    values: [\"TRUE\", \"FALSE\"],\n\n    fromICAL: function(aValue) {\n      switch (aValue) {\n        case 'TRUE':\n          return true;\n        case 'FALSE':\n          return false;\n        default:\n          //TODO: parser warning\n          return false;\n      }\n    },\n\n    toICAL: function(aValue) {\n      if (aValue) {\n        return 'TRUE';\n      }\n      return 'FALSE';\n    }\n\n  },\n  float: {\n    matches: /^[+-]?\\d+\\.\\d+$/,\n\n    fromICAL: function(aValue) {\n      let parsed = parseFloat(aValue);\n      if (isStrictlyNaN(parsed)) {\n        // TODO: parser warning\n        return 0.0;\n      }\n      return parsed;\n    },\n\n    toICAL: function(aValue) {\n      return String(aValue);\n    }\n  },\n  integer: {\n    fromICAL: function(aValue) {\n      let parsed = parseInt(aValue);\n      if (isStrictlyNaN(parsed)) {\n        return 0;\n      }\n      return parsed;\n    },\n\n    toICAL: function(aValue) {\n      return String(aValue);\n    }\n  },\n  \"utc-offset\": {\n    toICAL: function(aValue) {\n      if (aValue.length < 7) {\n        // no seconds\n        // -0500\n        return aValue.slice(0, 3) +\n               aValue.slice(4, 6);\n      } else {\n        // seconds\n        // -050000\n        return aValue.slice(0, 3) +\n               aValue.slice(4, 6) +\n               aValue.slice(7, 9);\n      }\n    },\n\n    fromICAL: function(aValue) {\n      if (aValue.length < 6) {\n        // no seconds\n        // -05:00\n        return aValue.slice(0, 3) + ':' +\n               aValue.slice(3, 5);\n      } else {\n        // seconds\n        // -05:00:00\n        return aValue.slice(0, 3) + ':' +\n               aValue.slice(3, 5) + ':' +\n               aValue.slice(5, 7);\n      }\n    },\n\n    decorate: function(aValue) {\n      return UtcOffset.fromString(aValue);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  }\n};\n\nlet icalParams = {\n  // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n  // enforce anything aside from it being a valid content line.\n  //\n  // At least some params require - if multi values are used - DQUOTEs\n  // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n  // To indicate this, I introduced the new k/v pair\n  // multiValueSeparateDQuote: true\n  //\n  // \"ALTREP\": { ... },\n\n  // CN just wants a param-value\n  // \"CN\": { ... }\n\n  \"cutype\": {\n    values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n\n  \"delegated-from\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  \"delegated-to\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  // \"DIR\": { ... }, // See ALTREP\n  \"encoding\": {\n    values: [\"8BIT\", \"BASE64\"]\n  },\n  // \"FMTTYPE\": { ... }, // See ALTREP\n  \"fbtype\": {\n    values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  // \"LANGUAGE\": { ... }, // See ALTREP\n  \"member\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  \"partstat\": {\n    // TODO These values are actually different per-component\n    values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\",\n             \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"range\": {\n    values: [\"THISANDFUTURE\"]\n  },\n  \"related\": {\n    values: [\"START\", \"END\"]\n  },\n  \"reltype\": {\n    values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"role\": {\n    values: [\"REQ-PARTICIPANT\", \"CHAIR\",\n             \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"rsvp\": {\n    values: [\"TRUE\", \"FALSE\"]\n  },\n  \"sent-by\": {\n    valueType: \"cal-address\"\n  },\n  \"tzid\": {\n    matches: /^\\//\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\",\n             \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\",\n             \"time\", \"uri\", \"utc-offset\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\n// When adding a value here, be sure to add it to the parameter types!\nconst icalValues = extend(commonValues, {\n  text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n\n  uri: {\n    // TODO\n    /* ... */\n  },\n\n  \"binary\": {\n    decorate: function(aString) {\n      return Binary.fromString(aString);\n    },\n\n    undecorate: function(aBinary) {\n      return aBinary.toString();\n    }\n  },\n  \"cal-address\": {\n    // needs to be an uri\n  },\n  \"date\": {\n    decorate: function(aValue, aProp) {\n      if (design.strict) {\n        return Time.fromDateString(aValue, aProp);\n      } else {\n        return Time.fromString(aValue, aProp);\n      }\n    },\n\n    /**\n     * undecorates a time object.\n     */\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      // from: 20120901\n      // to: 2012-09-01\n      if (!design.strict && aValue.length >= 15) {\n        // This is probably a date-time, e.g. 20120901T130000Z\n        return icalValues[\"date-time\"].fromICAL(aValue);\n      } else {\n        return aValue.slice(0, 4) + '-' +\n               aValue.slice(4, 6) + '-' +\n               aValue.slice(6, 8);\n      }\n    },\n\n    toICAL: function(aValue) {\n      // from: 2012-09-01\n      // to: 20120901\n      let len = aValue.length;\n\n      if (len == 10) {\n        return aValue.slice(0, 4) +\n               aValue.slice(5, 7) +\n               aValue.slice(8, 10);\n      } else if (len >= 19) {\n        return icalValues[\"date-time\"].toICAL(aValue);\n      } else {\n        //TODO: serialize warning?\n        return aValue;\n      }\n\n    }\n  },\n  \"date-time\": {\n    fromICAL: function(aValue) {\n      // from: 20120901T130000\n      // to: 2012-09-01T13:00:00\n      if (!design.strict && aValue.length == 8) {\n        // This is probably a date, e.g. 20120901\n        return icalValues.date.fromICAL(aValue);\n      } else {\n        let result = aValue.slice(0, 4) + '-' +\n                     aValue.slice(4, 6) + '-' +\n                     aValue.slice(6, 8) + 'T' +\n                     aValue.slice(9, 11) + ':' +\n                     aValue.slice(11, 13) + ':' +\n                     aValue.slice(13, 15);\n\n        if (aValue[15] && aValue[15] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    },\n\n    toICAL: function(aValue) {\n      // from: 2012-09-01T13:00:00\n      // to: 20120901T130000\n      let len = aValue.length;\n\n      if (len == 10 && !design.strict) {\n        return icalValues.date.toICAL(aValue);\n      } else if (len >= 19) {\n        let result = aValue.slice(0, 4) +\n                     aValue.slice(5, 7) +\n                     // grab the (DDTHH) segment\n                     aValue.slice(8, 13) +\n                     // MM\n                     aValue.slice(14, 16) +\n                     // SS\n                     aValue.slice(17, 19);\n\n        if (aValue[19] && aValue[19] === 'Z') {\n          result += 'Z';\n        }\n        return result;\n      } else {\n        // TODO: error\n        return aValue;\n      }\n    },\n\n    decorate: function(aValue, aProp) {\n      if (design.strict) {\n        return Time.fromDateTimeString(aValue, aProp);\n      } else {\n        return Time.fromString(aValue, aProp);\n      }\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  },\n  duration: {\n    decorate: function(aValue) {\n      return Duration.fromString(aValue);\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  },\n  period: {\n    fromICAL: function(string) {\n      let parts = string.split('/');\n      parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n      if (!Duration.isValueString(parts[1])) {\n        parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n      }\n\n      return parts;\n    },\n\n    toICAL: function(parts) {\n      parts = parts.slice();\n      if (!design.strict && parts[0].length == 10) {\n        parts[0] = icalValues.date.toICAL(parts[0]);\n      } else {\n        parts[0] = icalValues['date-time'].toICAL(parts[0]);\n      }\n\n      if (!Duration.isValueString(parts[1])) {\n        if (!design.strict && parts[1].length == 10) {\n          parts[1] = icalValues.date.toICAL(parts[1]);\n        } else {\n          parts[1] = icalValues['date-time'].toICAL(parts[1]);\n        }\n      }\n\n      return parts.join(\"/\");\n    },\n\n    decorate: function(aValue, aProp) {\n      return Period.fromJSON(aValue, aProp, !design.strict);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toJSON();\n    }\n  },\n  recur: {\n    fromICAL: function(string) {\n      return Recur._stringToData(string, true);\n    },\n\n    toICAL: function(data) {\n      let str = \"\";\n      for (let [k, val] of Object.entries(data)) {\n        if (k == \"until\") {\n          if (val.length > 10) {\n            val = icalValues['date-time'].toICAL(val);\n          } else {\n            val = icalValues.date.toICAL(val);\n          }\n        } else if (k == \"wkst\") {\n          if (typeof val === 'number') {\n            val = Recur.numericDayToIcalDay(val);\n          }\n        } else if (Array.isArray(val)) {\n          val = val.join(\",\");\n        }\n        str += k.toUpperCase() + \"=\" + val + \";\";\n      }\n      return str.slice(0, Math.max(0, str.length - 1));\n    },\n\n    decorate: function decorate(aValue) {\n      return Recur.fromData(aValue);\n    },\n\n    undecorate: function(aRecur) {\n      return aRecur.toJSON();\n    }\n  },\n\n  time: {\n    fromICAL: function(aValue) {\n      // from: MMHHSS(Z)?\n      // to: HH:MM:SS(Z)?\n      if (aValue.length < 6) {\n        // TODO: parser exception?\n        return aValue;\n      }\n\n      // HH::MM::SSZ?\n      let result = aValue.slice(0, 2) + ':' +\n                   aValue.slice(2, 4) + ':' +\n                   aValue.slice(4, 6);\n\n      if (aValue[6] === 'Z') {\n        result += 'Z';\n      }\n\n      return result;\n    },\n\n    toICAL: function(aValue) {\n      // from: HH:MM:SS(Z)?\n      // to: MMHHSS(Z)?\n      if (aValue.length < 8) {\n        //TODO: error\n        return aValue;\n      }\n\n      let result = aValue.slice(0, 2) +\n                   aValue.slice(3, 5) +\n                   aValue.slice(6, 8);\n\n      if (aValue[8] === 'Z') {\n        result += 'Z';\n      }\n\n      return result;\n    }\n  }\n});\n\nlet icalProperties = extend(commonProperties, {\n\n  \"action\": DEFAULT_TYPE_TEXT,\n  \"attach\": { defaultType: \"uri\" },\n  \"attendee\": { defaultType: \"cal-address\" },\n  \"calscale\": DEFAULT_TYPE_TEXT,\n  \"class\": DEFAULT_TYPE_TEXT,\n  \"comment\": DEFAULT_TYPE_TEXT,\n  \"completed\": DEFAULT_TYPE_DATETIME,\n  \"contact\": DEFAULT_TYPE_TEXT,\n  \"created\": DEFAULT_TYPE_DATETIME,\n  \"description\": DEFAULT_TYPE_TEXT,\n  \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n  \"dtstamp\": DEFAULT_TYPE_DATETIME,\n  \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n  \"due\": DEFAULT_TYPE_DATETIME_DATE,\n  \"duration\": { defaultType: \"duration\" },\n  \"exdate\": {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    multiValue: ','\n  },\n  \"exrule\": DEFAULT_TYPE_RECUR,\n  \"freebusy\": { defaultType: \"period\", multiValue: \",\" },\n  \"geo\": { defaultType: \"float\", structuredValue: \";\" },\n  \"last-modified\": DEFAULT_TYPE_DATETIME,\n  \"location\": DEFAULT_TYPE_TEXT,\n  \"method\": DEFAULT_TYPE_TEXT,\n  \"organizer\": { defaultType: \"cal-address\" },\n  \"percent-complete\": DEFAULT_TYPE_INTEGER,\n  \"priority\": DEFAULT_TYPE_INTEGER,\n  \"prodid\": DEFAULT_TYPE_TEXT,\n  \"related-to\": DEFAULT_TYPE_TEXT,\n  \"repeat\": DEFAULT_TYPE_INTEGER,\n  \"rdate\": {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\", \"period\"],\n    multiValue: ',',\n    detectType: function(string) {\n      if (string.indexOf('/') !== -1) {\n        return 'period';\n      }\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n  \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n  \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n  \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"rrule\": DEFAULT_TYPE_RECUR,\n  \"sequence\": DEFAULT_TYPE_INTEGER,\n  \"status\": DEFAULT_TYPE_TEXT,\n  \"summary\": DEFAULT_TYPE_TEXT,\n  \"transp\": DEFAULT_TYPE_TEXT,\n  \"trigger\": { defaultType: \"duration\", allowedTypes: [\"duration\", \"date-time\"] },\n  \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n  \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n  \"tzurl\": DEFAULT_TYPE_URI,\n  \"tzid\": DEFAULT_TYPE_TEXT,\n  \"tzname\": DEFAULT_TYPE_TEXT\n});\n\n// When adding a value here, be sure to add it to the parameter types!\nconst vcardValues = extend(commonValues, {\n  text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n  uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n\n  date: {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n    fromICAL: function(aValue) {\n      if (aValue.length == 8) {\n        return icalValues.date.fromICAL(aValue);\n      } else if (aValue[0] == '-' && aValue.length == 6) {\n        return aValue.slice(0, 4) + '-' + aValue.slice(4);\n      } else {\n        return aValue;\n      }\n    },\n    toICAL: function(aValue) {\n      if (aValue.length == 10) {\n        return icalValues.date.toICAL(aValue);\n      } else if (aValue[0] == '-' && aValue.length == 7) {\n        return aValue.slice(0, 4) + aValue.slice(5);\n      } else {\n        return aValue;\n      }\n    }\n  },\n\n  time: {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n    fromICAL: function(aValue) {\n      let splitzone = vcardValues.time._splitZone(aValue, true);\n      let zone = splitzone[0], value = splitzone[1];\n\n      //console.log(\"SPLIT: \",splitzone);\n\n      if (value.length == 6) {\n        value = value.slice(0, 2) + ':' +\n                value.slice(2, 4) + ':' +\n                value.slice(4, 6);\n      } else if (value.length == 4 && value[0] != '-') {\n        value = value.slice(0, 2) + ':' + value.slice(2, 4);\n      } else if (value.length == 5) {\n        value = value.slice(0, 3) + ':' + value.slice(3, 5);\n      }\n\n      if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n        zone = zone.slice(0, 3) + ':' + zone.slice(3);\n      }\n\n      return value + zone;\n    },\n\n    toICAL: function(aValue) {\n      let splitzone = vcardValues.time._splitZone(aValue);\n      let zone = splitzone[0], value = splitzone[1];\n\n      if (value.length == 8) {\n        value = value.slice(0, 2) +\n                value.slice(3, 5) +\n                value.slice(6, 8);\n      } else if (value.length == 5 && value[0] != '-') {\n        value = value.slice(0, 2) + value.slice(3, 5);\n      } else if (value.length == 6) {\n        value = value.slice(0, 3) + value.slice(4, 6);\n      }\n\n      if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n        zone = zone.slice(0, 3) + zone.slice(4);\n      }\n\n      return value + zone;\n    },\n\n    _splitZone: function(aValue, isFromIcal) {\n      let lastChar = aValue.length - 1;\n      let signChar = aValue.length - (isFromIcal ? 5 : 6);\n      let sign = aValue[signChar];\n      let zone, value;\n\n      if (aValue[lastChar] == 'Z') {\n        zone = aValue[lastChar];\n        value = aValue.slice(0, Math.max(0, lastChar));\n      } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n        zone = aValue.slice(signChar);\n        value = aValue.slice(0, Math.max(0, signChar));\n      } else {\n        zone = \"\";\n        value = aValue;\n      }\n\n      return [zone, value];\n    }\n  },\n\n  \"date-time\": {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      return vcardValues['date-and-or-time'].fromICAL(aValue);\n    },\n\n    toICAL: function(aValue) {\n      return vcardValues['date-and-or-time'].toICAL(aValue);\n    }\n  },\n\n  \"date-and-or-time\": {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      let parts = aValue.split('T');\n      return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +\n             (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n    },\n\n    toICAL: function(aValue) {\n      let parts = aValue.split('T');\n      return vcardValues.date.toICAL(parts[0]) +\n             (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n\n    }\n  },\n  timestamp: icalValues['date-time'],\n  \"language-tag\": {\n    matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n  },\n  \"phone-number\": {\n    fromICAL: function(aValue) {\n      return Array.from(aValue).filter(function(c) {\n          return c === '\\\\' ? undefined : c;\n        }).join('');\n    },\n    toICAL: function(aValue) {\n      return Array.from(aValue).map(function(c) {\n        return c === ',' || c === \";\" ? '\\\\' + c : c;\n      }).join('');\n    }\n  }\n});\n\nlet vcardParams = {\n  \"type\": {\n    valueType: \"text\",\n    multiValue: \",\"\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\",\n             \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\",\n             \"language-tag\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\nlet vcardProperties = extend(commonProperties, {\n  \"adr\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n  \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n  \"caladruri\": DEFAULT_TYPE_URI,\n  \"caluri\": DEFAULT_TYPE_URI,\n  \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"email\": DEFAULT_TYPE_TEXT,\n  \"fburl\": DEFAULT_TYPE_URI,\n  \"fn\": DEFAULT_TYPE_TEXT,\n  \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"geo\": DEFAULT_TYPE_URI,\n  \"impp\": DEFAULT_TYPE_URI,\n  \"key\": DEFAULT_TYPE_URI,\n  \"kind\": DEFAULT_TYPE_TEXT,\n  \"lang\": { defaultType: \"language-tag\" },\n  \"logo\": DEFAULT_TYPE_URI,\n  \"member\": DEFAULT_TYPE_URI,\n  \"n\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n  \"note\": DEFAULT_TYPE_TEXT,\n  \"org\": { defaultType: \"text\", structuredValue: \";\" },\n  \"photo\": DEFAULT_TYPE_URI,\n  \"related\": DEFAULT_TYPE_URI,\n  \"rev\": { defaultType: \"timestamp\" },\n  \"role\": DEFAULT_TYPE_TEXT,\n  \"sound\": DEFAULT_TYPE_URI,\n  \"source\": DEFAULT_TYPE_URI,\n  \"tel\": { defaultType: \"uri\", allowedTypes: [\"uri\", \"text\"] },\n  \"title\": DEFAULT_TYPE_TEXT,\n  \"tz\": { defaultType: \"text\", allowedTypes: [\"text\", \"utc-offset\", \"uri\"] },\n  \"xml\": DEFAULT_TYPE_TEXT\n});\n\nlet vcard3Values = extend(commonValues, {\n  binary: icalValues.binary,\n  date: vcardValues.date,\n  \"date-time\": vcardValues[\"date-time\"],\n  \"phone-number\": vcardValues[\"phone-number\"],\n  uri: icalValues.uri,\n  text: icalValues.text,\n  time: icalValues.time,\n  vcard: icalValues.text,\n  \"utc-offset\": {\n    toICAL: function(aValue) {\n      return aValue.slice(0, 7);\n    },\n\n    fromICAL: function(aValue) {\n      return aValue.slice(0, 7);\n    },\n\n    decorate: function(aValue) {\n      return UtcOffset.fromString(aValue);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  }\n});\n\nlet vcard3Params = {\n  \"type\": {\n    valueType: \"text\",\n    multiValue: \",\"\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\",\n             \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\nlet vcard3Properties = extend(commonProperties, {\n  fn: DEFAULT_TYPE_TEXT,\n  n: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  nickname: DEFAULT_TYPE_TEXT_MULTI,\n  photo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n  bday: {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    detectType: function(string) {\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n\n  adr: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  label: DEFAULT_TYPE_TEXT,\n\n  tel: { defaultType: \"phone-number\" },\n  email: DEFAULT_TYPE_TEXT,\n  mailer: DEFAULT_TYPE_TEXT,\n\n  tz: { defaultType: \"utc-offset\", allowedTypes: [\"utc-offset\", \"text\"] },\n  geo: { defaultType: \"float\", structuredValue: \";\" },\n\n  title: DEFAULT_TYPE_TEXT,\n  role: DEFAULT_TYPE_TEXT,\n  logo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n  agent: { defaultType: \"vcard\", allowedTypes: [\"vcard\", \"text\", \"uri\"] },\n  org: DEFAULT_TYPE_TEXT_STRUCTURED,\n\n  note: DEFAULT_TYPE_TEXT_MULTI,\n  prodid: DEFAULT_TYPE_TEXT,\n  rev: {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    detectType: function(string) {\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n  \"sort-string\": DEFAULT_TYPE_TEXT,\n  sound: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n\n  class: DEFAULT_TYPE_TEXT,\n  key: { defaultType: \"binary\", allowedTypes: [\"binary\", \"text\"] }\n});\n\n/**\n * iCalendar design set\n * @type {designSet}\n */\nlet icalSet = {\n  value: icalValues,\n  param: icalParams,\n  property: icalProperties,\n  propertyGroups: false\n};\n\n/**\n * vCard 4.0 design set\n * @type {designSet}\n */\nlet vcardSet = {\n  value: vcardValues,\n  param: vcardParams,\n  property: vcardProperties,\n  propertyGroups: true\n};\n\n/**\n * vCard 3.0 design set\n * @type {designSet}\n */\nlet vcard3Set = {\n  value: vcard3Values,\n  param: vcard3Params,\n  property: vcard3Properties,\n  propertyGroups: true\n};\n\n/**\n * The design data, used by the parser to determine types for properties and\n * other metadata needed to produce correct jCard/jCal data.\n *\n * @alias ICAL.design\n * @exports module:ICAL.design\n */\nconst design = {\n  /**\n   * Can be set to false to make the parser more lenient.\n   */\n  strict: true,\n\n  /**\n   * The default set for new properties and components if none is specified.\n   * @type {designSet}\n   */\n  defaultSet: icalSet,\n\n  /**\n   * The default type for unknown properties\n   * @type {String}\n   */\n  defaultType: 'unknown',\n\n  /**\n   * Holds the design set for known top-level components\n   *\n   * @type {Object}\n   * @property {designSet} vcard       vCard VCARD\n   * @property {designSet} vevent      iCalendar VEVENT\n   * @property {designSet} vtodo       iCalendar VTODO\n   * @property {designSet} vjournal    iCalendar VJOURNAL\n   * @property {designSet} valarm      iCalendar VALARM\n   * @property {designSet} vtimezone   iCalendar VTIMEZONE\n   * @property {designSet} daylight    iCalendar DAYLIGHT\n   * @property {designSet} standard    iCalendar STANDARD\n   *\n   * @example\n   * let propertyName = 'fn';\n   * let componentDesign = ICAL.design.components.vcard;\n   * let propertyDetails = componentDesign.property[propertyName];\n   * if (propertyDetails.defaultType == 'text') {\n   *   // Yep, sure is...\n   * }\n   */\n  components: {\n    vcard: vcardSet,\n    vcard3: vcard3Set,\n    vevent: icalSet,\n    vtodo: icalSet,\n    vjournal: icalSet,\n    valarm: icalSet,\n    vtimezone: icalSet,\n    daylight: icalSet,\n    standard: icalSet\n  },\n\n\n  /**\n   * The design set for iCalendar (rfc5545/rfc7265) components.\n   * @type {designSet}\n   */\n  icalendar: icalSet,\n\n  /**\n   * The design set for vCard (rfc6350/rfc7095) components.\n   * @type {designSet}\n   */\n  vcard: vcardSet,\n\n  /**\n   * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n   * @type {designSet}\n   */\n  vcard3: vcard3Set,\n\n  /**\n   * Gets the design set for the given component name.\n   *\n   * @param {String} componentName        The name of the component\n   * @return {designSet}      The design set for the component\n   */\n  getDesignSet: function(componentName) {\n    let isInDesign = componentName && componentName in design.components;\n    return isInDesign ? design.components[componentName] : design.defaultSet;\n  }\n};\nvar design$1 = design;\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\nconst LINE_ENDING = '\\r\\n';\nconst DEFAULT_VALUE_TYPE = 'unknown';\nconst RFC6868_REPLACE_MAP = { '\"': \"^'\", \"\\n\": \"^n\", \"^\": \"^^\" };\n\n/**\n * Convert a full jCal/jCard array into a iCalendar/vCard string.\n *\n * @function ICAL.stringify\n * @variation function\n * @param {Array} jCal    The jCal/jCard document\n * @return {String}       The stringified iCalendar/vCard document\n */\nfunction stringify(jCal) {\n  if (typeof jCal[0] == \"string\") {\n    // This is a single component\n    jCal = [jCal];\n  }\n\n  let i = 0;\n  let len = jCal.length;\n  let result = '';\n\n  for (; i < len; i++) {\n    result += stringify.component(jCal[i]) + LINE_ENDING;\n  }\n\n  return result;\n}\n\n/**\n * Converts an jCal component array into a ICAL string.\n * Recursive will resolve sub-components.\n *\n * Exact component/property order is not saved all\n * properties will come before subcomponents.\n *\n * @function ICAL.stringify.component\n * @param {Array} component\n *        jCal/jCard fragment of a component\n * @param {designSet} designSet\n *        The design data to use for this component\n * @return {String}       The iCalendar/vCard string\n */\nstringify.component = function(component, designSet) {\n  let name = component[0].toUpperCase();\n  let result = 'BEGIN:' + name + LINE_ENDING;\n\n  let props = component[1];\n  let propIdx = 0;\n  let propLen = props.length;\n\n  let designSetName = component[0];\n  // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n  // component with as value 4.0, note that 3.0 does not have this requirement.\n  if (designSetName === 'vcard' && component[1].length > 0 &&\n          !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n    designSetName = \"vcard3\";\n  }\n  designSet = designSet || design$1.getDesignSet(designSetName);\n\n  for (; propIdx < propLen; propIdx++) {\n    result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n  }\n\n  // Ignore subcomponents if none exist, e.g. in vCard.\n  let comps = component[2] || [];\n  let compIdx = 0;\n  let compLen = comps.length;\n\n  for (; compIdx < compLen; compIdx++) {\n    result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n  }\n\n  result += 'END:' + name;\n  return result;\n};\n\n/**\n * Converts a single jCal/jCard property to a iCalendar/vCard string.\n *\n * @function ICAL.stringify.property\n * @param {Array} property\n *        jCal/jCard property array\n * @param {designSet} designSet\n *        The design data to use for this property\n * @param {Boolean} noFold\n *        If true, the line is not folded\n * @return {String}       The iCalendar/vCard string\n */\nstringify.property = function(property, designSet, noFold) {\n  let name = property[0].toUpperCase();\n  let jsName = property[0];\n  let params = property[1];\n\n  if (!designSet) {\n    designSet = design$1.defaultSet;\n  }\n\n  let groupName = params.group;\n  let line;\n  if (designSet.propertyGroups && groupName) {\n    line = groupName.toUpperCase() + \".\" + name;\n  } else {\n    line = name;\n  }\n\n  for (let [paramName, value] of Object.entries(params)) {\n    if (designSet.propertyGroups && paramName == 'group') {\n      continue;\n    }\n\n    let paramDesign = designSet.param[paramName];\n    let multiValue = paramDesign && paramDesign.multiValue;\n    if (multiValue && Array.isArray(value)) {\n      value = value.map(function(val) {\n        val = stringify._rfc6868Unescape(val);\n        val = stringify.paramPropertyValue(val, paramDesign.multiValueSeparateDQuote);\n        return val;\n      });\n      value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n    } else {\n      value = stringify._rfc6868Unescape(value);\n      value = stringify.paramPropertyValue(value);\n    }\n\n    line += ';' + paramName.toUpperCase() + '=' + value;\n  }\n\n  if (property.length === 3) {\n    // If there are no values, we must assume a blank value\n    return line + ':';\n  }\n\n  let valueType = property[2];\n\n  let propDetails;\n  let multiValue = false;\n  let structuredValue = false;\n  let isDefault = false;\n\n  if (jsName in designSet.property) {\n    propDetails = designSet.property[jsName];\n\n    if ('multiValue' in propDetails) {\n      multiValue = propDetails.multiValue;\n    }\n\n    if (('structuredValue' in propDetails) && Array.isArray(property[3])) {\n      structuredValue = propDetails.structuredValue;\n    }\n\n    if ('defaultType' in propDetails) {\n      if (valueType === propDetails.defaultType) {\n        isDefault = true;\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    }\n  } else {\n    if (valueType === DEFAULT_VALUE_TYPE) {\n      isDefault = true;\n    }\n  }\n\n  // push the VALUE property if type is not the default\n  // for the current property.\n  if (!isDefault) {\n    // value will never contain ;/:/, so we don't escape it here.\n    line += ';VALUE=' + valueType.toUpperCase();\n  }\n\n  line += ':';\n\n  if (multiValue && structuredValue) {\n    line += stringify.multiValue(\n      property[3], structuredValue, valueType, multiValue, designSet, structuredValue\n    );\n  } else if (multiValue) {\n    line += stringify.multiValue(\n      property.slice(3), multiValue, valueType, null, designSet, false\n    );\n  } else if (structuredValue) {\n    line += stringify.multiValue(\n      property[3], structuredValue, valueType, null, designSet, structuredValue\n    );\n  } else {\n    line += stringify.value(property[3], valueType, designSet, false);\n  }\n\n  return noFold ? line : foldline(line);\n};\n\n/**\n * Handles escaping of property values that may contain:\n *\n *    COLON (:), SEMICOLON (;), or COMMA (,)\n *\n * If any of the above are present the result is wrapped\n * in double quotes.\n *\n * @function ICAL.stringify.paramPropertyValue\n * @param {String} value      Raw property value\n * @param {boolean} force     If value should be escaped even when unnecessary\n * @return {String}           Given or escaped value when needed\n */\nstringify.paramPropertyValue = function(value, force) {\n  if (!force &&\n      (value.indexOf(',') === -1) &&\n      (value.indexOf(':') === -1) &&\n      (value.indexOf(';') === -1)) {\n\n    return value;\n  }\n\n  return '\"' + value + '\"';\n};\n\n/**\n * Converts an array of ical values into a single\n * string based on a type and a delimiter value (like \",\").\n *\n * @function ICAL.stringify.multiValue\n * @param {Array} values      List of values to convert\n * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n * @param {String} type       Lowecase ical value type\n *        (like boolean, date-time, etc..)\n * @param {?String} innerMulti If set, each value will again be processed\n *        Used for structured values\n * @param {designSet} designSet\n *        The design data to use for this property\n *\n * @return {String}           iCalendar/vCard string for value\n */\nstringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {\n  let result = '';\n  let len = values.length;\n  let i = 0;\n\n  for (; i < len; i++) {\n    if (innerMulti && Array.isArray(values[i])) {\n      result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n    } else {\n      result += stringify.value(values[i], type, designSet, structuredValue);\n    }\n\n    if (i !== (len - 1)) {\n      result += delim;\n    }\n  }\n\n  return result;\n};\n\n/**\n * Processes a single ical value runs the associated \"toICAL\" method from the\n * design value type if available to convert the value.\n *\n * @function ICAL.stringify.value\n * @param {String|Number} value       A formatted value\n * @param {String} type               Lowercase iCalendar/vCard value type\n *  (like boolean, date-time, etc..)\n * @return {String}                   iCalendar/vCard value for single value\n */\nstringify.value = function(value, type, designSet, structuredValue) {\n  if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n    return designSet.value[type].toICAL(value, structuredValue);\n  }\n  return value;\n};\n\n/**\n * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n * hackers can disable the rfc6868 parsing if the really need to.\n *\n * @param {String} val        The value to unescape\n * @return {String}           The escaped value\n */\nstringify._rfc6868Unescape = function(val) {\n  return val.replace(/[\\n^\"]/g, function(x) {\n    return RFC6868_REPLACE_MAP[x];\n  });\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\nconst NAME_INDEX$1 = 0;\nconst PROP_INDEX = 1;\nconst TYPE_INDEX = 2;\nconst VALUE_INDEX = 3;\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").Geo} Geo\n * Imports the 'Geo' type from the \"types.js\" module\n */\n\n/**\n * Provides a layer on top of the raw jCal object for manipulating a single property, with its\n * parameters and value.\n *\n * @memberof ICAL\n */\nclass Property {\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str            The iCalendar string to parse\n   * @param {designSet=} designSet  The design data to use for this property\n   * @return {Property}             The created iCalendar property\n   */\n  static fromString(str, designSet) {\n    return new Property(parse.property(str, designSet));\n  }\n\n  /**\n   * Creates a new ICAL.Property instance.\n   *\n   * It is important to note that mutations done in the wrapper directly mutate the jCal object used\n   * to initialize.\n   *\n   * Can also be used to create new properties by passing the name of the property (as a String).\n   *\n   * @param {Array|String} jCal         Raw jCal representation OR the new name of the property\n   * @param {Component=} parent         Parent component\n   */\n  constructor(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof(jCal) === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design$1.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n    this._updateType();\n  }\n\n  /**\n   * The value type for this property\n   * @type {String}\n   */\n  get type() {\n    return this.jCal[TYPE_INDEX];\n  }\n\n  /**\n   * The name of this property, in lowercase.\n   * @type {String}\n   */\n  get name() {\n    return this.jCal[NAME_INDEX$1];\n  }\n\n  /**\n   * The parent component for this property.\n   * @type {Component}\n   */\n  get parent() {\n    return this._parent;\n  }\n\n  set parent(p) {\n    // Before setting the parent, check if the design set has changed. If it\n    // has, we later need to update the type if it was unknown before.\n    let designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);\n\n    this._parent = p;\n\n    if (this.type == design$1.defaultType && designSetChanged) {\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n      this._updateType();\n    }\n  }\n\n  /**\n   * The design set for this property, e.g. icalendar vs vcard\n   *\n   * @type {designSet}\n   * @private\n   */\n  get _designSet() {\n    return this.parent ? this.parent._designSet : design$1.defaultSet;\n  }\n\n  /**\n   * Updates the type metadata from the current jCal type and design set.\n   *\n   * @private\n   */\n  _updateType() {\n    let designSet = this._designSet;\n\n    if (this.type in designSet.value) {\n      if ('decorate' in designSet.value[this.type]) {\n        this.isDecorated = true;\n      } else {\n        this.isDecorated = false;\n      }\n\n      if (this.name in designSet.property) {\n        this.isMultiValue = ('multiValue' in designSet.property[this.name]);\n        this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);\n      }\n    }\n  }\n\n  /**\n   * Hydrate a single value. The act of hydrating means turning the raw jCal\n   * value into a potentially wrapped object, for example {@link ICAL.Time}.\n   *\n   * @private\n   * @param {Number} index        The index of the value to hydrate\n   * @return {?Object}             The decorated value.\n   */\n  _hydrateValue(index) {\n    if (this._values && this._values[index]) {\n      return this._values[index];\n    }\n\n    // for the case where there is no value.\n    if (this.jCal.length <= (VALUE_INDEX + index)) {\n      return null;\n    }\n\n    if (this.isDecorated) {\n      if (!this._values) {\n        this._values = [];\n      }\n      return (this._values[index] = this._decorate(\n        this.jCal[VALUE_INDEX + index]\n      ));\n    } else {\n      return this.jCal[VALUE_INDEX + index];\n    }\n  }\n\n  /**\n   * Decorate a single value, returning its wrapped object. This is used by\n   * the hydrate function to actually wrap the value.\n   *\n   * @private\n   * @param {?} value         The value to decorate\n   * @return {Object}         The decorated value\n   */\n  _decorate(value) {\n    return this._designSet.value[this.type].decorate(value, this);\n  }\n\n  /**\n   * Undecorate a single value, returning its raw jCal data.\n   *\n   * @private\n   * @param {Object} value         The value to undecorate\n   * @return {?}                   The undecorated value\n   */\n  _undecorate(value) {\n    return this._designSet.value[this.type].undecorate(value, this);\n  }\n\n  /**\n   * Sets the value at the given index while also hydrating it. The passed\n   * value can either be a decorated or undecorated value.\n   *\n   * @private\n   * @param {?} value             The value to set\n   * @param {Number} index        The index to set it at\n   */\n  _setDecoratedValue(value, index) {\n    if (!this._values) {\n      this._values = [];\n    }\n\n    if (typeof(value) === 'object' && 'icaltype' in value) {\n      // decorated value\n      this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n      this._values[index] = value;\n    } else {\n      // undecorated value\n      this.jCal[VALUE_INDEX + index] = value;\n      this._values[index] = this._decorate(value);\n    }\n  }\n\n  /**\n   * Gets a parameter on the property.\n   *\n   * @param {String}        name   Parameter name (lowercase)\n   * @return {Array|String}        Parameter value\n   */\n  getParameter(name) {\n    if (name in this.jCal[PROP_INDEX]) {\n      return this.jCal[PROP_INDEX][name];\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Gets first parameter on the property.\n   *\n   * @param {String}        name   Parameter name (lowercase)\n   * @return {String}        Parameter value\n   */\n  getFirstParameter(name) {\n    let parameters = this.getParameter(name);\n\n    if (Array.isArray(parameters)) {\n      return parameters[0];\n    }\n\n    return parameters;\n  }\n\n  /**\n   * Sets a parameter on the property.\n   *\n   * @param {String}       name     The parameter name\n   * @param {Array|String} value    The parameter value\n   */\n  setParameter(name, value) {\n    let lcname = name.toLowerCase();\n    if (typeof value === \"string\" &&\n        lcname in this._designSet.param &&\n        'multiValue' in this._designSet.param[lcname]) {\n        value = [value];\n    }\n    this.jCal[PROP_INDEX][name] = value;\n  }\n\n  /**\n   * Removes a parameter\n   *\n   * @param {String} name     The parameter name\n   */\n  removeParameter(name) {\n    delete this.jCal[PROP_INDEX][name];\n  }\n\n  /**\n   * Get the default type based on this property's name.\n   *\n   * @return {String}     The default type for this property\n   */\n  getDefaultType() {\n    let name = this.jCal[NAME_INDEX$1];\n    let designSet = this._designSet;\n\n    if (name in designSet.property) {\n      let details = designSet.property[name];\n      if ('defaultType' in details) {\n        return details.defaultType;\n      }\n    }\n    return design$1.defaultType;\n  }\n\n  /**\n   * Sets type of property and clears out any existing values of the current\n   * type.\n   *\n   * @param {String} type     New iCAL type (see design.*.values)\n   */\n  resetType(type) {\n    this.removeAllValues();\n    this.jCal[TYPE_INDEX] = type;\n    this._updateType();\n  }\n\n  /**\n   * Finds the first property value.\n   *\n   * @return {Binary | Duration | Period |\n   * Recur | Time | UtcOffset | Geo | string | null}         First property value\n   */\n  getFirstValue() {\n    return this._hydrateValue(0);\n  }\n\n  /**\n   * Gets all values on the property.\n   *\n   * NOTE: this creates an array during each call.\n   *\n   * @return {Array}          List of values\n   */\n  getValues() {\n    let len = this.jCal.length - VALUE_INDEX;\n\n    if (len < 1) {\n      // it is possible for a property to have no value.\n      return [];\n    }\n\n    let i = 0;\n    let result = [];\n\n    for (; i < len; i++) {\n      result[i] = this._hydrateValue(i);\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes all values from this property\n   */\n  removeAllValues() {\n    if (this._values) {\n      this._values.length = 0;\n    }\n    this.jCal.length = 3;\n  }\n\n  /**\n   * Sets the values of the property.  Will overwrite the existing values.\n   * This can only be used for multi-value properties.\n   *\n   * @param {Array} values    An array of values\n   */\n  setValues(values) {\n    if (!this.isMultiValue) {\n      throw new Error(\n        this.name + ': does not not support mulitValue.\\n' +\n        'override isMultiValue'\n      );\n    }\n\n    let len = values.length;\n    let i = 0;\n    this.removeAllValues();\n\n    if (len > 0 &&\n        typeof(values[0]) === 'object' &&\n        'icaltype' in values[0]) {\n      this.resetType(values[0].icaltype);\n    }\n\n    if (this.isDecorated) {\n      for (; i < len; i++) {\n        this._setDecoratedValue(values[i], i);\n      }\n    } else {\n      for (; i < len; i++) {\n        this.jCal[VALUE_INDEX + i] = values[i];\n      }\n    }\n  }\n\n  /**\n   * Sets the current value of the property. If this is a multi-value\n   * property, all other values will be removed.\n   *\n   * @param {String|Object} value     New property value.\n   */\n  setValue(value) {\n    this.removeAllValues();\n    if (typeof(value) === 'object' && 'icaltype' in value) {\n      this.resetType(value.icaltype);\n    }\n\n    if (this.isDecorated) {\n      this._setDecoratedValue(value, 0);\n    } else {\n      this.jCal[VALUE_INDEX] = value;\n    }\n  }\n\n  /**\n   * Returns the Object representation of this component. The returned object\n   * is a live jCal object and should be cloned if modified.\n   * @return {Object}\n   */\n  toJSON() {\n    return this.jCal;\n  }\n\n  /**\n   * The string representation of this component.\n   * @return {String}\n   */\n  toICALString() {\n    return stringify.property(\n      this.jCal, this._designSet, true\n    );\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").Geo} Geo\n * Imports the 'Geo' type from the \"types.js\" module\n */\n\nconst NAME_INDEX = 0;\nconst PROPERTY_INDEX = 1;\nconst COMPONENT_INDEX = 2;\n\n/**\n * Wraps a jCal component, adding convenience methods to add, remove and update subcomponents and\n * properties.\n *\n * @memberof ICAL\n */\nclass Component {\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n  static fromString(str) {\n    return new Component(parse.component(str));\n  }\n\n  /**\n   * Creates a new Component instance.\n   *\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {Component=} parent     Parent component to associate\n   */\n  constructor(jCal, parent) {\n    if (typeof(jCal) === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    }\n\n    // mostly for legacy reasons.\n    this.jCal = jCal;\n\n    this.parent = parent || null;\n\n    if (!this.parent && this.name === 'vcalendar') {\n      this._timezoneCache = new Map();\n    }\n  }\n\n  /**\n   * Hydrated properties are inserted into the _properties array at the same\n   * position as in the jCal array, so it is possible that the array contains\n   * undefined values for unhydrdated properties. To avoid iterating the\n   * array when checking if all properties have been hydrated, we save the\n   * count here.\n   *\n   * @type {Number}\n   * @private\n   */\n  _hydratedPropertyCount = 0;\n\n  /**\n   * The same count as for _hydratedPropertyCount, but for subcomponents\n   *\n   * @type {Number}\n   * @private\n   */\n  _hydratedComponentCount = 0;\n\n  /**\n   * A cache of hydrated time zone objects which may be used by consumers, keyed\n   * by time zone ID.\n   *\n   * @type {Map}\n   * @private\n   */\n  _timezoneCache = null;\n\n  /**\n   * @private\n   */\n  _components = null;\n\n  /**\n   * @private\n   */\n  _properties = null;\n\n  /**\n   * The name of this component\n   *\n   * @type {String}\n   */\n  get name() {\n    return this.jCal[NAME_INDEX];\n  }\n\n  /**\n   * The design set for this component, e.g. icalendar vs vcard\n   *\n   * @type {designSet}\n   * @private\n   */\n  get _designSet() {\n    let parentDesign = this.parent && this.parent._designSet;\n    return parentDesign || design$1.getDesignSet(this.name);\n  }\n\n  /**\n   * @private\n   */\n  _hydrateComponent(index) {\n    if (!this._components) {\n      this._components = [];\n      this._hydratedComponentCount = 0;\n    }\n\n    if (this._components[index]) {\n      return this._components[index];\n    }\n\n    let comp = new Component(\n      this.jCal[COMPONENT_INDEX][index],\n      this\n    );\n\n    this._hydratedComponentCount++;\n    return (this._components[index] = comp);\n  }\n\n  /**\n   * @private\n   */\n  _hydrateProperty(index) {\n    if (!this._properties) {\n      this._properties = [];\n      this._hydratedPropertyCount = 0;\n    }\n\n    if (this._properties[index]) {\n      return this._properties[index];\n    }\n\n    let prop = new Property(\n      this.jCal[PROPERTY_INDEX][index],\n      this\n    );\n\n    this._hydratedPropertyCount++;\n    return (this._properties[index] = prop);\n  }\n\n  /**\n   * Finds first sub component, optionally filtered by name.\n   *\n   * @param {String=} name        Optional name to filter by\n   * @return {?Component}     The found subcomponent\n   */\n  getFirstSubcomponent(name) {\n    if (name) {\n      let i = 0;\n      let comps = this.jCal[COMPONENT_INDEX];\n      let len = comps.length;\n\n      for (; i < len; i++) {\n        if (comps[i][NAME_INDEX] === name) {\n          let result = this._hydrateComponent(i);\n          return result;\n        }\n      }\n    } else {\n      if (this.jCal[COMPONENT_INDEX].length) {\n        return this._hydrateComponent(0);\n      }\n    }\n\n    // ensure we return a value (strict mode)\n    return null;\n  }\n\n  /**\n   * Finds all sub components, optionally filtering by name.\n   *\n   * @param {String=} name            Optional name to filter by\n   * @return {Component[]}       The found sub components\n   */\n  getAllSubcomponents(name) {\n    let jCalLen = this.jCal[COMPONENT_INDEX].length;\n    let i = 0;\n\n    if (name) {\n      let comps = this.jCal[COMPONENT_INDEX];\n      let result = [];\n\n      for (; i < jCalLen; i++) {\n        if (name === comps[i][NAME_INDEX]) {\n          result.push(\n            this._hydrateComponent(i)\n          );\n        }\n      }\n      return result;\n    } else {\n      if (!this._components ||\n          (this._hydratedComponentCount !== jCalLen)) {\n        for (; i < jCalLen; i++) {\n          this._hydrateComponent(i);\n        }\n      }\n\n      return this._components || [];\n    }\n  }\n\n  /**\n   * Returns true when a named property exists.\n   *\n   * @param {String} name     The property name\n   * @return {Boolean}        True, when property is found\n   */\n  hasProperty(name) {\n    let props = this.jCal[PROPERTY_INDEX];\n    let len = props.length;\n\n    let i = 0;\n    for (; i < len; i++) {\n      // 0 is property name\n      if (props[i][NAME_INDEX] === name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Finds the first property, optionally with the given name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {?Property}     The found property\n   */\n  getFirstProperty(name) {\n    if (name) {\n      let i = 0;\n      let props = this.jCal[PROPERTY_INDEX];\n      let len = props.length;\n\n      for (; i < len; i++) {\n        if (props[i][NAME_INDEX] === name) {\n          let result = this._hydrateProperty(i);\n          return result;\n        }\n      }\n    } else {\n      if (this.jCal[PROPERTY_INDEX].length) {\n        return this._hydrateProperty(0);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns first property's value, if available.\n   *\n   * @param {String=} name                    Lowercase property name\n   * @return {Binary | Duration | Period |\n   * Recur | Time | UtcOffset | Geo | string | null}         The found property value.\n   */\n  getFirstPropertyValue(name) {\n    let prop = this.getFirstProperty(name);\n    if (prop) {\n      return prop.getFirstValue();\n    }\n\n    return null;\n  }\n\n  /**\n   * Get all properties in the component, optionally filtered by name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {Property[]}    List of properties\n   */\n  getAllProperties(name) {\n    let jCalLen = this.jCal[PROPERTY_INDEX].length;\n    let i = 0;\n\n    if (name) {\n      let props = this.jCal[PROPERTY_INDEX];\n      let result = [];\n\n      for (; i < jCalLen; i++) {\n        if (name === props[i][NAME_INDEX]) {\n          result.push(\n            this._hydrateProperty(i)\n          );\n        }\n      }\n      return result;\n    } else {\n      if (!this._properties ||\n          (this._hydratedPropertyCount !== jCalLen)) {\n        for (; i < jCalLen; i++) {\n          this._hydrateProperty(i);\n        }\n      }\n\n      return this._properties || [];\n    }\n  }\n\n  /**\n   * @private\n   */\n  _removeObjectByIndex(jCalIndex, cache, index) {\n    cache = cache || [];\n    // remove cached version\n    if (cache[index]) {\n      let obj = cache[index];\n      if (\"parent\" in obj) {\n          obj.parent = null;\n      }\n    }\n\n    cache.splice(index, 1);\n\n    // remove it from the jCal\n    this.jCal[jCalIndex].splice(index, 1);\n  }\n\n  /**\n   * @private\n   */\n  _removeObject(jCalIndex, cache, nameOrObject) {\n    let i = 0;\n    let objects = this.jCal[jCalIndex];\n    let len = objects.length;\n    let cached = this[cache];\n\n    if (typeof(nameOrObject) === 'string') {\n      for (; i < len; i++) {\n        if (objects[i][NAME_INDEX] === nameOrObject) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n          return true;\n        }\n      }\n    } else if (cached) {\n      for (; i < len; i++) {\n        if (cached[i] && cached[i] === nameOrObject) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _removeAllObjects(jCalIndex, cache, name) {\n    let cached = this[cache];\n\n    // Unfortunately we have to run through all children to reset their\n    // parent property.\n    let objects = this.jCal[jCalIndex];\n    let i = objects.length - 1;\n\n    // descending search required because splice\n    // is used and will effect the indices.\n    for (; i >= 0; i--) {\n      if (!name || objects[i][NAME_INDEX] === name) {\n        this._removeObjectByIndex(jCalIndex, cached, i);\n      }\n    }\n  }\n\n  /**\n   * Adds a single sub component.\n   *\n   * @param {Component} component        The component to add\n   * @return {Component}                 The passed in component\n   */\n  addSubcomponent(component) {\n    if (!this._components) {\n      this._components = [];\n      this._hydratedComponentCount = 0;\n    }\n\n    if (component.parent) {\n      component.parent.removeSubcomponent(component);\n    }\n\n    let idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n    this._components[idx - 1] = component;\n    this._hydratedComponentCount++;\n    component.parent = this;\n    return component;\n  }\n\n  /**\n   * Removes a single component by name or the instance of a specific\n   * component.\n   *\n   * @param {Component|String} nameOrComp    Name of component, or component\n   * @return {Boolean}                            True when comp is removed\n   */\n  removeSubcomponent(nameOrComp) {\n    let removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n    if (removed) {\n      this._hydratedComponentCount--;\n    }\n    return removed;\n  }\n\n  /**\n   * Removes all components or (if given) all components by a particular\n   * name.\n   *\n   * @param {String=} name            Lowercase component name\n   */\n  removeAllSubcomponents(name) {\n    let removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n    this._hydratedComponentCount = 0;\n    return removed;\n  }\n\n  /**\n   * Adds an {@link ICAL.Property} to the component.\n   *\n   * @param {Property} property      The property to add\n   * @return {Property}              The passed in property\n   */\n  addProperty(property) {\n    if (!(property instanceof Property)) {\n      throw new TypeError('must be instance of ICAL.Property');\n    }\n\n    if (!this._properties) {\n      this._properties = [];\n      this._hydratedPropertyCount = 0;\n    }\n\n    if (property.parent) {\n      property.parent.removeProperty(property);\n    }\n\n    let idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n    this._properties[idx - 1] = property;\n    this._hydratedPropertyCount++;\n    property.parent = this;\n    return property;\n  }\n\n  /**\n   * Helper method to add a property with a value to the component.\n   *\n   * @param {String}               name         Property name to add\n   * @param {String|Number|Object} value        Property value\n   * @return {Property}                    The created property\n   */\n  addPropertyWithValue(name, value) {\n    let prop = new Property(name);\n    prop.setValue(value);\n\n    this.addProperty(prop);\n\n    return prop;\n  }\n\n  /**\n   * Helper method that will update or create a property of the given name\n   * and sets its value. If multiple properties with the given name exist,\n   * only the first is updated.\n   *\n   * @param {String}               name         Property name to update\n   * @param {String|Number|Object} value        Property value\n   * @return {Property}                    The created property\n   */\n  updatePropertyWithValue(name, value) {\n    let prop = this.getFirstProperty(name);\n\n    if (prop) {\n      prop.setValue(value);\n    } else {\n      prop = this.addPropertyWithValue(name, value);\n    }\n\n    return prop;\n  }\n\n  /**\n   * Removes a single property by name or the instance of the specific\n   * property.\n   *\n   * @param {String|Property} nameOrProp     Property name or instance to remove\n   * @return {Boolean}                            True, when deleted\n   */\n  removeProperty(nameOrProp) {\n    let removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n    if (removed) {\n      this._hydratedPropertyCount--;\n    }\n    return removed;\n  }\n\n  /**\n   * Removes all properties associated with this component, optionally\n   * filtered by name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {Boolean}            True, when deleted\n   */\n  removeAllProperties(name) {\n    let removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n    this._hydratedPropertyCount = 0;\n    return removed;\n  }\n\n  /**\n   * Returns the Object representation of this component. The returned object\n   * is a live jCal object and should be cloned if modified.\n   * @return {Object}\n   */\n  toJSON() {\n    return this.jCal;\n  }\n\n  /**\n   * The string representation of this component.\n   * @return {String}\n   */\n  toString() {\n    return stringify.component(\n      this.jCal, this._designSet\n    );\n  }\n\n  /**\n   * Retrieve a time zone definition from the component tree, if any is present.\n   * If the tree contains no time zone definitions or the TZID cannot be\n   * matched, returns null.\n   *\n   * @param {String} tzid     The ID of the time zone to retrieve\n   * @return {Timezone}  The time zone corresponding to the ID, or null\n   */\n  getTimeZoneByID(tzid) {\n    // VTIMEZONE components can only appear as a child of the VCALENDAR\n    // component; walk the tree if we're not the root.\n    if (this.parent) {\n      return this.parent.getTimeZoneByID(tzid);\n    }\n\n    // If there is no time zone cache, we are probably parsing an incomplete\n    // file and will have no time zone definitions.\n    if (!this._timezoneCache) {\n      return null;\n    }\n\n    if (this._timezoneCache.has(tzid)) {\n      return this._timezoneCache.get(tzid);\n    }\n\n    // If the time zone is not already cached, hydrate it from the\n    // subcomponents.\n    const zones = this.getAllSubcomponents('vtimezone');\n    for (const zone of zones) {\n      if (zone.getFirstProperty('tzid').getFirstValue() === tzid) {\n        const hydratedZone = new Timezone({\n          component: zone,\n          tzid: tzid,\n        });\n\n        this._timezoneCache.set(tzid, hydratedZone);\n\n        return hydratedZone;\n      }\n    }\n\n    // Per the standard, we should always have a time zone defined in a file\n    // for any referenced TZID, but don't blow up if the file is invalid.\n    return null;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * Primary class for expanding recurring rules.  Can take multiple rrules, rdates, exdate(s) and\n * iterate (in order) over each next occurrence.\n *\n * Once initialized this class can also be serialized saved and continue iteration from the last\n * point.\n *\n * NOTE: it is intended that this class is to be used with {@link ICAL.Event} which handles recurrence\n * exceptions.\n *\n * @example\n * // assuming event is a parsed ical component\n * var event;\n *\n * var expand = new ICAL.RecurExpansion({\n *   component: event,\n *   dtstart: event.getFirstPropertyValue('dtstart')\n * });\n *\n * // remember there are infinite rules so it is a good idea to limit the scope of the iterations\n * // then resume later on.\n *\n * // next is always an ICAL.Time or null\n * var next;\n *\n * while (someCondition && (next = expand.next())) {\n *   // do something with next\n * }\n *\n * // save instance for later\n * var json = JSON.stringify(expand);\n *\n * //...\n *\n * // NOTE: if the component's properties have changed you will need to rebuild the class and start\n * // over. This only works when the component's recurrence info is the same.\n * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n *\n * @memberof ICAL\n */\nclass RecurExpansion {\n  /**\n   * Creates a new ICAL.RecurExpansion instance.\n   *\n   * The options object can be filled with the specified initial values. It can also contain\n   * additional members, as a result of serializing a previous expansion state, as shown in the\n   * example.\n   *\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {Time} options.dtstart\n   *        Start time of the event\n   * @param {Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  constructor(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  /**\n   * True when iteration is fully completed.\n   * @type {Boolean}\n   */\n  complete = false;\n\n  /**\n   * Array of rrule iterators.\n   *\n   * @type {RecurIterator[]}\n   * @private\n   */\n  ruleIterators = null;\n\n  /**\n   * Array of rdate instances.\n   *\n   * @type {Time[]}\n   * @private\n   */\n  ruleDates = null;\n\n  /**\n   * Array of exdate instances.\n   *\n   * @type {Time[]}\n   * @private\n   */\n  exDates = null;\n\n  /**\n   * Current position in ruleDates array.\n   * @type {Number}\n   * @private\n   */\n  ruleDateInc = 0;\n\n  /**\n   * Current position in exDates array\n   * @type {Number}\n   * @private\n   */\n  exDateInc = 0;\n\n  /**\n   * Current negative date.\n   *\n   * @type {Time}\n   * @private\n   */\n  exDate = null;\n\n  /**\n   * Current additional date.\n   *\n   * @type {Time}\n   * @private\n   */\n  ruleDate = null;\n\n  /**\n   * Start date of recurring rules.\n   *\n   * @type {Time}\n   */\n  dtstart = null;\n\n  /**\n   * Last expanded time\n   *\n   * @type {Time}\n   */\n  last = null;\n\n  /**\n   * Initialize the recurrence expansion from the data object. The options\n   * object may also contain additional members, see the\n   * {@link ICAL.RecurExpansion constructor} for more details.\n   *\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {Time} options.dtstart\n   *        Start time of the event\n   * @param {Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  fromData(options) {\n    let start = formatClassType(options.dtstart, Time);\n\n    if (!start) {\n      throw new Error('.dtstart (ICAL.Time) must be given');\n    } else {\n      this.dtstart = start;\n    }\n\n    if (options.component) {\n      this._init(options.component);\n    } else {\n      this.last = formatClassType(options.last, Time) || start.clone();\n\n      if (!options.ruleIterators) {\n        throw new Error('.ruleIterators or .component must be given');\n      }\n\n      this.ruleIterators = options.ruleIterators.map(function(item) {\n        return formatClassType(item, RecurIterator);\n      });\n\n      this.ruleDateInc = options.ruleDateInc;\n      this.exDateInc = options.exDateInc;\n\n      if (options.ruleDates) {\n        this.ruleDates = options.ruleDates.map(item => formatClassType(item, Time));\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (options.exDates) {\n        this.exDates = options.exDates.map(item => formatClassType(item, Time));\n        this.exDate = this.exDates[this.exDateInc];\n      }\n\n      if (typeof(options.complete) !== 'undefined') {\n        this.complete = options.complete;\n      }\n    }\n  }\n\n  /**\n   * Retrieve the next occurrence in the series.\n   * @return {Time}\n   */\n  next() {\n    let iter;\n    let next;\n    let compare;\n\n    let maxTries = 500;\n    let currentTry = 0;\n\n    while (true) {\n      if (currentTry++ > maxTries) {\n        throw new Error(\n          'max tries have occurred, rule may be impossible to fulfill.'\n        );\n      }\n\n      next = this.ruleDate;\n      iter = this._nextRecurrenceIter(this.last);\n\n      // no more matches\n      // because we increment the rule day or rule\n      // _after_ we choose a value this should be\n      // the only spot where we need to worry about the\n      // end of events.\n      if (!next && !iter) {\n        // there are no more iterators or rdates\n        this.complete = true;\n        break;\n      }\n\n      // no next rule day or recurrence rule is first.\n      if (!next || (iter && next.compare(iter.last) > 0)) {\n        // must be cloned, recur will reuse the time element.\n        next = iter.last.clone();\n        // move to next so we can continue\n        iter.next();\n      }\n\n      // if the ruleDate is still next increment it.\n      if (this.ruleDate === next) {\n        this._nextRuleDay();\n      }\n\n      this.last = next;\n\n      // check the negative rules\n      if (this.exDate) {\n        compare = this.exDate.compare(this.last);\n\n        if (compare < 0) {\n          this._nextExDay();\n        }\n\n        // if the current rule is excluded skip it.\n        if (compare === 0) {\n          this._nextExDay();\n          continue;\n        }\n      }\n\n      //XXX: The spec states that after we resolve the final\n      //     list of dates we execute exdate this seems somewhat counter\n      //     intuitive to what I have seen most servers do so for now\n      //     I exclude based on the original date not the one that may\n      //     have been modified by the exception.\n      return this.last;\n    }\n  }\n\n  /**\n   * Converts object into a serialize-able format. This format can be passed\n   * back into the expansion to resume iteration.\n   * @return {Object}\n   */\n  toJSON() {\n    function toJSON(item) {\n      return item.toJSON();\n    }\n\n    let result = Object.create(null);\n    result.ruleIterators = this.ruleIterators.map(toJSON);\n\n    if (this.ruleDates) {\n      result.ruleDates = this.ruleDates.map(toJSON);\n    }\n\n    if (this.exDates) {\n      result.exDates = this.exDates.map(toJSON);\n    }\n\n    result.ruleDateInc = this.ruleDateInc;\n    result.exDateInc = this.exDateInc;\n    result.last = this.last.toJSON();\n    result.dtstart = this.dtstart.toJSON();\n    result.complete = this.complete;\n\n    return result;\n  }\n\n  /**\n   * Extract all dates from the properties in the given component. The\n   * properties will be filtered by the property name.\n   *\n   * @private\n   * @param {Component} component             The component to search in\n   * @param {String} propertyName             The property name to search for\n   * @return {Time[]}                         The extracted dates.\n   */\n  _extractDates(component, propertyName) {\n    let result = [];\n    let props = component.getAllProperties(propertyName);\n\n    for (let i = 0, len = props.length; i < len; i++) {\n      for (let prop of props[i].getValues()) {\n        let idx = binsearchInsert(\n          result,\n          prop,\n          (a, b) => a.compare(b)\n        );\n\n        // ordered insert\n        result.splice(idx, 0, prop);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Initialize the recurrence expansion.\n   *\n   * @private\n   * @param {Component} component    The component to initialize from.\n   */\n  _init(component) {\n    this.ruleIterators = [];\n\n    this.last = this.dtstart.clone();\n\n    // to provide api consistency non-recurring\n    // events can also use the iterator though it will\n    // only return a single time.\n    if (!component.hasProperty('rdate') &&\n        !component.hasProperty('rrule') &&\n        !component.hasProperty('recurrence-id')) {\n      this.ruleDate = this.last.clone();\n      this.complete = true;\n      return;\n    }\n\n    if (component.hasProperty('rdate')) {\n      this.ruleDates = this._extractDates(component, 'rdate');\n\n      // special hack for cases where first rdate is prior\n      // to the start date. We only check for the first rdate.\n      // This is mostly for google's crazy recurring date logic\n      // (contacts birthdays).\n      if ((this.ruleDates[0]) &&\n          (this.ruleDates[0].compare(this.dtstart) < 0)) {\n\n        this.ruleDateInc = 0;\n        this.last = this.ruleDates[0].clone();\n      } else {\n        this.ruleDateInc = binsearchInsert(\n          this.ruleDates,\n          this.last,\n          (a, b) => a.compare(b)\n        );\n      }\n\n      this.ruleDate = this.ruleDates[this.ruleDateInc];\n    }\n\n    if (component.hasProperty('rrule')) {\n      let rules = component.getAllProperties('rrule');\n      let i = 0;\n      let len = rules.length;\n\n      let rule;\n      let iter;\n\n      for (; i < len; i++) {\n        rule = rules[i].getFirstValue();\n        iter = rule.iterator(this.dtstart);\n        this.ruleIterators.push(iter);\n\n        // increment to the next occurrence so future\n        // calls to next return times beyond the initial iteration.\n        // XXX: I find this suspicious might be a bug?\n        iter.next();\n      }\n    }\n\n    if (component.hasProperty('exdate')) {\n      this.exDates = this._extractDates(component, 'exdate');\n      // if we have a .last day we increment the index to beyond it.\n      this.exDateInc = binsearchInsert(\n        this.exDates,\n        this.last,\n        (a, b) => a.compare(b)\n      );\n\n      this.exDate = this.exDates[this.exDateInc];\n    }\n  }\n\n  /**\n   * Advance to the next exdate\n   * @private\n   */\n  _nextExDay() {\n    this.exDate = this.exDates[++this.exDateInc];\n  }\n\n  /**\n   * Advance to the next rule date\n   * @private\n   */\n  _nextRuleDay() {\n    this.ruleDate = this.ruleDates[++this.ruleDateInc];\n  }\n\n  /**\n   * Find and return the recurrence rule with the most recent event and\n   * return it.\n   *\n   * @private\n   * @return {?RecurIterator}    Found iterator.\n   */\n  _nextRecurrenceIter() {\n    let iters = this.ruleIterators;\n\n    if (iters.length === 0) {\n      return null;\n    }\n\n    let len = iters.length;\n    let iter;\n    let iterTime;\n    let iterIdx = 0;\n    let chosenIter;\n\n    // loop through each iterator\n    for (; iterIdx < len; iterIdx++) {\n      iter = iters[iterIdx];\n      iterTime = iter.last;\n\n      // if iteration is complete\n      // then we must exclude it from\n      // the search and remove it.\n      if (iter.completed) {\n        len--;\n        if (iterIdx !== 0) {\n          iterIdx--;\n        }\n        iters.splice(iterIdx, 1);\n        continue;\n      }\n\n      // find the most recent possible choice\n      if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n        // that iterator is saved\n        chosenIter = iter;\n      }\n    }\n\n    // the chosen iterator is returned but not mutated\n    // this iterator contains the most recent event.\n    return chosenIter;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").frequencyValues} frequencyValues\n * Imports the 'frequencyValues' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").occurrenceDetails} occurrenceDetails\n * Imports the 'occurrenceDetails' type from the \"types.js\" module\n */\n\n/**\n * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n * object, followed by the component/property layer. The highest level is the\n * event representation, which this class is part of. See the\n * {@tutorial layers} guide for more details.\n *\n * @memberof ICAL\n */\nclass Event {\n  /**\n   * Creates a new ICAL.Event instance.\n   *\n   * @param {Component=} component              The ICAL.Component to base this event on\n   * @param {Object} [options]                  Options for this event\n   * @param {Boolean=} options.strictExceptions  When true, will verify exceptions are related by\n   *                                              their UUID\n   * @param {Array<Component|Event>=} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  constructor(component, options) {\n    if (!(component instanceof Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function(event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n\n  static THISANDFUTURE = 'THISANDFUTURE';\n\n  /**\n   * List of related event exceptions.\n   *\n   * @type {Event[]}\n   */\n  exceptions = null;\n\n  /**\n   * When true, will verify exceptions are related by their UUID.\n   *\n   * @type {Boolean}\n   */\n  strictExceptions = false;\n\n  /**\n   * Relates a given event exception to this object.  If the given component\n   * does not share the UID of this event it cannot be related and will throw\n   * an exception.\n   *\n   * If this component is an exception it cannot have other exceptions\n   * related to it.\n   *\n   * @param {Component|Event} obj       Component or event\n   */\n  relateException(obj) {\n    if (this.isRecurrenceException()) {\n      throw new Error('cannot relate exception to exceptions');\n    }\n\n    if (obj instanceof Component) {\n      obj = new Event(obj);\n    }\n\n    if (this.strictExceptions && obj.uid !== this.uid) {\n      throw new Error('attempted to relate unrelated exception');\n    }\n\n    let id = obj.recurrenceId.toString();\n\n    // we don't sort or manage exceptions directly\n    // here the recurrence expander handles that.\n    this.exceptions[id] = obj;\n\n    // index RANGE=THISANDFUTURE exceptions so we can\n    // look them up later in getOccurrenceDetails.\n    if (obj.modifiesFuture()) {\n      let item = [\n        obj.recurrenceId.toUnixTime(), id\n      ];\n\n      // we keep them sorted so we can find the nearest\n      // value later on...\n      let idx = binsearchInsert(\n        this.rangeExceptions,\n        item,\n        compareRangeException\n      );\n\n      this.rangeExceptions.splice(idx, 0, item);\n    }\n  }\n\n  /**\n   * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n   * value.\n   *\n   * @return {Boolean}        True, when exception is within range\n   */\n  modifiesFuture() {\n    if (!this.component.hasProperty('recurrence-id')) {\n      return false;\n    }\n\n    let range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n    return range === Event.THISANDFUTURE;\n  }\n\n  /**\n   * Finds the range exception nearest to the given date.\n   *\n   * @param {Time} time   usually an occurrence time of an event\n   * @return {?Event}     the related event/exception or null\n   */\n  findRangeException(time) {\n    if (!this.rangeExceptions.length) {\n      return null;\n    }\n\n    let utc = time.toUnixTime();\n    let idx = binsearchInsert(\n      this.rangeExceptions,\n      [utc],\n      compareRangeException\n    );\n\n    idx -= 1;\n\n    // occurs before\n    if (idx < 0) {\n      return null;\n    }\n\n    let rangeItem = this.rangeExceptions[idx];\n\n    /* c8 ignore next 4 */\n    if (utc < rangeItem[0]) {\n      // sanity check only\n      return null;\n    }\n\n    return rangeItem[1];\n  }\n\n  /**\n   * Returns the occurrence details based on its start time.  If the\n   * occurrence has an exception will return the details for that exception.\n   *\n   * NOTE: this method is intend to be used in conjunction\n   *       with the {@link ICAL.Event#iterator iterator} method.\n   *\n   * @param {Time} occurrence               time occurrence\n   * @return {occurrenceDetails}            Information about the occurrence\n   */\n  getOccurrenceDetails(occurrence) {\n    let id = occurrence.toString();\n    let utcId = occurrence.convertToZone(Timezone.utcTimezone).toString();\n    let item;\n    let result = {\n      //XXX: Clone?\n      recurrenceId: occurrence\n    };\n\n    if (id in this.exceptions) {\n      item = result.item = this.exceptions[id];\n      result.startDate = item.startDate;\n      result.endDate = item.endDate;\n      result.item = item;\n    } else if (utcId in this.exceptions) {\n      item = this.exceptions[utcId];\n      result.startDate = item.startDate;\n      result.endDate = item.endDate;\n      result.item = item;\n    } else {\n      // range exceptions (RANGE=THISANDFUTURE) have a\n      // lower priority then direct exceptions but\n      // must be accounted for first. Their item is\n      // always the first exception with the range prop.\n      let rangeExceptionId = this.findRangeException(\n        occurrence\n      );\n      let end;\n\n      if (rangeExceptionId) {\n        let exception = this.exceptions[rangeExceptionId];\n\n        // range exception must modify standard time\n        // by the difference (if any) in start/end times.\n        result.item = exception;\n\n        let startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n        if (!startDiff) {\n          let original = exception.recurrenceId.clone();\n          let newStart = exception.startDate.clone();\n\n          // zones must be same otherwise subtract may be incorrect.\n          original.zone = newStart.zone;\n          startDiff = newStart.subtractDate(original);\n\n          this._rangeExceptionCache[rangeExceptionId] = startDiff;\n        }\n\n        let start = occurrence.clone();\n        start.zone = exception.startDate.zone;\n        start.addDuration(startDiff);\n\n        end = start.clone();\n        end.addDuration(exception.duration);\n\n        result.startDate = start;\n        result.endDate = end;\n      } else {\n        // no range exception standard expansion\n        end = occurrence.clone();\n        end.addDuration(this.duration);\n\n        result.endDate = end;\n        result.startDate = occurrence;\n        result.item = this;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Builds a recur expansion instance for a specific point in time (defaults\n   * to startDate).\n   *\n   * @param {Time=} startTime     Starting point for expansion\n   * @return {RecurExpansion}    Expansion object\n   */\n  iterator(startTime) {\n    return new RecurExpansion({\n      component: this.component,\n      dtstart: startTime || this.startDate\n    });\n  }\n\n  /**\n   * Checks if the event is recurring\n   *\n   * @return {Boolean}        True, if event is recurring\n   */\n  isRecurring() {\n    let comp = this.component;\n    return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n  }\n\n  /**\n   * Checks if the event describes a recurrence exception. See\n   * {@tutorial terminology} for details.\n   *\n   * @return {Boolean}    True, if the event describes a recurrence exception\n   */\n  isRecurrenceException() {\n    return this.component.hasProperty('recurrence-id');\n  }\n\n  /**\n   * Returns the types of recurrences this event may have.\n   *\n   * Returned as an object with the following possible keys:\n   *\n   *    - YEARLY\n   *    - MONTHLY\n   *    - WEEKLY\n   *    - DAILY\n   *    - MINUTELY\n   *    - SECONDLY\n   *\n   * @return {Object.<frequencyValues, Boolean>}\n   *          Object of recurrence flags\n   */\n  getRecurrenceTypes() {\n    let rules = this.component.getAllProperties('rrule');\n    let i = 0;\n    let len = rules.length;\n    let result = Object.create(null);\n\n    for (; i < len; i++) {\n      let value = rules[i].getFirstValue();\n      result[value.freq] = true;\n    }\n\n    return result;\n  }\n\n  /**\n   * The uid of this event\n   * @type {String}\n   */\n  get uid() {\n    return this._firstProp('uid');\n  }\n\n  set uid(value) {\n    this._setProp('uid', value);\n  }\n\n  /**\n   * The start date\n   * @type {Time}\n   */\n  get startDate() {\n    return this._firstProp('dtstart');\n  }\n\n  set startDate(value) {\n    this._setTime('dtstart', value);\n  }\n\n  /**\n   * The end date. This can be the result directly from the property, or the\n   * end date calculated from start date and duration. Setting the property\n   * will remove any duration properties.\n   * @type {Time}\n   */\n  get endDate() {\n    let endDate = this._firstProp('dtend');\n    if (!endDate) {\n        let duration = this._firstProp('duration');\n        endDate = this.startDate.clone();\n        if (duration) {\n            endDate.addDuration(duration);\n        } else if (endDate.isDate) {\n            endDate.day += 1;\n        }\n    }\n    return endDate;\n  }\n\n  set endDate(value) {\n    if (this.component.hasProperty('duration')) {\n      this.component.removeProperty('duration');\n    }\n    this._setTime('dtend', value);\n  }\n\n  /**\n   * The duration. This can be the result directly from the property, or the\n   * duration calculated from start date and end date. Setting the property\n   * will remove any `dtend` properties.\n   * @type {Duration}\n   */\n  get duration() {\n    let duration = this._firstProp('duration');\n    if (!duration) {\n      return this.endDate.subtractDateTz(this.startDate);\n    }\n    return duration;\n  }\n\n  set duration(value) {\n    if (this.component.hasProperty('dtend')) {\n      this.component.removeProperty('dtend');\n    }\n\n    this._setProp('duration', value);\n  }\n\n  /**\n   * The location of the event.\n   * @type {String}\n   */\n  get location() {\n    return this._firstProp('location');\n  }\n\n  set location(value) {\n    this._setProp('location', value);\n  }\n\n  /**\n   * The attendees in the event\n   * @type {Property[]}\n   */\n  get attendees() {\n    //XXX: This is way lame we should have a better\n    //     data structure for this later.\n    return this.component.getAllProperties('attendee');\n  }\n\n  /**\n   * The event summary\n   * @type {String}\n   */\n  get summary() {\n    return this._firstProp('summary');\n  }\n\n  set summary(value) {\n    this._setProp('summary', value);\n  }\n\n  /**\n   * The event description.\n   * @type {String}\n   */\n  get description() {\n    return this._firstProp('description');\n  }\n\n  set description(value) {\n    this._setProp('description', value);\n  }\n\n  /**\n   * The event color from [rfc7986](https://datatracker.ietf.org/doc/html/rfc7986)\n   * @type {String}\n   */\n  get color() {\n    return this._firstProp('color');\n  }\n\n  set color(value) {\n    this._setProp('color', value);\n  }\n\n  /**\n   * The organizer value as an uri. In most cases this is a mailto: uri, but\n   * it can also be something else, like urn:uuid:...\n   * @type {String}\n   */\n  get organizer() {\n    return this._firstProp('organizer');\n  }\n\n  set organizer(value) {\n    this._setProp('organizer', value);\n  }\n\n  /**\n   * The sequence value for this event. Used for scheduling\n   * see {@tutorial terminology}.\n   * @type {Number}\n   */\n  get sequence() {\n    return this._firstProp('sequence');\n  }\n\n  set sequence(value) {\n    this._setProp('sequence', value);\n  }\n\n  /**\n   * The recurrence id for this event. See {@tutorial terminology} for details.\n   * @type {Time}\n   */\n  get recurrenceId() {\n    return this._firstProp('recurrence-id');\n  }\n\n  set recurrenceId(value) {\n    this._setTime('recurrence-id', value);\n  }\n\n  /**\n   * Set/update a time property's value.\n   * This will also update the TZID of the property.\n   *\n   * TODO: this method handles the case where we are switching\n   * from a known timezone to an implied timezone (one without TZID).\n   * This does _not_ handle the case of moving between a known\n   *  (by TimezoneService) timezone to an unknown timezone...\n   *\n   * We will not add/remove/update the VTIMEZONE subcomponents\n   *  leading to invalid ICAL data...\n   * @private\n   * @param {String} propName     The property name\n   * @param {Time} time           The time to set\n   */\n  _setTime(propName, time) {\n    let prop = this.component.getFirstProperty(propName);\n\n    if (!prop) {\n      prop = new Property(propName);\n      this.component.addProperty(prop);\n    }\n\n    // utc and local don't get a tzid\n    if (\n      time.zone === Timezone.localTimezone ||\n      time.zone === Timezone.utcTimezone\n    ) {\n      // remove the tzid\n      prop.removeParameter('tzid');\n    } else {\n      prop.setParameter('tzid', time.zone.tzid);\n    }\n\n    prop.setValue(time);\n  }\n\n  _setProp(name, value) {\n    this.component.updatePropertyWithValue(name, value);\n  }\n\n  _firstProp(name) {\n    return this.component.getFirstPropertyValue(name);\n  }\n\n  /**\n   * The string representation of this event.\n   * @return {String}\n   */\n  toString() {\n    return this.component.toString();\n  }\n}\n\nfunction compareRangeException(a, b) {\n  if (a[0] > b[0]) return 1;\n  if (b[0] > a[0]) return -1;\n  return 0;\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * The ComponentParser is used to process a String or jCal Object,\n * firing callbacks for various found components, as well as completion.\n *\n * @example\n * var options = {\n *   // when false no events will be emitted for type\n *   parseEvent: true,\n *   parseTimezone: true\n * };\n *\n * var parser = new ICAL.ComponentParser(options);\n *\n * parser.onevent(eventComponent) {\n *   //...\n * }\n *\n * // ontimezone, etc...\n *\n * parser.oncomplete = function() {\n *\n * };\n *\n * parser.process(stringOrComponent);\n *\n * @memberof ICAL\n */\nclass ComponentParser {\n  /**\n   * Creates a new ICAL.ComponentParser instance.\n   *\n   * @param {Object=} options                   Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  constructor(options) {\n    if (typeof(options) === 'undefined') {\n      options = {};\n    }\n\n    for (let [key, value] of Object.entries(options)) {\n      this[key] = value;\n    }\n  }\n\n  /**\n   * When true, parse events\n   *\n   * @type {Boolean}\n   */\n  parseEvent = true;\n\n  /**\n   * When true, parse timezones\n   *\n   * @type {Boolean}\n   */\n  parseTimezone = true;\n\n\n  /* SAX like events here for reference */\n\n  /**\n   * Fired when parsing is complete\n   * @callback\n   */\n  oncomplete = /* c8 ignore next */ function() {};\n\n  /**\n   * Fired if an error occurs during parsing.\n   *\n   * @callback\n   * @param {Error} err details of error\n   */\n  onerror = /* c8 ignore next */ function(err) {};\n\n  /**\n   * Fired when a top level component (VTIMEZONE) is found\n   *\n   * @callback\n   * @param {Timezone} component     Timezone object\n   */\n  ontimezone = /* c8 ignore next */ function(component) {};\n\n  /**\n   * Fired when a top level component (VEVENT) is found.\n   *\n   * @callback\n   * @param {Event} component    Top level component\n   */\n  onevent = /* c8 ignore next */ function(component) {};\n\n  /**\n   * Process a string or parse ical object.  This function itself will return\n   * nothing but will start the parsing process.\n   *\n   * Events must be registered prior to calling this method.\n   *\n   * @param {Component|String|Object} ical      The component to process,\n   *        either in its final form, as a jCal Object, or string representation\n   */\n  process(ical) {\n    //TODO: this is sync now in the future we will have a incremental parser.\n    if (typeof(ical) === 'string') {\n      ical = parse(ical);\n    }\n\n    if (!(ical instanceof Component)) {\n      ical = new Component(ical);\n    }\n\n    let components = ical.getAllSubcomponents();\n    let i = 0;\n    let len = components.length;\n    let component;\n\n    for (; i < len; i++) {\n      component = components[i];\n\n      switch (component.name) {\n        case 'vtimezone':\n          if (this.parseTimezone) {\n            let tzid = component.getFirstPropertyValue('tzid');\n            if (tzid) {\n              this.ontimezone(new Timezone({\n                tzid: tzid,\n                component: component\n              }));\n            }\n          }\n          break;\n        case 'vevent':\n          if (this.parseEvent) {\n            this.onevent(new Event(component));\n          }\n          break;\n        default:\n          continue;\n      }\n    }\n\n    //XXX: ideally we should do a \"nextTick\" here\n    //     so in all cases this is actually async.\n    this.oncomplete();\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * The main ICAL module. Provides access to everything else.\n *\n * @alias ICAL\n * @namespace ICAL\n * @property {ICAL.design} design\n * @property {ICAL.helpers} helpers\n */\nvar ICALmodule = {\n  /**\n   * The number of characters before iCalendar line folding should occur\n   * @type {Number}\n   * @default 75\n   */\n  foldLength: 75,\n\n  debug: false,\n\n  /**\n   * The character(s) to be used for a newline. The default value is provided by\n   * rfc5545.\n   * @type {String}\n   * @default \"\\r\\n\"\n   */\n  newLineChar: '\\r\\n',\n\n  Binary,\n  Component,\n  ComponentParser,\n  Duration,\n  Event,\n  Period,\n  Property,\n  Recur,\n  RecurExpansion,\n  RecurIterator,\n  Time,\n  Timezone,\n  TimezoneService,\n  UtcOffset,\n  VCardTime,\n\n  parse,\n  stringify,\n\n  design: design$1,\n  helpers\n};\n\nexport { ICALmodule as default };\n","import { createPlugin, EventClickArg } from \"@fullcalendar/core/index.js\";\r\nimport { EventImpl } from \"@fullcalendar/core/internal.js\";\r\nimport ICAL from \"ical.js\";\r\n\r\nconst claim = (\r\n  event: EventImpl,\r\n  config: { auth: string; organizer: string; attendee: string }\r\n) => {\r\n  const uri = event.extendedProps.uri;\r\n  if (!uri) return;\r\n\r\n  const name = prompt(\"Wer \\u00fcbernimmt diese Aufgabe?\");\r\n  if (!name) return;\r\n\r\n  fetch(uri, {\r\n    method: \"GET\",\r\n    headers: { Authorization: config.auth },\r\n  })\r\n    .then((response) =>\r\n      response.ok\r\n        ? response.text()\r\n        : Promise.reject(\r\n            `unable to request caldav event: ${response.statusText} (${response.status})`\r\n          )\r\n    )\r\n    .then((existingIcs) => {\r\n      const jcal = ICAL.parse(existingIcs);\r\n      const vcalendar = new ICAL.Component(jcal);\r\n      const vevent = vcalendar.getFirstSubcomponent(\"vevent\");\r\n      vevent?.removeAllProperties(\"summary\");\r\n      vevent?.removeAllProperties(\"organizer\");\r\n      vevent?.removeAllProperties(\"attendee\");\r\n      vevent?.addPropertyWithValue(\"SUMMARY\", name);\r\n      vevent?.addPropertyWithValue(\"ORGANIZER\", config.organizer);\r\n      const vprop = vevent?.addPropertyWithValue(\"ATTENDEE\", config.attendee);\r\n      vprop?.setParameter(\"PARTSTAT\", \"NEEDS-ACTION\");\r\n      vprop?.setParameter(\"ROLE\", \"REQ-PARTICIPANT\");\r\n      vprop?.setParameter(\"RSVP\", \"TRUE\");\r\n      const newIcs = vcalendar.toString();\r\n      return fetch(uri, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: config.auth,\r\n          \"Content-Type\": \"text/calendar\",\r\n        },\r\n        body: newIcs,\r\n      });\r\n    })\r\n    .then((response) =>\r\n      response.ok\r\n        ? event.source?.refetch()\r\n        : Promise.reject(\r\n            `unable to update caldav event: ${response.statusText} (${response.status})`\r\n          )\r\n    )\r\n    .catch(console.error);\r\n};\r\n\r\nconst create = (auth: string, organizer: string, attendee: string) =>\r\n  createPlugin({\r\n    name: \"ClaimPlugin\",\r\n    contextInit(context) {\r\n      context.calendarApi.setOption(\"eventClick\", (arg: EventClickArg) => {\r\n        arg.event.display !== \"background\" &&\r\n          !arg.event.title &&\r\n          claim(arg.event, { auth, organizer, attendee });\r\n      });\r\n    },\r\n  });\r\n\r\nexport default create;\r\n"],"names":["ClaimPlugin","n","l","u","i","t","r","o","f","e","c","s","a","h","v","parentNode","removeChild","y","arguments","length","children","call","defaultProps","p","type","props","key","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","b","setProperty","test","g","style","cssText","replace","toLowerCase","slice","addEventListener","w","m","removeEventListener","indexOf","removeAttribute","setAttribute","this","event","x","context","A","P","base","C","setTimeout","T","push","$","__r","debounceRendering","sort","shift","__P","M","__n","ownerSVGElement","N","H","d","k","Array","isArray","I","z","L","nextSibling","q","S","j","some","appendChild","insertBefore","contextType","value","__E","prototype","render","B","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","O","diffed","localName","nodeType","document","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","name","__html","innerHTML","checked","current","unmount","componentWillUnmount","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","bind","resolve","__H","__N","__V","requestAnimationFrame","filter","clearTimeout","cancelAnimationFrame","isPureReactComponent","__f","map","U","D","__u","F","__a","V","__R","__O","pop","fallback","W","delete","revealOrder","size","get","Map","reverse","set","Symbol","for","Z","isReactComponent","Object","defineProperty","configurable","writable","G","J","K","cancelBubble","Q","defaultPrevented","persist","isPropagationStopped","isDefaultPrevented","nativeEvent","nn","class","tn","multiple","selected","defaultValue","className","enumerable","$$typeof","en","styleTexts","styleEls","appendStylesTo","styleEl","styleText","sheet","ruleCnt","cssRules","split","styleStr","trim","insertRule","queriedNonceValue","rootNode","isConnected","querySelector","nonce","undefined","metaWithNonce","hasAttribute","getAttribute","elWithNonce","queryNonceValue","parentEl","head","firstChild","hydrateStylesRoot","registerStylesRoot","removeElement","el","guidNumber","guid","String","padStart","val","len","substr","computeSmallestCellWidth","cellEl","allWidthEl","contentWidthEl","Error","getBoundingClientRect","width","PARSE_RE","createDuration","input","unit","exec","sign","years","months","days","parseInt","milliseconds","parseString","parseObject","obj","duration","year","month","day","hours","hour","minutes","minute","seconds","second","millisecond","ms","weeks","week","specifiedWeeks","isArraysEqual","a0","a1","equalityFunc","addDays","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","arrayToUtcDate","diffDays","m0","m1","valueOf","startOfDay","concat","Date","UTC","timeAsMs","formatTimeZoneOffset","doIso","abs","Math","floor","mins","round","memoize","workerFunc","resEquality","teardownFunc","currentArgs","currentRes","newArgs","res","apply","EXTENDED_SETTINGS_AND_SEVERITIES","separator","omitZeroMinute","meridiem","omitCommas","STANDARD_DATE_PROP_SEVERITIES","timeZoneName","era","weekday","MERIDIEM_RE","COMMA_RE","MULTI_SPACE_RE","LTR_RE","UTC_RE","NativeFormatter","formatSettings","standardDateProps","extendedSettings","smallestUnitNum","min","buildFormattingFunc","format","formatRange","start","end","betterDefaultSeparator","diffSeverity","d0","d1","ca","getMarkerYear","getMarkerMonth","getMarkerDay","computeMarkerDiffSeverity","marker","calendarSystem","biggestUnitForPartial","full0","full1","partialFormattingFunc","options","biggestUnit","partialOptions","computePartialFormattingOptions","partial0","partial1","insertion","i0","found0","before0","after0","i1","found1","before1","after1","before","after","findCommonInsertion","defaultSeparator","getSmallestUnit","standardDatePropCnt","keys","timeZoneOffset","num","weekText","weekTextLong","locale","display","parts","simpleNumberFormat","direction","join","formatWeekNumber","computeWeekNumber","assign","sanitizeSettings","timeZone","zeroFormat","normalFormat","Intl","DateTimeFormat","codes","zeroProps","tzoStr","replaced","injectTzoStr","toLocaleLowerCase","postProcess","buildNativeFormattingFunc","expandZonedMarker","dateInfo","markerToArray","array","createVerboseFormattingArg","startInfo","localeCodes","CmdFormatter","cmdStr","cmdFormatter","FuncFormatter","func","createFormatter","identity","raw","hasOwnProperty","filterHash","hash","filtered","hashValuesToArray","isPropsEqual","obj0","obj1","HANDLER_RE","getUnequalProps","compareObjs","oldProps","newProps","equalityFuncs","isObjValsEqual","val0","val1","comparator","createContext","ContextType","Consumer","Provider","splice","preact","origProvider","isNew","subs","_props","old","ViewContextType","PureComponent","Component","nextProps","nextState","debug","console","log","propEquality","stateEquality","safeSetState","newState","addPropsEquality","create","addStateEquality","BaseComponent","setRef","ContentInjector","super","id","queuedDomNodes","currentDomNodes","handleEl","generatorName","customRenderingReplaces","hasCustomRenderingHandler","updateElRef","elRef","customGenerator","defaultGenerator","renderProps","attrs","buildElAttrs","innerContent","currentGeneratorMeta","useDefault","customGeneratorRes","isObject","html","domNodes","isValidElement","elTag","applyQueueudDomNodes","triggerCustomRendering","isActive","_a","handleCustomRendering","customRenderingMetaMap","generatorMeta","containerEl","reportNewContainerEl","elClasses","isTruthy","newNode","Boolean","extraClassNames","elAttrs","elStyle","RenderId","InnerContentInjector","containerComponent","parentProps","renderId","computeAlignedDayRange","timedRange","dayCnt","diffDates","date0","date1","dateEnv","largeUnit","diffWholeYears","diffWholeMonths","m0day","m1day","diffDayAndTime","InnerContent","didMountMisfire","generatedClassNames","classNameGenerator","classNames","generateClassNames","_b","didMount","willUnmount","EVENT_NON_DATE_REFINERS","groupId","title","url","interactive","EVENT_DATE_REFINERS","allDay","getRelevantEvents","eventStore","instanceId","instance","instances","def","defs","defId","newStore","filterFunc","filterEventStoreDefs","lookDef","isEventDefsGrouped","def0","def1","parseClassNames","extendedProps","EVENT_UI_REFINERS","editable","startEditable","durationEditable","constraint","overlap","allow","color","backgroundColor","borderColor","textColor","EMPTY_EVENT_UI","constraints","allows","combineTwoEventUis","item0","item1","getDefaultEventEnd","add","defaultAllDayEventDuration","defaultTimedEventDuration","applyMutationToEventStore","eventConfigBase","mutation","eventConfigs","eventDefs","eventUiBases","newHash","mapHash","eventDef","uis","ui","reduce","combineEventUis","compileEventUi","dest","applyMutationToEventDef","applyMutationToEventInstance","eventConfig","standardProps","hasEnd","startDelta","endDelta","copy","applier","pluginHooks","eventDefMutationAppliers","forceEventDuration","eventInstance","forceAllDay","clearEnd","range","datesDelta","EventSourceImpl","internalEventSource","remove","dispatch","sourceId","refetch","sourceIds","isRefetch","publicId","meta","EventImpl","_context","_def","_instance","setProp","warn","mutate","setExtendedProp","setStart","startInput","createMarker","granularity","maintainDuration","setEnd","endInput","setDates","instanceRange","moveStart","deltaInput","delta","moveEnd","moveDates","setAllDay","allDayMaintainDuration","formatInput","formatter","forcedStartTzo","forcedEndTzo","forcedTzo","getCurrentData","relevantEvents","oldEvent","emitter","trigger","relatedEvents","buildEventApis","revert","asStore","eventApi","eventApiToStore","source","eventSources","toDate","startStr","formatIso","omitTime","endStr","toPlainObject","settings","collapseColor","collapseExtendedProps","toJSON","excludeInstance","eventApis","excludeInstanceId","buildRangeApiWithTimeZone","buildRangeApi","JsonRequestError","message","response","canVGrowWithinCell","_scrollbarWidths","getCanVGrowWithinCell","position","top","left","height","body","possible","offsetHeight","computeCanVGrowWithinCell","buildDayRange","getScrollbarWidths","overflow","clientHeight","offsetWidth","clientWidth","computeScrollbarWidthsForEl","computeScrollbarWidths","handleRefresh","timing","computeTiming","nowDate","waitMs","handleVisibilityChange","hidden","todayRange","nowManager","addResetListener","prevProps","removeResetListener","unroundedNow","getDateMarker","currentUnitStart","startOf","timeoutId","VISIBLE_HIDDEN_RE","Scroller","liquid","liquidIsAbsolute","isAbsolute","overflowX","overflowY","overcomeLeft","right","overcomeRight","bottom","overcomeBottom","marginLeft","marginRight","marginBottom","maxHeight","needsXScrolling","realClientWidth","getYScrollbarWidth","needsYScrolling","realClientHeight","getXScrollbarWidth","RefMap","masterCallback","currentMap","depths","callbackMap","handleValue","removed","added","createRef","refCallback","collect","startIndex","endIndex","step","collectFromHash","getAll","computeShrinkWidth","chunkEls","shrinkCells","container","selector","containers","HTMLElement","allMatches","matches","querySelectorAll","findElements","largestWidth","shrinkCell","max","ceil","getSectionHasLiquidHeight","sectionConfig","isColPropsEqual","cols0","cols1","renderMicroColGroup","cols","shrinkWidth","colNodes","colProps","span","sanitizeShrinkWidth","minWidth","getSectionClassNames","wholeTableVGrow","isSticky","processCols","scrollerRefs","scrollerElRefs","_handleScrollerEl","forceYScrollbars","scrollerClientWidths","scrollerClientHeights","handleSizing","computeScrollerDims","sectionConfigs","sections","microColGroupNode","theme","getClass","getScrollGridClassNames","collapsibleWidth","currentConfig","configCnt","configI","headSectionNodes","bodySectionNodes","footSectionNodes","renderSection","isBuggy","roleAttrs","role","isHeader","Fragment","outerContent","renderChunkTd","chunk","chunkConfig","getAllowYScrolling","isLiquid","sectionKey","content","arg","expandRows","tableClassName","syncRowHeights","tableMinWidth","tableColGroupNode","rowContent","renderChunkContent","rowSyncHeights","reportRowHeightChange","scrollerEl","section","getSectionByKey","scrollerElRef","addResizeHandler","removeResizeHandler","col","hasShrinkWidth","scrollbarWidth","scroller","harnessEl","createPlugin","premiumReleaseDate","deps","reducers","isLoadingFuncs","contextInit","eventRefiners","eventDefMemberAdders","eventSourceRefiners","isDraggableTransformers","eventDragMutationMassagers","dateSelectionTransformers","datePointTransforms","dateSpanTransforms","views","viewPropsTransformers","isPropsValid","externalDefTransforms","viewContainerAppends","eventDropTransformers","componentInteractions","calendarInteractions","themeClasses","eventSourceDefs","recurringTypes","namedTimeZonedImpl","initialView","elementDraggingImpl","optionChangeHandlers","scrollGridImpl","listenerRefiners","optionRefiners","propSetHandlers","code","dow","doy","buttonText","prev","next","prevYear","nextYear","today","list","closeHint","timeHint","eventHint","allDayText","moreLinkText","noEventsText","buttonHints","viewHint","navLinkHint","moreLinkHint","eventCnt","ignoreRange","parseMeta","refined","events","fetch","successCallback","rawEvents","eventSource","errorCallback","normalizedSuccessCallback","normalizedFailureCallback","isResolved","wrappedSuccess","wrappedFailure","error","unpromisify","method","extraParams","startParam","endParam","timeZoneParam","toUpperCase","requestParams","customRequestParams","params","buildRequestParams","fetchOptions","URLSearchParams","headers","fetchRes","ok","json","parsedResponse","requestJson","SIMPLE_RECURRING_REFINERS","daysOfWeek","startTime","endTime","startRecur","endRecur","recurring","parse","recurringData","allDayGuess","typeData","expand","framingRange","clippedFramingRange","range0","range1","newRange","intersectRanges","eventDateEnv","calendarDateEnv","dowHash","item","arrayToHash","dayMarker","endMarker","instanceStarts","instanceStart","getUTCDay","expandRanges","handleEventSources","inputs","unfoundSources","_raw","newInputs","inputFound","unfoundSource","newInput","calendarApi","addEventSource","isFetching","computeEventSourcesLoading","dateProfile","activeRange","view","viewApi","hasHandlers","Binary","fromString","aString","aValue","icaltype","decodeValue","_b64_decode","setEncodedValue","_b64_encode","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","dec","fromCharCode","toString","DURATION_LETTERS","DATA_PROPS_TO_COPY","Duration","fromSeconds","aSeconds","isValueString","string","aStr","pos","dict","chunks","search","numeric","parseDurationChunk","fromData","aData","wrappedJSObject","isNegative","icalclass","clone","toSeconds","secs","trunc","prop","reset","compare","aOther","thisSeconds","otherSeconds","normalize","str","toICALString","letter","number","object","isStrictlyNaN","Time","static","daysInMonth","isLeapYear","fromDayOfYear","aDayOfYear","aYear","tt","auto_normalize","is_leap","daysInYearPassedMonth","isDate","fromStringv2","fromDateString","strictParseInt","fromDateTimeString","zone","zoneId","Timezone","utcTimezone","getParameter","parent","localTimezone","getTimeZoneByID","timeData","timezone","aProperty","fromJSDate","aDate","useUTC","aZone","now","weekOneStarts","aWeekStart","dayOfWeek","wkst","DEFAULT_WEEK_START","THURSDAY","getDominicalLetter","yr","LTRS","dom","epochTime","_cmp_attr","attr","time","_time","_cachedUnixTime","_pendingNormalization","resetTo","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","entries","TimezoneService","firstDow","SUNDAY","dowCacheKey","_dowCache","Y","dayOfYear","startOfWeek","result","endOfWeek","startOfMonth","endOfMonth","startOfYear","endOfYear","startDoyWeek","aFirstDayOfWeek","nthWeekDay","aDayOfWeek","aPos","otherDay","offset","isNthWeekDay","weekNumber","week1","wnCacheKey","_wnCache","dt","isoyear","answer","subtractDate","addDuration","aDuration","mult","unixTime","toUnixTime","utcOffset","other","subtractDateTz","compareDateOnlyTz","tz","convertToZone","rc","zone_equals","tzid","convert_time","design$1","icalendar","toICAL","pad2","toJSDate","_normalize","adjust","aExtraDays","aExtraHours","aExtraMinutes","aExtraSeconds","aTime","minutesOverflow","hoursOverflow","daysOverflow","yearsOverflow","fromUnixTime","defineAttr","CHAR","VALUE_DELIMITER","RFC6868_REPLACE_MAP$1","root","component","stack","_eachLine","err","line","_handleContentLine","ParserError","property","designSet","defaultSet","lastParamIndex","lastValuePos","parsedParams","valueType","valuePos","paramPos","_parseParameters","newComponent","getDesignSet","propertyDetails","splitName","ungroupedName","multiValue","structuredValue","propertyGroups","group","detectType","defaultType","_parseMultiValue","_parseValue","fromICAL","lcname","mvdelim","lastParam","param","multiValueSeparateDQuote","_rfc6868Escape","extendedValue","propValuePos","nextPos","length_before","delimiter","buffer","delim","innerMulti","lastPos","unescapedIndexOf","callback","firstChar","newlineOffset","OPTIONS","_compare_change_fn","from_zone","to_zone","adjust_change","change","location","tznames","latitude","longitude","expandedUntilYear","changes","jCal","getFirstPropertyValue","_ensureCoverage","tt_change","change_num","_findNearbyChange","change_num_to_use","prevUtcOffset","zone_change","tmp_change","prev_zone_change","want_daylight","is_daylight","idx","binsearchInsert","_minimumExpansionYear","changesEndYear","EXTRA_COVERAGE","subcomps","getAllSubcomponents","compLen","compIdx","_expandComponent","aComponent","hasProperty","dtstart","getFirstProperty","getFirstValue","convert_tzoffset","factor","init_changes","changebase","getAllProperties","rdate","rrule","until","occ","iterator","zones","count","utc","GMT","_hard_reset","has","register","TypeError","isNaN","formatClassType","seekVal","cmpfunc","mid","cmpval","low","high","aSrc","aDeep","getTime","arr","foldline","aLine","line_length","cp","codePointAt","ICALmodule","foldLength","newLineChar","extend","target","descr","getOwnPropertyDescriptor","helpers","freeze","__proto__","updateTimezones","vcal","allsubs","properties","vtimezones","reqTzid","comp","removeSubcomponent","addSubcomponent","UtcOffset","VCardTime","fromDateAndOrTimeString","aIcalType","part","tmz","splitzone","vcard","_splitZone","tm","dtlen","tmlen","hasDashDate","hasDashTime","mm","hasMonth","hasDay","hasHour","hasMinute","hasSecond","datepart","timepart","RecurIterator","BYSECOND","BYMINUTE","BYHOUR","BYDAY","BYMONTHDAY","BYYEARDAY","BYWEEKNO","BYMONTH","BYSETPOS","SECONDLY","MINUTELY","HOURLY","DAILY","WEEKLY","MONTHLY","YEARLY","completed","rule","last","occurrence_number","by_indices","initialized","by_data","days_index","Recur","init","InvalidRecurrenceRuleError","sort_byday_rules","freq","setup_defaults","ruleDayOfWeek","wkdy","dayName","numericDayToIcalDay","untilYear","expand_year_days","increment_year","interval","_nextByYearDay","has_by_data","tempLast","initLast","bydow","dayOfMonth","increment_month","_byDayAndMonthDay","normalized","normalizeByMonthDayRules","next_month","again","valid","next_second","next_minute","next_hour","next_day","next_week","next_year","check_contracting_rules","next_generic","increment_second","inc","increment_generic","increment_minute","increment_hour","this_freq","increment_monthday","end_of_data","next_weekday_by_week","week_no","rules","newRules","ruleIdx","isInit","byMonthDay","dateLen","byDay","dateIdx","dayLen","dataIsValid","self","lastDay","initMonth","nextMonth","monthsCounter","dayIdx","data_valid","setpos","setpos_total","last_day","is_day_in_byday","check_set_position","coded_day","match","icalDayToNumericDay","aRuleType","aInterval","aDateAttr","aFollowingAttr","aPreviousIncr","has_by_rule","dta","aFactor","aNextIncrement","nextunit","validWeeks","monthIdx","first_week","last_week","weekIdx","partCount","t1","t2","monthday","t3","expand_by_day","first_dow","doy_offset","last_dow","by_month_day","spIndex","month_day","bydayParts","first_matching_day","last_matching_day","expandedDays","weekno","daysInYear","days_list","tmp","start_dow","end_dow","end_year_day","first","this_dow","aRules","check_contract_restriction","indexMapValue","_indexMap","ruleMapValue","_expandMap","pass","CONTRACT","ruleType","bydata","weekNo","req","deftime","VALID_DAY_NAMES","VALID_BYDAY_PART","DOW_MAP","SU","MO","MONDAY","TU","TUESDAY","WE","WEDNESDAY","TH","FR","FRIDAY","SA","SATURDAY","REVERSE_DOW_MAP","fromEntries","entry","ALLOWED_FREQ","_stringToData","fmtIcal","values","ucname","partDesign","partArr","partSet","Set","optionDesign","aStart","isFinite","isByCount","addComponent","aType","setComponent","aValues","getComponent","getNextOccurrence","aStartTime","aRecurrenceId","iter","uckey","INTERVAL","kparts","parseNumericValue","FREQ","COUNT","UNTIL","WKST","Period","fromJSON","aProp","aLenient","fromDateOrDateTimeString","dateProp","getDuration","getEnd","FROM_VCARD_NEWLINE","TO_VCARD_NEWLINE","createTextType","fromNewline","toNewline","structuredEscape","newline","RegExp","flags","replaceNewlineReplace","replaceNewline","regEx","DEFAULT_TYPE_TEXT","DEFAULT_TYPE_TEXT_MULTI","DEFAULT_TYPE_TEXT_STRUCTURED","DEFAULT_TYPE_INTEGER","DEFAULT_TYPE_DATETIME_DATE","allowedTypes","DEFAULT_TYPE_DATETIME","DEFAULT_TYPE_URI","DEFAULT_TYPE_UTCOFFSET","DEFAULT_TYPE_RECUR","DEFAULT_TYPE_DATE_ANDOR_TIME","commonProperties","categories","version","uid","commonValues","boolean","float","parsed","parseFloat","integer","decorate","undecorate","icalValues","text","uri","binary","aBinary","period","recur","aRecur","icalProperties","action","attach","attendee","calscale","comment","contact","created","description","dtend","dtstamp","due","exdate","exrule","freebusy","geo","organizer","priority","prodid","repeat","resources","sequence","status","summary","transp","tzoffsetfrom","tzoffsetto","tzurl","tzname","vcardValues","isFromIcal","lastChar","signChar","timestamp","from","vcardProperties","adr","anniversary","bday","caladruri","caluri","clientpidmap","email","fburl","fn","gender","impp","kind","lang","logo","member","nickname","note","org","photo","related","rev","sound","tel","xml","vcard3Values","vcard3Properties","label","mailer","agent","icalSet","cutype","allowXName","allowIanaToken","encoding","fbtype","partstat","reltype","rsvp","vcardSet","vcard3Set","design","strict","components","vcard3","vevent","vtodo","vjournal","valarm","vtimezone","daylight","standard","componentName","LINE_ENDING","DEFAULT_VALUE_TYPE","RFC6868_REPLACE_MAP","stringify","propIdx","propLen","designSetName","comps","noFold","jsName","groupName","paramName","paramDesign","_rfc6868Unescape","paramPropertyValue","propDetails","isDefault","force","Property","_parent","getDefaultType","_updateType","designSetChanged","_designSet","isDecorated","isMultiValue","isStructuredValue","_hydrateValue","index","_values","_decorate","_undecorate","_setDecoratedValue","getFirstParameter","parameters","setParameter","removeParameter","details","resetType","removeAllValues","getValues","setValues","setValue","_timezoneCache","_hydratedPropertyCount","_hydratedComponentCount","_components","_properties","_hydrateComponent","_hydrateProperty","getFirstSubcomponent","jCalLen","_removeObjectByIndex","jCalIndex","cache","_removeObject","nameOrObject","objects","cached","_removeAllObjects","nameOrComp","removeAllSubcomponents","addProperty","removeProperty","addPropertyWithValue","updatePropertyWithValue","nameOrProp","removeAllProperties","hydratedZone","RecurExpansion","ruleDates","exDates","complete","ruleIterators","ruleDateInc","exDateInc","exDate","ruleDate","_init","currentTry","_nextRecurrenceIter","_nextRuleDay","_nextExDay","_extractDates","propertyName","iters","iterTime","chosenIter","iterIdx","Event","_rangeExceptionCache","exceptions","rangeExceptions","strictExceptions","relateException","isRecurrenceException","recurrenceId","modifiesFuture","compareRangeException","THISANDFUTURE","findRangeException","rangeItem","getOccurrenceDetails","occurrence","utcId","startDate","endDate","rangeExceptionId","exception","startDiff","original","newStart","isRecurring","getRecurrenceTypes","_firstProp","_setProp","_setTime","attendees","propName","ComponentParser","parseEvent","parseTimezone","oncomplete","onerror","ontimezone","onevent","process","ical","auth","setOption","claim","config","prompt","Authorization","reject","statusText","existingIcs","jcal","ICAL","vcalendar","vprop","newIcs","catch"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}